{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPDJ0XkmRxxobiTYTdRN8Wi",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/dtabed/BC-survival-treatment/blob/master/SummerHealthTechnologySchool-DimesionalityRductionWorkshop\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "a4ou_oWcr04V",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 741
        },
        "outputId": "1d59808a-440f-43bd-8d81-42ef86f0b927"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting pacmap\n",
            "  Downloading pacmap-0.7.2-py3-none-any.whl (18 kB)\n",
            "Requirement already satisfied: scikit-learn>=0.20 in /usr/local/lib/python3.10/dist-packages (from pacmap) (1.2.2)\n",
            "Requirement already satisfied: numba>=0.57 in /usr/local/lib/python3.10/dist-packages (from pacmap) (0.58.1)\n",
            "Collecting annoy>=1.11 (from pacmap)\n",
            "  Downloading annoy-1.17.3.tar.gz (647 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m647.5/647.5 kB\u001b[0m \u001b[31m9.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from pacmap) (1.25.2)\n",
            "Requirement already satisfied: llvmlite<0.42,>=0.41.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.57->pacmap) (0.41.1)\n",
            "Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20->pacmap) (1.11.4)\n",
            "Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20->pacmap) (1.4.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20->pacmap) (3.5.0)\n",
            "Building wheels for collected packages: annoy\n",
            "  Building wheel for annoy (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for annoy: filename=annoy-1.17.3-cp310-cp310-linux_x86_64.whl size=552448 sha256=ae5a656bfd6e24133d37eda0517329912f139f341b316f6647a87af4123912c8\n",
            "  Stored in directory: /root/.cache/pip/wheels/64/8a/da/f714bcf46c5efdcfcac0559e63370c21abe961c48e3992465a\n",
            "Successfully built annoy\n",
            "Installing collected packages: annoy, pacmap\n",
            "Successfully installed annoy-1.17.3 pacmap-0.7.2\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "FileNotFoundError",
          "evalue": "[Errno 2] No such file or directory: 'X1.csv'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-2-70260b8c0ce9>\u001b[0m in \u001b[0;36m<cell line: 10>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;31m#read the features\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'X1.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m    910\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    911\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 912\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    913\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    914\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    575\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    576\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 577\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    578\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    579\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1405\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1406\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1407\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1408\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1409\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1659\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1660\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1661\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1662\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1663\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    857\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    858\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 859\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    860\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    861\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'X1.csv'"
          ]
        }
      ],
      "source": [
        "!pip install pacmap\n",
        "import pacmap\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from pandas import read_csv\n",
        "\n",
        "# loading dataset\n",
        "\n",
        "#read the features\n",
        "x = read_csv('X1.csv')\n",
        "\n",
        "X = x.values\n",
        "X = X.transpose()\n",
        "print(X.shape)\n",
        "\n",
        "#read the labels\n",
        "y = read_csv('Y1.csv')\n",
        "\n",
        "Y = y.values\n",
        "# defining and initiliazing the PacMap\n",
        "embedding = pacmap.PaCMAP(n_components=2, n_neighbors=None, MN_ratio=0.5, FP_ratio=2.0)\n",
        "\n",
        "# fit the data (The index of transformed data corresponds to the index of the original data)\n",
        "X_transformed = embedding.fit_transform(X, init=\"pca\")\n",
        "print(X_transformed)\n",
        "# visualize the embedding\n",
        "#fig, ax = plt.subplots(1, 1, figsize=(6, 6))\n",
        "#ax.scatter(X_transformed[:, 0], X_transformed[:, 1], cmap=\"Spectral\", c=y, s=0.6)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from sklearn import datasets\n",
        "import pacmap\n",
        "\n",
        "# Load the Iris dataset\n",
        "iris = datasets.load_iris()\n",
        "X = iris.data\n",
        "y = iris.target\n",
        "\n",
        "# Apply Pacmap to reduce dimensionality to 2D\n",
        "embedding = pacmap.PaCMAP(n_components=2, n_neighbors=None, MN_ratio=0.6, FP_ratio=2.0)\n",
        "X_pacmap = embedding.fit_transform(X)\n",
        "\n",
        "# Create a scatter plot\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.scatterplot(x=X_pacmap[:,0], y=X_pacmap[:,1], hue=y, palette='viridis', legend='full')\n",
        "\n",
        "# Set labels and title\n",
        "plt.xlabel('Pacmap Dimension 1')\n",
        "plt.ylabel('Pacmap Dimension 2')\n",
        "plt.title('Pacmap Visualization of Iris Dataset')\n",
        "\n",
        "# Add legend\n",
        "plt.legend(title='Species', loc='upper right')\n",
        "\n",
        "# Show plot\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "RJ9cmKecWgFo",
        "outputId": "a17b0db3-2b4b-433a-b0ab-0181387d8552"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install pacmap\n",
        "import pacmap"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 495
        },
        "id": "QqwghGmGLQoe",
        "outputId": "0d0b0ccb-4929-4db6-e096-e0f85ed1bdd0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pacmap in /usr/local/lib/python3.10/dist-packages (0.7.1)\n",
            "Requirement already satisfied: scikit-learn>=0.20 in /usr/local/lib/python3.10/dist-packages (from pacmap) (1.2.2)\n",
            "Requirement already satisfied: numba>=0.57 in /usr/local/lib/python3.10/dist-packages (from pacmap) (0.58.1)\n",
            "Requirement already satisfied: annoy>=1.11 in /usr/local/lib/python3.10/dist-packages (from pacmap) (1.17.3)\n",
            "Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from pacmap) (1.23.5)\n",
            "Requirement already satisfied: llvmlite<0.42,>=0.41.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.57->pacmap) (0.41.1)\n",
            "Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20->pacmap) (1.11.3)\n",
            "Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20->pacmap) (1.3.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20->pacmap) (3.2.0)\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "ContextualVersionConflict",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mContextualVersionConflict\u001b[0m                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-4-92595d85bb33>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mget_ipython\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msystem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'pip install pacmap'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mpacmap\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pacmap/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpkg_resources\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0m__version__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpkg_resources\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_distribution\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'pacmap'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mversion\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0m__all__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m\"pacmap\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pkg_resources/__init__.py\u001b[0m in \u001b[0;36mget_distribution\u001b[0;34m(dist)\u001b[0m\n\u001b[1;32m    524\u001b[0m         \u001b[0mdist\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRequirement\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdist\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    525\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mRequirement\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 526\u001b[0;31m         \u001b[0mdist\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_provider\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdist\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    527\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mDistribution\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    528\u001b[0m         \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Expected string, Requirement, or Distribution\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdist\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pkg_resources/__init__.py\u001b[0m in \u001b[0;36mget_provider\u001b[0;34m(moduleOrReq)\u001b[0m\n\u001b[1;32m    396\u001b[0m     \u001b[0;34m\"\"\"Return an IResourceProvider for the named module or requirement\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    397\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmoduleOrReq\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mRequirement\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 398\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mworking_set\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmoduleOrReq\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mrequire\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmoduleOrReq\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    399\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    400\u001b[0m         \u001b[0mmodule\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodules\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmoduleOrReq\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pkg_resources/__init__.py\u001b[0m in \u001b[0;36mrequire\u001b[0;34m(self, *requirements)\u001b[0m\n\u001b[1;32m    964\u001b[0m         \u001b[0mincluded\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0meven\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mthey\u001b[0m \u001b[0mwere\u001b[0m \u001b[0malready\u001b[0m \u001b[0mactivated\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mthis\u001b[0m \u001b[0mworking\u001b[0m \u001b[0mset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    965\u001b[0m         \"\"\"\n\u001b[0;32m--> 966\u001b[0;31m         \u001b[0mneeded\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresolve\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mparse_requirements\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequirements\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    967\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    968\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mdist\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mneeded\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pkg_resources/__init__.py\u001b[0m in \u001b[0;36mresolve\u001b[0;34m(self, requirements, env, installer, replace_conflicting, extras)\u001b[0m\n\u001b[1;32m    825\u001b[0m                 \u001b[0;32mcontinue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    826\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 827\u001b[0;31m             dist = self._resolve_dist(\n\u001b[0m\u001b[1;32m    828\u001b[0m                 \u001b[0mreq\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreplace_conflicting\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0menv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minstaller\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrequired_by\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mto_activate\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    829\u001b[0m             )\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pkg_resources/__init__.py\u001b[0m in \u001b[0;36m_resolve_dist\u001b[0;34m(self, req, best, replace_conflicting, env, installer, required_by, to_activate)\u001b[0m\n\u001b[1;32m    871\u001b[0m             \u001b[0;31m# Oops, the \"best\" so far conflicts with a dependency\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    872\u001b[0m             \u001b[0mdependent_req\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrequired_by\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mreq\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 873\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mVersionConflict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_context\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdependent_req\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    874\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mdist\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    875\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mContextualVersionConflict\u001b[0m: (numba 0.56.4 (/usr/local/lib/python3.10/dist-packages), Requirement.parse('numba>=0.57'), {'pacmap'})"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.datasets import fetch_openml\n",
        "from sklearn.manifold import TSNE\n",
        "import seaborn as sns\n",
        "# Load the MNIST dataset\n",
        "mnist = fetch_openml('mnist_784', version=1)\n",
        "X = mnist.data / 255.0  # Scale pixel values to [0, 1]\n",
        "y = mnist.target.astype(int)\n",
        "\n",
        "# Apply Pacmap to reduce dimensionality to 2D\n",
        "embedding = pacmap.PaCMAP(n_components=2, n_neighbors=None, MN_ratio=0.5, FP_ratio=2.0)\n",
        "X_pacmap = embedding.fit_transform(X)\n",
        "\n",
        "# Create a scatter plot\n",
        "#plt.figure(figsize=(8, 6))\n",
        "#sns.scatterplot(x=X_pacmap[:,0], y=X_pacmap[:,1], hue=y, palette='viridis', legend='full')\n",
        "\n",
        "# Set labels and title\n",
        "\n",
        "# Create a scatter plot\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.scatter(X_pacmap[:, 0], X_pacmap[:, 1], c=y, cmap=plt.cm.get_cmap(\"tab10\", 10), marker='.', alpha=0.6)\n",
        "plt.colorbar(label='Digit Label')\n",
        "plt.title('PacMap Visualization of MNIST Dataset')\n",
        "plt.xlabel('PacMap Dimension 1')\n",
        "plt.ylabel('PacMap Dimension 2')\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 653
        },
        "id": "quh8KW7YKNis",
        "outputId": "164aeb2d-5947-4b74-d1a1-a3ca95ff63d4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/datasets/_openml.py:968: FutureWarning: The default value of `parser` will change from `'liac-arff'` to `'auto'` in 1.4. You can set `parser='auto'` to silence this warning. Therefore, an `ImportError` will be raised from 1.4 if the dataset is dense and pandas is not installed. Note that the pandas parser may return different data types. See the Notes Section in fetch_openml's API doc for details.\n",
            "  warn(\n",
            "<ipython-input-6-08f03e90ab88>:23: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n",
            "  plt.scatter(X_pacmap[:, 0], X_pacmap[:, 1], c=y, cmap=plt.cm.get_cmap(\"tab10\", 10), marker='.', alpha=0.6)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install trimap\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.datasets import fetch_openml\n",
        "from trimap import TRIMAP\n",
        "\n",
        "# Load the MNIST dataset\n",
        "mnist = fetch_openml('mnist_784', version=1)\n",
        "X, y = mnist.data / 255.0, mnist.target.astype(int)\n",
        "\n",
        "# Apply TRIMAP to reduce dimensionality to 2D\n",
        "trimap = TRIMAP(n_dims=2, n_inliers=12)\n",
        "X_trimap = trimap.fit_transform(X)\n",
        "\n",
        "# Create a scatter plot\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.scatter(X_trimap[:, 0], X_trimap[:, 1], c=y, cmap=plt.cm.get_cmap(\"tab10\", 10), marker='.', alpha=0.6)\n",
        "plt.colorbar(label='Digit Label')\n",
        "plt.title('TRIMAP Visualization of MNIST Dataset')\n",
        "plt.xlabel('TRIMAP Dimension 1')\n",
        "plt.ylabel('TRIMAP Dimension 2')\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "uOylGqVpEZ8C",
        "outputId": "2ddc4c84-a918-4db5-db6e-467e8ef3316a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting trimap\n",
            "  Downloading trimap-1.1.4-py3-none-any.whl (15 kB)\n",
            "Requirement already satisfied: scikit-learn>=0.16 in /usr/local/lib/python3.10/dist-packages (from trimap) (1.2.2)\n",
            "Requirement already satisfied: numba>=0.34 in /usr/local/lib/python3.10/dist-packages (from trimap) (0.58.1)\n",
            "Collecting annoy>=1.11 (from trimap)\n",
            "  Downloading annoy-1.17.3.tar.gz (647 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m647.5/647.5 kB\u001b[0m \u001b[31m9.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: llvmlite<0.42,>=0.41.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.34->trimap) (0.41.1)\n",
            "Requirement already satisfied: numpy<1.27,>=1.22 in /usr/local/lib/python3.10/dist-packages (from numba>=0.34->trimap) (1.25.2)\n",
            "Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.16->trimap) (1.11.4)\n",
            "Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.16->trimap) (1.4.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.16->trimap) (3.5.0)\n",
            "Building wheels for collected packages: annoy\n",
            "  Building wheel for annoy (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for annoy: filename=annoy-1.17.3-cp310-cp310-linux_x86_64.whl size=552450 sha256=3d50ebd6bb6348cdc20df9937ee9fa52d7bab244daf52fbf19acb9e368fb3c51\n",
            "  Stored in directory: /root/.cache/pip/wheels/64/8a/da/f714bcf46c5efdcfcac0559e63370c21abe961c48e3992465a\n",
            "Successfully built annoy\n",
            "Installing collected packages: annoy, trimap\n",
            "Successfully installed annoy-1.17.3 trimap-1.1.4\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/datasets/_openml.py:968: FutureWarning: The default value of `parser` will change from `'liac-arff'` to `'auto'` in 1.4. You can set `parser='auto'` to silence this warning. Therefore, an `ImportError` will be raised from 1.4 if the dataset is dense and pandas is not installed. Note that the pandas parser may return different data types. See the Notes Section in fetch_openml's API doc for details.\n",
            "  warn(\n",
            "<ipython-input-5-bef07a2b8f58>:17: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n",
            "  plt.scatter(X_trimap[:, 0], X_trimap[:, 1], c=y, cmap=plt.cm.get_cmap(\"tab10\", 10), marker='.', alpha=0.6)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install umap-learn\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.datasets import fetch_openml\n",
        "from umap import UMAP\n",
        "\n",
        "# Load the MNIST dataset\n",
        "mnist = fetch_openml('mnist_784', version=1)\n",
        "X, y = mnist.data / 255.0, mnist.target.astype(int)\n",
        "\n",
        "# Apply UMAP to reduce dimensionality to 2D\n",
        "umap = UMAP(n_components=2, random_state=42)\n",
        "X_umap = umap.fit_transform(X)\n",
        "\n",
        "# Create a scatter plot\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.scatter(X_umap[:, 0], X_umap[:, 1], c=y, cmap=plt.cm.get_cmap(\"tab10\", 10), marker='.', alpha=0.6)\n",
        "plt.colorbar(label='Digit Label')\n",
        "plt.title('UMAP Visualization of MNIST Dataset')\n",
        "plt.xlabel('UMAP Dimension 1')\n",
        "plt.ylabel('UMAP Dimension 2')\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 862
        },
        "id": "BF_ESJyr8Yly",
        "outputId": "853d8d18-0b6c-4680-c279-87d0f4662355"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: umap-learn in /usr/local/lib/python3.10/dist-packages (0.5.6)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from umap-learn) (1.25.2)\n",
            "Requirement already satisfied: scipy>=1.3.1 in /usr/local/lib/python3.10/dist-packages (from umap-learn) (1.11.4)\n",
            "Requirement already satisfied: scikit-learn>=0.22 in /usr/local/lib/python3.10/dist-packages (from umap-learn) (1.2.2)\n",
            "Requirement already satisfied: numba>=0.51.2 in /usr/local/lib/python3.10/dist-packages (from umap-learn) (0.58.1)\n",
            "Requirement already satisfied: pynndescent>=0.5 in /usr/local/lib/python3.10/dist-packages (from umap-learn) (0.5.12)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from umap-learn) (4.66.4)\n",
            "Requirement already satisfied: llvmlite<0.42,>=0.41.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.51.2->umap-learn) (0.41.1)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.10/dist-packages (from pynndescent>=0.5->umap-learn) (1.4.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.22->umap-learn) (3.5.0)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/datasets/_openml.py:968: FutureWarning: The default value of `parser` will change from `'liac-arff'` to `'auto'` in 1.4. You can set `parser='auto'` to silence this warning. Therefore, an `ImportError` will be raised from 1.4 if the dataset is dense and pandas is not installed. Note that the pandas parser may return different data types. See the Notes Section in fetch_openml's API doc for details.\n",
            "  warn(\n",
            "/usr/local/lib/python3.10/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n",
            "  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n",
            "<ipython-input-2-35d89f1044a1>:17: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n",
            "  plt.scatter(X_umap[:, 0], X_umap[:, 1], c=y, cmap=plt.cm.get_cmap(\"tab10\", 10), marker='.', alpha=0.6)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAp8AAAIjCAYAAABF4HAGAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzdd3xb1d348c+592pb8p6Js/dmhU3CClBGgVJWRwoP9GkpD6V0PKWDQkuh4ynl15bSTSmrpYNRygq7lBVGgBASsuPE8V7a0r33/P6QLUu25BUndsh55yWw7jxXvrK+OuN7hJRSoiiKoiiKoij7gDbWBVAURVEURVEOHCr4VBRFURRFUfYZFXwqiqIoiqIo+4wKPhVFURRFUZR9RgWfiqIoiqIoyj6jgk9FURRFURRln1HBp6IoiqIoirLPqOBTURRFURRF2WdU8KkoiqIoiqLsMyr4VJRxTgjB9ddfP9bF6FeOP/7xjwgh2LZt2z4tx1idd7h+/OMfM23aNHRdZ8mSJWNdHEVRlHFDBZ/KuHb99dcjhKClpSXn+gULFrB8+fL0823btiGEQAjBjTfemHOfT3ziEwghKCgoyHvepUuXIoTg9ttvz7m+JwDqebjdbmbNmsWVV15JY2Nj3uP+4x//QAjB7373u7zbrFq1CiEEP/vZz/JucyC46aabePDBB8e6GCPy5JNP8rWvfY2jjz6aO+64g5tuuinvtp/5zGcQQhAIBIhGo/3Wb9y4MX2f/d///V96+XPPPZde/sYbb+Q8bt97fPny5SxYsCBrWSKR4P/9v//HQQcdRCAQoKioiPnz5/PZz36W9evXA2Td6wM9nnvuubzXOWXKlPR2mqZRVFTEwoUL+exnP8urr76ad7+hGE/3yrp167j++uvH/ZcjRRlLxlgXQFH2BrfbzX333ce3vvWtrOXhcJiHHnoIt9udd9+NGzeyevVqpkyZwj333MPnP//5vNt+97vfZerUqcRiMV588UVuv/12Hn30UdauXYvX6+23/emnn05hYSH33nsvl112Wc5j3nvvvei6zoUXXghANBrFMMbfW/VTn/oUF154IS6Xa68c/6abbuK8887j7LPP3qfnHQ3PPPMMmqbx+9//HqfTOej2hmEQiUT45z//yfnnn5+17p577sHtdhOLxfLuf/311/PPf/5zRGX92Mc+xmOPPcZFF13E5ZdfTjKZZP369TzyyCMcddRRzJkzh7vuuitrnz/96U+sWrWq3/K5c+cOeK4lS5bw5S9/GYBgMMj777/PX//6V37729/ypS99iVtuuWVE15DvXhkL69at44YbbmD58uVMmTJlrIujKOPS+PtEU5RR8JGPfIR//OMfvP322yxevDi9/KGHHiKRSHDqqafyzDPP5Nz37rvvpqKigp/85Cecd955bNu2Le+HyGmnncahhx4KwGWXXUZpaSm33HILDz30EBdddFG/7V0uF+eddx533HEH9fX11NTUZK2PxWI88MADnHzyyVRUVAAMGCiPJV3X0XX9gDnvcDQ1NeHxeIYUeELqvjj66KO57777+gWf9957L6effjp///vfc+67ZMkSHnnkEd58800OPvjgYZVz9erVPPLII3z/+9/nG9/4Rta6X/ziF3R0dADwyU9+MmvdK6+8wqpVq/otH8yECRP67fPDH/6Qiy++mJ/+9KfMnDlzwC97iqJ8OKhmd+VD6cgjj2Tq1Knce++9WcvvueceTj31VEpKSvLue++993LeeedxxhlnpGsph+qEE04AYOvWrXm3+eQnP4lt2/z5z3/ut+5f//oXnZ2dfOITn0gv69vXMhgMcvXVVzNlyhRcLhcVFRWcfPLJvPnmm+ltpkyZwmc+85l+x1++fHlWN4VEIsF1113HIYccQmFhIT6fj2OPPZZnn3120Gvt2/eyp4tErkdmWf7v//6Po446itLSUjweD4cccgh/+9vfso4thCAcDnPnnXf2O0a+Pp+//OUvmT9/Pi6Xi5qaGr7whS+kg6fM61+wYAHr1q3j+OOPx+v1MmHCBH70ox8Ner0Apmnyve99j+nTp+NyuZgyZQrf+MY3iMfjWWW/4447CIfD6bL/8Y9/HPTYF198MY899lhWmVevXs3GjRu5+OKL8+73P//zPxQXF4+oX/DmzZsBOProo/ut03Wd0tLSYR9zuDweD3fddRclJSV8//vfR0qZXren98r27du54oormD17Nh6Ph9LSUj7+8Y/3u3eSySQ33HADM2fOxO12U1payjHHHMOqVauytlu/fj3nnXceJSUluN1uDj30UB5++OH0+j/+8Y98/OMfB+D4448fUncERTkQqeBT+dC66KKL+POf/5z+MGtpaeHJJ58c8IP81VdfZdOmTVx00UU4nU7OPfdc7rnnniGfs+fDfKAP7eOOO46JEyfmDGrvvfdevF7vgM2Hn/vc57j99tv52Mc+xi9/+Uu+8pWv4PF4eP/994dczh5dXV387ne/Y/ny5fzwhz/k+uuvp7m5mVNOOYU1a9YM61jnnnsud911V9bj6quvBkjX4gLp/oXf/e53uemmmzAMg49//OP861//Sm9z11134XK5OPbYY9PH+u///u+8577++uv5whe+QE1NDT/5yU/42Mc+xq9//WtWrFhBMpnM2ra9vZ1TTz2VxYsX85Of/IQ5c+bwv//7vzz22GODXuNll13Gddddx8EHH8xPf/pTli1bxs0335zuItFT9mOPPRaXy5Uu+3HHHTek108IwT/+8Y/0snvvvZc5c+YMWKMZCAT40pe+xD//+c+sLyBDMXnyZCD1pcw0zWHtO5oKCgo455xz2LVrF+vWrUsv39N7ZfXq1bz00ktceOGF/OxnP+Nzn/scTz/9NMuXLycSiaSPcf3113PDDTdw/PHH84tf/IJvfvObTJo0Kev1fO+99zjiiCN4//33+frXv85PfvITfD4fZ599Ng888ACQem9fddVVAHzjG99Il2ew7giKcsCRijKOfec735GAbG5uzrl+/vz5ctmyZennW7dulYD88Y9/LNeuXSsB+e9//1tKKeVtt90mCwoKZDgclitXrpQ+n6/f8a688kpZW1srbduWUkr55JNPSkC+9dZbWdvdcccdEpBPPfWUbG5ulnV1dfLPf/6zLC0tlR6PR+7cuXPA6/rqV78qAblhw4b0ss7OTul2u+VFF12UtS0gv/Od76SfFxYWyi984QsDHn/y5Mly5cqV/ZYvW7Ys6/UyTVPG4/Gsbdrb22VlZaW89NJLByxHz2uwdevWnGVobm6WkyZNkgsXLpShUCi9PBKJZG2XSCTkggUL5AknnJC13Ofz5byGvudtamqSTqdTrlixQlqWld7uF7/4hQTkH/7wh6zrB+Sf/vSn9LJ4PC6rqqrkxz72sZzX0WPNmjUSkJdddlnW8q985SsSkM8880x6Wb77K5fMbc877zx54oknSimltCxLVlVVyRtuuCHrvu7x7LPPSkD+9a9/lR0dHbK4uFieddZZA5Zh2bJlcv78+enntm2nX5PKykp50UUXydtuu01u3759wDJ/4QtfkMP9+Jg8ebI8/fTT867/6U9/KgH50EMPpZft6b3Sd38ppXz55Zf73QOLFy8esGxSSnniiSfKhQsXylgsll5m27Y86qij5MyZM9PL/vrXv0pAPvvsswMeT1EOZKrmU/nQmj9/PosWLeK+++4DUrVIH/3oR3MOBIJUk+pf/vIXLrjgAoQQQKoZvaKiIm/t50knnUR5eTm1tbVceOGFFBQU8MADDzBhwoQBy9bT7y2z9vPvf/87sVgsq8k9l6KiIl599VXq6+sH3G4odF1P90u0bZu2tjZM0+TQQw8ddi1aJsuyuOiiiwgGgzzwwAP4fL70Oo/Hk/65vb2dzs5Ojj322BGf76mnniKRSHD11Vejab1/0i6//HICgUBWLRmkatky+x06nU6WLl3Kli1bBjzPo48+CsA111yTtbxnAE3f84zExRdfzHPPPUdDQwPPPPMMDQ0NA9bU9ygsLOTqq6/m4Ycf5q233hry+YQQPPHEE9x4440UFxdz33338YUvfIHJkydzwQUX9Ou2sDf1jMwPBoPpZXt6r2Tun0wmaW1tZcaMGRQVFWUdo6ioiPfee4+NGzfmPE5bWxvPPPMM559/PsFgkJaWFlpaWmhtbeWUU05h48aN7Nq1a1jXqygHMhV8Kvu9nkAxl4svvpi//vWvbNq0iZdeemnAD/Inn3yS5uZmli5dyqZNm9i0aRNbt27l+OOP57777sO27X773HbbbaxatYpnn32WdevWsWXLFk455ZRBy7xo0SIWLFiQDowhFYiWlZUNuv+PfvQj1q5dS21tLUuXLuX6668fNHAayJ133smiRYvSfd3Ky8vTfU9H6lvf+hbPPPMM9957L9OnT89a98gjj3DEEUfgdrspKSmhvLyc22+/fcTn2759OwCzZ8/OWu50Opk2bVp6fY+JEyf2u2eKi4tpb28f9DyapjFjxoys5VVVVRQVFfU7z0h85CMfwe/385e//IV77rmHww47rN/58vniF79IUVHRsPt+ulwuvvnNb/L+++9TX1/PfffdxxFHHMH999/PlVdeOYKrGJlQKASA3+9PL9vTeyUajXLddddRW1uLy+WirKyM8vJyOjo6so7x3e9+l46ODmbNmsXChQv56le/yjvvvJNev2nTJqSUfPvb36a8vDzr8Z3vfAdIDTJTFGVoVPCpjGs9I71z5T8EiEQiA44Gv+iii2hpaeHyyy+ntLSUFStW5N22p3bz/PPPZ+bMmenHX/7yF3bt2sXzzz/fb5+lS5dy0kknsXz5cubOnZtV8zaYT37yk3zwwQe8/vrrNDQ08Oyzz3L++ecPmlbp/PPPZ8uWLfz85z+npqaGH//4x8yfPz+rz2K+gNyyrKznd999N5/5zGeYPn06v//973n88cdZtWoVJ5xwQs5geygefPBBfvjDH/Ld736XU089NWvdv//9b8466yzcbje//OUvefTRR1m1ahUXX3xx1kCTvSnfSPmhnn+gLzt7yuVyce6553LnnXfywAMPDKnWs8dIaz8zVVdXc+GFF/LCCy8wc+ZM7r///n3WF3Tt2rUA6WB7NO6V//mf/+H73/8+559/Pvfffz9PPvkkq1atorS0NOv+Pu6449i8eTN/+MMfWLBgAb/73e84+OCD0/l4e7b9yle+wqpVq3I+hvolQVEUlWpJGed6BkRs2LCB2trarHWRSIS6uroBA8pJkyZx9NFH89xzz/H5z38+b2DXk//zggsu4Lzzzuu3/qqrruKee+7h+OOP34OryXbRRRdx7bXXcu+99zJ58mQsyxq0yb1HdXU1V1xxBVdccQVNTU0cfPDBfP/73+e0004DUjV5uZpMt2/fzrRp09LP//a3vzFt2rR08vsePbU5w/XBBx+wcuVKzj777H6peyDVtcDtdvPEE09k5em84447+m071CAv8x7JvLZEIsHWrVs56aSThnsZec9j2zYbN27MGkDS2NhIR0dHuhx76uKLL+YPf/gDmqZlDWQaiquvvppbb72VG264gaKiohGXweFwsGjRIjZu3EhLSwtVVVUjPtZQhEIhHnjgAWpra9Ov7WjcK3/7299YuXIlP/nJT9LLYrFYzvdGSUkJl1xyCZdccgmhUIjjjjuO66+/nssuuyx9XzkcjkHvp7355URRPixUzacyrp144ok4nU5uv/32fjVxv/nNbzBNMx1w5XPjjTfyne98h//5n//Ju80DDzxAOBzmC1/4Auedd16/xxlnnMHf//73rJQ6e2rSpEkce+yx/OUvf+Huu+9m6tSpHHXUUQPuY1lWvybHiooKampqsso2ffp0XnnlFRKJRHrZI488Ql1dXda+PbWAmTVJr776Ki+//PKwrycUCnHOOecwYcKEdNqbvnRdRwiRVQO7bdu2nLPT+Hy+IfU5POmkk3A6nfzsZz/Luo7f//73dHZ2cvrppw/7WnL5yEc+AsCtt96atbwnMfponef444/ne9/7Hr/4xS+GHfT11H4+9NBDQ8pWsHHjRnbs2NFveUdHBy+//DLFxcWUl5cPqwzDFY1G+dSnPkVbWxvf/OY30/fNaNwruq73qyX9+c9/3q8FoLW1Net5QUEBM2bMSL+nKioqWL58Ob/+9a/ZvXt3v/M0NzdnlQXYp/1lFWV/o2o+lXGtoqKC6667jm9961scd9xxnHXWWXi9Xl566SXuu+8+VqxYwZlnnjngMZYtW8ayZcsG3Oaee+6htLQ0b/B31lln8dvf/pZ//etfnHvuuSO+nr4++clP8tnPfpb6+nq++c1vDrp9MBhk4sSJnHfeeSxevJiCggKeeuopVq9enVW7c9lll/G3v/2NU089lfPPP5/Nmzdz99139+t/ecYZZ/CPf/yDc845h9NPP52tW7fyq1/9innz5qX74A3VDTfcwLp16/jWt77FQw89lLVu+vTpHHnkkZx++unccsstnHrqqVx88cU0NTVx2223MWPGjKw+dgCHHHIITz31FLfccgs1NTVMnTqVww8/vN95y8vLufbaa7nhhhs49dRTOeuss9iwYQO//OUvOeyww4adCD2fxYsXs3LlSn7zm9/Q0dHBsmXLeO2117jzzjs5++yzR61WXNO0fjNzDccXv/hFfvrTn/L2229nDfTK5e233+biiy/mtNNO49hjj6WkpIRdu3Zx5513Ul9fz6233jqqCf137drF3XffDaS+rKxbt46//vWvNDQ08OUvfzkrndZo3CtnnHEGd911F4WFhcybN4+XX36Zp556ql8qtHnz5rF8+XIOOeQQSkpKeP311/nb3/6W1ef1tttu45hjjmHhwoVcfvnlTJs2jcbGRl5++WV27tzJ22+/DaSS/uu6zg9/+EM6OztxuVzpgYuKonQbw5H2ijJkd999tzziiCOkz+eTLpdLzpkzR95www1ZaU+klDlT0uSSmYamsbFRGoYhP/WpT+XdPhKJSK/XK8855xwpZW+6n9WrV+/RdbW1tUmXyyUBuW7dupzbkJHiKB6Py69+9aty8eLF0u/3S5/PJxcvXix/+ctf9tvvJz/5iZwwYYJ0uVzy6KOPlq+//nq/VEu2bcubbrpJTp48WbpcLnnQQQfJRx55RK5cuVJOnjw5bzkyX4OelEcrV66UQM5HZhqc3//+93LmzJnp3+Mdd9yRTqmVaf369fK4446THo8n6xj5Ujz94he/kHPmzJEOh0NWVlbKz3/+87K9vT1rm76phnrkut5cksmkvOGGG+TUqVOlw+GQtbW18tprr+13H4401VI+g6Va6qvn9Rws1VJjY6P8wQ9+IJctWyarq6ulYRiyuLhYnnDCCfJvf/tb3vKMNNVSz/0ghJCBQEDOnz9fXn755fLVV1/Nuc+e3ivt7e3ykksukWVlZbKgoECecsopcv369f1Skd14441y6dKlsqioSHo8Hjlnzhz5/e9/XyYSiazzbN68WX7605+WVVVV0uFwyAkTJsgzzjij32v129/+Vk6bNk3quq7SLilKDkLKfdTLX1EURVEURTngqT6fiqIoiqIoyj6jgk9FURRFURRln1HBp6IoiqIoirLPqOBTURRFURTlQyoYDHL11VczefJkPB4PRx11FKtXrx7TMqngU1EURVEU5UPqsssuY9WqVdx11128++67rFixgpNOOoldu3aNWZnUaHdFURRFUZQPoWg0it/v56GHHsqaCOOQQw7htNNO48YbbxyTcqkk84OwbZv6+nr8fr+aNk1RFEVR9hNSSoLBIDU1NWjavm/ojcViWbPMjSYpZb+YxOVyZU1FC2CaJpZl4Xa7s5Z7PB5efPHFvVK2IRnLJKP7g7q6uryJs9VDPdRDPdRDPdRjfD/q6ur2eewQjUalr7x8r11TQUFBv2WZk4BkOvLII+WyZcvkrl27pGma8q677pKapslZs2bt2xclg6r5HITf7wegrq6OQCAwJmVIJpM8+eSTrFixAofDMSZlUHqp38f4on4f44v6fYwfB/rvoquri9ra2vTn+L6USCQINzfz38+9irOgYHSPHQrx6+WH94tL+tZ69rjrrru49NJLmTBhArquc/DBB3PRRRfxxhtvjGq5hkMFn4PoqdYOBAJjGnx6vV4CgcAB+QdkvFG/j/FF/T7GF/X7GD/U7yJlLLvMOQsKcBXsneB3qHHJ9OnTef755wmHw3R1dVFdXc0FF1zAtGnT9kq5hkKNdlcURVEURfmQ8/l8VFdX097ezhNPPMFHP/rRMSuLqvlUFEVRFEX5kHriiSeQUjJ79mw2bdrEV7/6VebMmcMll1wyZmVSNZ+KoiiKoigfUp2dnXzhC19gzpw5fPrTn+aYY47hiSeeGNOuGKrmU1EURVEU5UPq/PPP5/zzzx/rYmRRNZ+KoiiKoijKPqOCT0VRFEVRFGWfUcGnoiiKoiiKss+o4FNRFEVRFEXZZ1TwqSiKoiiKouwzKvhUFEVRFEVR9hkVfCqKoiiKoij7jAo+FUVRFEVRlH1GBZ+KoiiKoijKPqOCT0VRFEVRFGWfUdNrKvsFaUts2wZAN/QxLo2iKIqiKCOlgk9ln7Ism2BrjPdfqmfXBx0YDo0Fx05g2sHltO4M07itk0hXgmTCpGlHFx1NEaKdJtLqPYZmCPxlbgKlHibMLGLe0dV4/K6xuyhFURRFUYZMBZ/KXmdbNg1bu6jf2MGmNxrobNuN09eAbTmItU9i14YODJdASomVGMLxTElnQ5TOhih177Xx6sNbmLqkjCkLy/D6nXgLnRQUufH4nenzt9WHQUBRhZeWuiCb1zTjcOlMXVxGeW1gL78CiqIoiqL0UMGnsldJW/L203VseqOJpu1BnIFdlC/8Fw5vO9LWiDTPpm39aZhxx2BHyrFMdJ8DtrzZwpY3W9Ac4Au4KZtYwKLjJ1JU7eXeX79DsCmKnrRx22Ale4+1+pFtGC4oneCnqNzHjEMrcBc4aKsP43Dp1M4twe0brGyKoiiKogyVCj6VvUbakvqtHby1agfRYBKAwqn/weFtJ95VhTASeCvWE9q9kHj71IGONORz2kkItsYIdcTY+m4LdSU6roQk6hY4DUFp0MbZva0AHIAzCeb2IBu2BNnwWj1CAyE0kKAbGlUzAhSV+3B5Dfylbpze1Di9eDiJo0gFpoqiKIoyHCr4VPaKHe+3sfqRLTRs6ULKVPAoAGlrWEk3Ugpk0g0eiRUvGPXzSwvavBDXBQ4h0W0IuzVKgjaSVJqHYj0VfEYklBsaLk1SnxRIC2R3wGtbNnXvdVBHR/rYwpBMOBke+OkbLDlxChNnFuMtclG/sZNEJEmgzEPV9EKEEKN+XYqiKIqyv1PBpzLqmncGeez2dzATFpKexvGU9g9Owlv1HomuSsxYESCxYkV5jjT0Gs9cvAnotCSlQRsbsAUYqQHzGIBTCBK2xLQhKW2qDEF9cujHD7YmeOHejb0LBBguDbfPQe2cYmYdVkXNzCI0XWU0UxRFUZQeKvhURpWUkgd/+gZmws4ZOlrxQoLbl4ImARtsA+ibOmnPgs4eThNqWyy07jOI1BlT5QBazVT9pgRaTOiw9vC8EsyYTSgW5/3/NLD+5QaKK33MOKSMoqoCqqcXUlDs3rNzKIqiKMp+TgWfyqgxkxYP/uxNEmE7vSx3w7PRHQX2hH4jMXiTtkZvwKllLKN7mZ2xbdyGyAhLko+0oW13mNceCacWCJi6uISjzplFUaUXKSW7N3XS2RzB6TGonVuC063ekoqiKMqHm/qkU0ZFNJTgid+upXFjsHuJHCQ87Ak8te7/D7R1z/rh96EU5J7Gq+8ZY+mlffceRRK2rmlj65pXqJoRoLjCS8vOMLZlY9uSD15rYP6xE6ieUYima3Q0RJASiio9GA6VWF9RFEX5cBg3ndFeeOEFzjzzTGpqahBC8OCDD2at/8xnPoMQIutx6qmnDnrc2267jSlTpuB2uzn88MN57bXX9tIVHLikTKVTqt/YMYy9MsPCwW7DPakhzR9C9j+qyHrIPP9GQ8OmLt5/qYHmHUFad4Vp3x1hy1st/PNnb/O7r7zAb656jr/evJpHf/UOL/19E7HQMDqjKoqiKMo4Nm6Cz3A4zOLFi7ntttvybnPqqaeye/fu9OO+++4b8Jh/+ctfuOaaa/jOd77Dm2++yeLFiznllFNoamoa7eIf0MxkKom7TLdjDydAG0rtYk8D+oHBToBtgWVKgi0x3n1uF+88t2Osi6UoiqIoo2LcNLufdtppnHbaaQNu43K5qKqqGvIxb7nlFi6//HIuueQSAH71q1/xr3/9iz/84Q98/etf36PyKr10Q8PhHm6z8EDBpCA7gO1pnh+ZoYTCPduM1xB39SPbWbBsIl41jaiiKIqynxs3wedQPPfcc1RUVFBcXMwJJ5zAjTfeSGlpac5tE4kEb7zxBtdee216maZpnHTSSbz88st5zxGPx4nH4+nnXV1dACSTSZLJsWn67DnvWJ1/KGYfUcHWd5owkzYDh3s94d1wa0dH1tw9WG/SzDP0/VnkaWQXes//R6cJfqieumstp12+aJ+ec3+wP7w/DiTq9zF+HOi/iwP1uvcH+03weeqpp3LuuecydepUNm/ezDe+8Q1OO+00Xn75ZXS9f61bS0sLlmVRWVmZtbyyspL169fnPc/NN9/MDTfc0G/5k08+idfr3fML2QOrVq0a0/MPpnL5WJdg36o5IbxPzycJ8eijO/fpOfcn4/39caBRv4/x40D9XUQio53DRBkt+03weeGFF6Z/XrhwIYsWLWL69Ok899xznHjiiaN2nmuvvZZrrrkm/byrq4va2lpWrFhBIBAYtfMMRzKZZNWqVZx88sk4HON3OkcpJXd+4z8kY/lqP/dto7Yccr1nf731s/2vQ+iSCSdEqH/Gh7R6j5/rfPnrbPPVmvYvb88Sp1uw8uZjBy74AWh/eX8cKNTvY/w40H8XPS2Xyviz3wSffU2bNo2ysjI2bdqUM/gsKytD13UaGxuzljc2Ng7Yb9TlcuFy9e9X53A4xvzNOx7KMJiZB1fx3gv15A/69nUAuqfnFN3H6R8s2hZgZoap/fulDtwwn1mu/IFyzxppi3H/+x9L+8P740Cifh/jx4H6uzgQr3l/MW5Guw/Xzp07aW1tpbq6Oud6p9PJIYccwtNPP51eZts2Tz/9NEceeeS+KuYBZ+5RE0AbL8N2RDp0HK7h7jH8M/R9jQZ/zYSmcn0qiqIo+79xE3yGQiHWrFnDmjVrANi6dStr1qxhx44dhEIhvvrVr/LKK6+wbds2nn76aT760Y8yY8YMTjnllPQxTjzxRH7xi1+kn19zzTX89re/5c477+T999/n85//POFwOD36XRl9/pLxNn2k6A5BB0t6v+fn2dvKawv2+jkURVEUZW8bN83ur7/+Oscff3z6eU+/y5UrV3L77bfzzjvvcOedd9LR0UFNTQ0rVqzge9/7XlYT+ebNm2lpaUk/v+CCC2hubua6666joaGBJUuW8Pjjj/cbhKSMnl0b2rPnrcwydjWiYi+dWyLTwe2eX9/AxzjpM3P38PiKoiiKMvbGTfC5fPlypMzfePnEE08Meoxt27b1W3bllVdy5ZVX7knRlGHYvbmj+6e+KZXy92dkwC3GxnDKIrtrVYfb9J4r6VS+4zQXCSxDNbsriqIo+79x0+yufDhEg33zquWekz3XhJky4797S66gcii9LwerOR1Oo37fV6Q3r6jIef6QA55Y7OVnj2ygZWdoyOdRFEVRlPFIBZ/KqMpdey37PAY9yqiWqS/R59F3Wf799l7d7EDzz6+d7MAyNHZGE6x5agdm0tpr5VAURVGUvU0Fn8qomjinuE8klS8YHa7hBrDjS95usIPYWgz15U6ELqhyGkSDCWIhc1TLpiiKoij7kgo+lVE156hqXN4970qcHWKOVgC750Za+zmSkLnTCa8sLCDh1lgY15nbYOHyOnD5xk1XbUVRFEUZNhV8KqPKMHSO+ti0rGWpwEt0PwYn8/y8twy3TrW3b2bmv4HpDNyk3/e8AihKwMX1ks+0GZzWICn0O1l0wkQcTjXwSFEURdl/qSoUZdT5S7zpn/sPxBF5RodnLhP91gwtbB2+fHWqe3Pkfd/jy1zLBWgaLKgt5uBTJxMLJfEVunAXqBk7FEVRlP2bCj6VUZeI9vZJzJ1oKXNUd2bj+nhKtrR39ATYA4bSAlweHcNp4C104it04SvsP+WroiiKouyPVPCpjDqv34nQQVqQ1AEJDjtfbWJmHejernMcXbmDyFwN6MNTMcmPy2uQiFn4S8fbjFGKoiiKsmdU8KmMuqpphZRP9NO0PUjQLYg7BNg25V3Q02icHWb21oTuf+PYMw3ciD+UMNTh0XG4Uj1Ea+eVMHVR+SiWT1EURdmXPiX/QIEc3ZarkIzz81E94r6nBhwpo05oguNXzkbTwZ2UbJjg5P1JbpLOIeybc9nohKQy49/A50vlK+37SB1jZDMZ5Uoq3/d4AjjzqiUs/8Qcll08i8M+MqU7EFUURVGUkbEsi29/+9tMnToVj8fD9OnT+d73vjfgrJJ7m6r5VPaKspoAJ3x6Ls//5QOOWhdDaKANMdnl3mh4l/Qd3tQzJ3t2jWtP4Jn7GAM/z3/uXrlmUxKA0OGsq5ZQPbVwiEdVFEVRlMH98Ic/5Pbbb+fOO+9k/vz5vP7661xyySUUFhZy1VVXjUmZVPCp7DWzD6+msMLLbb9eQ0WHNWa9OfsGnpnL801pORRxPZU83jOMnO89JbGBhAFoULW4jI9fPBeXZ2gj2TuTJs+3hwhbFjO9bg4JeBFi/+krqyiKouw7L730Eh/96Ec5/fTTAZgyZQr33Xcfr7322piVSTW7K3uVv9hNVVf/wHN0QqWB6h73/mxInT6NuGtkb6GwE5qLdboCBq9McxIzhvaKhEyLH21t4Ld1TdxX38aPt+5mVWvXiMqgKIqi7L+6urqyHvF4POd2Rx11FE8//TQffPABAG+//TYvvvgip5122r4sbhYVfCp7lTfgpGKSL+d86kM3nPTs+ZaNnvTRpcSw7IzryteDtD9vAlp9Gi/P8/CaluSpIQaQb3VFWBuKMtXrYnaBGwk81NQxpn13FEVRlH2vtraWwsLC9OPmm2/Oud3Xv/51LrzwQubMmYPD4eCggw7i6quv5hOf+MQ+LnEv1eyu7FVCExx57kweunXNyCc439MyMLxwVAgxpGDOYYMv1vdcvcHmQEdIOKAlYFBf6gAN7m9oY7rXzZKAd4C9wJSpTgSO7mZ2pyZI2vZ+lqRKURRF2VN1dXUEAoH0c5cr96j6+++/n3vuuYd7772X+fPns2bNGq6++mpqampYuXLlvipuFhV8Kntd1dRCpi0qY+s7LcgxCkBzRoIDRGv5+lBmBnlFYYk2wpAvYYCpg3BqHFropSVpsTYUzRl8vtUV4fXOEAIIGAYFusZ7oShC2ngbdnGsR6OjxEFJzcQRlUVRFEXZ/wQCgazgM5+vfvWr6dpPgIULF7J9+3ZuvvlmFXwqH16GQ+f4T83F89AmNrzagBnPTCqfae/U3eWtxBxGdWGuQ+h5lvfoOXTPaTK3TRiCFr+GtzVKOGgT9OpYhf1HLq3uDPP/tjXSnjTZHU8SlzYlhk5bwmTO2y8xc+PbdMRC/NXhYMGyEznq4xerwUeKoihKWiQSQdOye1nquo5tj1VtkAo+lX3E7XOw/OK51MwqZtXv1jH8WdXzNZ6LHGuG19A+UCqkvuv7Ls89fWi2vuskEiEFug1RTWOLNJnQbuNrbiMxsRSnu/dt+UJbFx2mScS26UiaCE0QtSWOlt1M2vQunmA7SdOkM9TF6of+hsPlYulHzxvskhVFUZQDxJlnnsn3v/99Jk2axPz583nrrbe45ZZbuPTSS8esTCr4VPYpw9ApneijdWeQgUO9gQbv9M3ZmXF8wOy3f/5ANFfuzpHUGw60X/+zC0pCNke9H2VLjWBO0Vsc5tuIyzKo3/Expsw6Lr1l1Lb5IBwjZNnYgLAk2DaBRAJ3NISl6YQKfHjiUXyxCM8/8xSLTj4Nt9c3gqtQFEVRPmx+/vOf8+1vf5srrriCpqYmampq+O///m+uu+66MSuTCj6Vfap8kh9/ibs7+MxBmCB7GrRzJWPIDuV8gNX9s01P4NnnkPkGEA3QrxOGH4TmCkD7ntUGgm5IOgS+hMXx0depnPACLs2B5rVo7riDkmAJAf8CgqbFqx1huiw763hhCcJTwNrZh9BaUoGl6dTWb2Hi7m1smTyPre9v5/8Wz8ZrqNmRFEVRDnR+v59bb72VW2+9dayLkqZSLSn7lL/EzcxDK9GdfW+97jBNahnPbQbL1WkCXg1muARTXIJ84VbffpBD6Rc5eMP9yNIb2Trosou4qwN/yTZ0W2BFK/F4piK0EKHg+0gp+dOuFrYGI6lOq30eIV+ANfOXktQNNGnz/qwlPLnsbN6dfRCPBRN8c+NOYtbY9edRFEVRlHxUzaeyz5VP8uMtcBFsi5OdDF6Q+j5k05uXqecWzd2wHUdi2RBNgANIDnDekQzESZ01NRdSjiMO8Cx1BX07CpgabJzkRi8oYEeRRrmzkCLPTuIOJ2bAIJmIEonu5L6dW/lzQ5xwIgZGjvQZmiDpdLG7spZAqIOugiIk4I5HsWJRXq1P8Fp5EceVqek6FUVRlPFFBZ/KPldY4cGRnhkoMzyTpOoyRZ4xQ33Hjaeem6TyX0aH2VA+9GFJApGxpRjiXjagYyN6QldHjFBRHIerljOjTjbVwJrAEuz4NvzWZjrabdBcFDev5T5zGj6jhqLODqKllXlKD6bDSXthKVLTQEpM24FmmoTCQda9v57jjj18SGVVFEVRlH1FBZ/KPmclJQUlHjpaothJAAFaEvQ4Ag2kQFouyN+ITv+a0BGmF5I20g4DSSw7Sae/mLjbgyduURTNPGr/kDPzjLpTYBg6ukNgmTY2DRRPfwEDk0S4nGjbZJAGE2ve5aDCj7PwxIn8efNrrItXsoWPMTOxDU9rIWEqmVndQdQQTLC3EbTdqab2AWptpaaTSqAqSDocaLokJCUvbN3NZ4+RaCr1kqIoijKOqOBT2ecMh4av0EVJlY+Opihm3AbbDbYDKbqHD8nBbs09D6iklNhmPVb8PTRHLdIowZuIEvW4eGeqi7l1CcqDMkcNqez+r8Tu7pdaNbGEkgkFNGzuJNjeTun8R3EE6pFSw1f9Ht6uaprXnoVTN3m2dhd3bRbUhUEzdCJWNd61xRR1aJQDBTsFE+db7Ap46fIFUtc62DB8kapJtoWBLSQOLcHb/mKeae3iJNX0riiKoowjasCRss8JTbBw+USKKn2UVPsygiodpDP1yGv4g3x6hi4ltN4hTD1rpEyCFkAYFWhS4Ii3UNkRY35dkldmOrEGCPgk0Oa36Qg0UjCxnYo575A0O3D4mnH4WkgGy7GiRSSjAQx3J3pBB2ZxFG/zbmrfepP567ZSvb2R8p0a/naD1gKNtoDEDgkO2tBEJGwQ1rzDu2YJSEnS4cB0+3izKzLs10tRFEVR9iZV86mMifJJfo49fxbBthjP37ue5h2hIe0nM/4rhlD72TNsKamBrYFhZ1YiCnSjFk0vTR1VhtFEAOxUHs6JLWbG+frP2Z7QBe9PcNNSUkxx4wacxetAOxJ/RSNC6GiOBNI20HULEPinbWG3z8DcIkmiI22b2pbdtDsLkbhIajq2FLRYLhqjE2lJ+In5xIBN7v0IAULHFIIynxuvrr5fKoqiKOOLCj6VMeMNOPEGnBRVeWnZFUJamWtzDwfKHm4kBw1ATS31AHCavftLuvN/IhDCB9JGNwq6TyKQEmY0Whg58oP2jHyPOyBpCNp8hWwKlrC0oAaHy0W8qxB34RwcnnUgTBw+jSb3HB7VF9C2w4sMGHS4vDQHiok7nLgSUNoZpThoYQublgKDZxcXE3Eb2YkA+r0YIv/coZrGbL+bUofBr3Y04dU1TiwNMME9UK2yoiiKoux9KvhUxlzF5ADb321DIklGrcF3AHKlgpf9JtkUtPmgKJoKPMnao2fr7shUaBkrU1v44z3Baup5Ty2q7D7lhhoHIbeOsDV0l4avNErFrEbq1xXQuX0Z3qqDaZ0e425ZwHo5HSwBVVbqoKK3RjLqhkcO81LTalIYtdhWbhB36t3bgZDd44n6pUbtvt6cQaigwND5U30rUdumLZHk1m0NfGFSOZdOrFDzvyuKoihjRgWfypibtqScLW8109UcJRm3eqO8HLKTLOUPPHuWlQdFn2V9KhFzxmCZNaoi3WfU1MFhQ0uBYAqwucZBTOg4k5LAVjevbl5A4cRd+Jd08IyxgH9rE9idGRRKCVruZnDTobGjqrdWUrNk6qRab7CbV57R8A82deAQgoQt0/lPv7lpN7fvaObFw+fiVjMgKYqiKGNAdQhTxlyg1MNRH5tBcbUPp0vHcGnkanLPXDLgwO+Mn3VSN7nIeAxtAE9mXs+UoAuiBhSGU+v8UUl5p0V5h0mrq4Roezm73juIp99Zxj80nd2Okc2ABGBrAmGPfH9IXUE8I/DssTNhcsl7W3NPOaooiqIoe5kKPpVxoWpqIUecPY3yWj9lEz04tDg9Y9M1TFx0YBDHII5GAtH9L1NvcJkdaGYHnSMLuDSgJAKGBXF36miHbYxT2mXyfq2LrZUGYYfG1jKDF2d5MB0ZZRtJkCdAGt3HkCBGcAyHyJ8O/82OCFujieGXS1EURVH2kGp2V8aNiskBZhxWydY36in0dhFLuMFOMMl4DY8WQgIBvYk2cyLvxU/Hsh3pfQdumR4sSWYuuafODLkF/5nvYgFB/nJ0AR2uVNP1rmKD5+Z7+GCik5BHDHSo4RMgR9BHs9pp0JK06Mwxx7tTE4StofavVRRFUZTRo4JPZdwQQjD/mBpqZxWRfPEF/C3P0hCsxtf+ChomUbsQXcRxaFE+iIWxKBre8btnaR+JnjrTdZNdbK10QhxiLg20VFDYEtBpKjQwDZEj2MwTONqSSS0mRSGbzgKN7eWO/IFqT/CZowbUnYjjtC3CTjeWngqGNWCWz80pHhd/bWij2ewNQHXgyOICEvU7+c3zzxGNRqmsrOSMM86goKBgiK+IoiiKooyMCj6VcUUIQWGlDz5yKTsfLea9HRZHiRfQSNBhzqXLqkAjiSHiI2pBz5WaKXdAKulN5iTSKZqaCnWs7nE6mi3TwWLC0d1PdagVlFJSGrIxDUFngcbsXQlqWk1enu1OB7R9t++9iO7R7VIyvaWeGU07MWyLoMvLW5NmEfT4KDI0fr9wGpoQfGP6BL75QR2Pt3Ti0jSOKyngbCesuv8fxONxpJS0t7ezfv16AI444ghOPfXUIV6IoiiKogyPCj6V8clTzKbYUcRLIwSjC9nUMp1t8cNI2m40YeUYLJM7L+hQiKweoRZS2AipIRDYJBA4sRFIDfxRC2Gnok9by6jltBlWMnjdTu2qW5KQW+PdyS4O3xCjNGTTGhjCKHQhKAl3MbthB1IIog4XxZEgC3dt5qUZiwgYenpOd0MT/HDOJH4ImLbE0ARPPPEE8XgcTdOwupvfU6+p4OWXXyEUT3DeR88a8vUoiqIoylCpAUfKuGUmbXRD433nZ6hLHoRlGzi1EDaCGL5+oabs87PsrtMcekiaTqqEFDa2sIl6G6grC/HsIjcPL/XhTkg88VQTtpE5Gn2wuFNkz1QkBbhjNroN7rgkYQhiToE2pIH4qY28iRgOyyTs8mDqBjGHk4J4FM22uaiyOOeuRp9aVcuyQMp04NljzRtvsq0lPITCKIqiKMrwqOBTGbcmzi7GSlq0RMqIyhISmosuRwFdDi9Rp067L1cTem8NpkUy3aQ+tL6eEtDQpAMNielpIRxoYvMEjc1VTlr8Gu9NdOLuHqdT22zii3b3pcwcap/z0DKr6dzWBK0BA92S2Bp4EpKIS6PdN8Bbsk/O0KjDhanreOMxdMvCnUwQdnqwhWBR4cB9NxcvXozb7c5Y0n+A1f2v1w14DEVRFEUZCRV8KuPWzKWVzD92AqU1BQivm5jmImF50S0NS4OtE5zoASNP0KchcCAR3QmbcgefMuMfAEYI07uDWPEmdlXV0Rpw8c6kElqKdJqLdCa1WemqVFOAw5QYZu+xNdsecmqlqEvQUGyQNASehM3rM1ypAUv59GnWb/UF+KCiFpD4EjE6vAWsnTANn64RtQfI1A9UVVVx/vnnU1lZmXN9xNZpDsaHdB2KoiiKMhyqz6cybum6xqylVcxaWsWrr9fz+MOb8XaYRHXYXq6zabKbFV6d1jVtWftJIGFo6N01lLYOpibwJrLj1MyAVAKmrrFmug/b24htObGli7dqZxHyeEEIDAuKgxbNpb0j3EMuDTvzoLZFSSxCmy8weB9QAWGPRtgDLYXDnG3IskDX2VgxkfrichyWScjlIeB0MtvnxpNnJqVMU6dO5fOf/zy//PGPaAhF0q+NacNb+kwurFQj3xVFUZTRN25qPl944QXOPPNMampqEELw4IMPptclk0n+93//l4ULF+Lz+aipqeHTn/409fX1Ax7z+uuvRwiR9ZgzZ85evhJlb1h4UBW7zqvh3lMD/PPoAl5c7MMTt9m9pTNjq1Tbd9QQhF0aUoAmUzWUQkJSB7LrOempxjQ1QV2JxvNzilk1YynPzjyYZ2cfTEdBoHszianDmmkuknoqTLMMgSsh03O/A9iGg3bv3g/a0m9cAWGXhw6vH1M3KHDoLPZ7WVrkG/KxLr3iChYWeugMw1uRMt6U0zlh8QwuOHTSXim7oiiKcmAbNzWf4XCYxYsXc+mll3LuuedmrYtEIrz55pt8+9vfZvHixbS3t/PFL36Rs846i9dff33A486fP5+nnnoq/dwwxs0lK8PgtCUHr49RuCFKu0fwziQnXQL+Pclg+fsWWka+dKcFG8p1PHGNSS0mADGnRtwBFR02cSOVo9OZsLF1gW7CO1N0bCPIye+20RoQvD6lmoTTlV0IIWjz6/gTQCIV0Cb01Cj41ExMNjomRaKdFsqQe/HtZWsaSBNE7/fHSqeBV9NYWuTDpw+9JtXtK+Cjn/8fDt+8iXA8QaBmEjVV5YgRJLZXFEVRlMGMm0jstNNO47TTTsu5rrCwkFWrVmUt+8UvfsHSpUvZsWMHkyblr6ExDIOqqqpRLauy721Z04yxKYSuwaYqBxJwmpJtFQ62N5vUNlropOo+NQmTm03iTkHYo9Hm01gz2cni7TE21Oisn+hBoBF1Cnwxk6QOp6xpIxB1YmkeSrskCa2T16eXZzedSwmaIOkUkIC4U5DsXi+6hzk5ieETIUwctFM6OhcvJYZlYhq9MzqlMksJEKkg88hCH9O9LjaEY7QkzGGfwunxMmnBotEpr6IoiqIMYNwEn8PV2dmJEIKioqIBt9u4cSM1NTW43W6OPPJIbr755gGD1Xg8TjzeO9Ciq6sLSDX9J5PJUSn7cPWcd6zOPx60N4YIuATS0Ei6JGVhC0NCedjGa9rohkw3RetAUVzS7NGJuKA4YTG5PUZXUT11E8vQDEjoOqbLTZdLY8bOGIUJnZYiA5AURgWTOgzW2Sa21rcGUeCSqcE8Pf/PTOYkcNJOJV4ieDCRe9CzRbMtdNvGnYgTiIcJO710+Pzp8wkJmrSpdjmY4tRJJE0ctkWxOLDuFfX+GF/U72P8ONB/Fwfqde8PhOyfrXvMCSF44IEHOPvss3Ouj8ViHH300cyZM4d77rkn73Eee+wxQqEQs2fPZvfu3dxwww3s2rWLtWvX4vf7c+5z/fXXc8MNN/Rbfu+99+L1ekd0PYqiKIqi7FuRSISLL76Yzs5OAoHAPj13V1cXhYWFvLb6yxQUuAbfYRhCoThLD/vJmFzXaNnvaj6TySTnn38+Ukpuv/32AbfNbMZftGgRhx9+OJMnT+b+++/nv/7rv3Luc+2113LNNdekn3d1dVFbW8uKFSvG7JecTCZZtWoVJ598Mg6HY/AdPmTWt67nT2vvom73bogZeKKH4UoswG0nWNr2PmaimM5EJVp64E/GACDAEhD1bafNn+Dhg5cQdxhZzelFIYsT3w7hTaS2FcA7kw3eneLNOWLdJW1+FK7na74a4t19Lh0k0EiiI/HTRTOV2PTUmmYncM/JkqD3ybVp2xREI3jMBHHDgdtKEtMdaNEIV4sgS085nekeJ1HbZnMkgS5ghteFcwgj3T9MDvT3x3ijfh/jx4H+u+hpuVTGn/0q+OwJPLdv384zzzwz7GCwqKiIWbNmsWnTprzbuFwuXK7+31IcDseYv3nHQxn2tYSV4L6N99GcbKK2poYt23YSsp/niF3l1GjtFIodNCdK0Ewbme71CT29MON6aipLkhpJLCKaRlJoWUFlg1/j6fl+5tQlcJmSnaU662qdSE1LRa/d07b3jR/jQiPWHXzGcANuBBYduLEZ5u9Jk6k+nJlxo65hudzM3L0Vt5lEAm9Mmo3b6WDGIUcztzuRvBM4OCth/IHpQHx/jGfq9zF+HKi/iwPxmvcX+03w2RN4bty4kWeffZbS0uEP5giFQmzevJlPfepTe6GEyt4QTATpiHdQ6i0l1mjhDBfQpe8m4ltPs4jRKSwQzehRJ7pZCOhIYFuZztOLvXT6NCRQ2TmHiq4mdMsiqevdg4d6I72GYoOG4oy3gxDd2/Q8H1p5JXp3EDxMmkBY2WmbAJK6kZ48aX3VZMJuDyXSYEZFxfDPoSiKoijjwLgJPkOhUFaN5NatW1mzZg0lJSVUV1dz3nnn8eabb/LII49gWRYNDQ0AlJSU4HQ6ATjxxBM555xzuPLKKwH4yle+wplnnsnkyZOpr6/nO9/5Drquc9FFF+37C1RGJOAKUO4pZ2vXVrSYjw6jAUdCY4n+LgvZjIHJbk8Zq92HonfNgngtXS6Dxw710eVNJYC3NMGOcicd3mq8cYu4UyC1cZRGSKYGDwn6z0Mvhcb7lXMwNY0un0EhNtfPn0Ol2zkWJVUURVGUPTZugs/XX3+d448/Pv28p9/lypUruf7663n44YcBWLJkSdZ+zz77LMuXLwdg8+bNtLS0pNft3LmTiy66iNbWVsrLyznmmGN45ZVXKC8v37sXs4eklGzbto3W1lZcLhdTpkzpt01zczMNDQ0IIZhQOQmH4cQbcKLpH67+fg7Nwafnf5o71t7Bls46dASndgQ4lLewpI4l3UyjgQib2KxNxRIabQU6YZeGbkosZ+r1sDVB0KsBOnKwuHNP8lsOtm+e8X1FXSZdPp1+laYSok4HFSGbE6YV8a3pE5joGd3O64qiKIqyL42b4HP58uUMNPB+KIPyt23blvX8z3/+854Wa0ysXr2aV199lWQyiaZpFBYWUlJSQltbG36/nw0bNvD4448Tj8VxRcvxWdVUVVZTM6WMg06ZhK/wwxWcTC+azjeP+Cb1rY38464HmG4/jyGSdFCEwMBBnDLZzgazHKlZJA0DhCRhCOyMWNzStIGbz/vm9MxcJUHYEluI/McYStDa9xwSDEuScGnYOVrrBRJfUnJp0sN/L5g2+PEVRVEUZZwbN8GnAsFgkFdffZUXX3wxa3lXVxclJSX8+te/xrbt9HLDLMAVq8LEor5xF+FgDEskOO68eR+62Wk8hofplVNYvGg+nS+9jkTDaUlMYeEkScysRJg+JDqdHh2Ra4B5n+eOZJyk7gCtu1ellDkDSM2SGDYUhi06CvT8MWae/bPW52BrEHaJ7nJkFFdKCmKSZbssTltenf+4iqIoirIfUcHnOBAMBnnppZd4+eWXh7yPpDvWkQLLSGDb0N7VwpsvN7G+7UVmzJjBokWLxn0Xg+EK+Ip4zVpIuehkqmxEt6FNTuJFfQVvzHMT9FpoSZ3ioA0SGkp0bL1/QOgwk6lYtCfwzNQnSHRYElMTtPp1bNG/ZbzfvrkC0Hw194JUbWquQyEoMiULDqpg0rxRmi1JURRFUcaYCj7HWDgc5sEHH2Tz5s1D3qcnjLH0KJYeQ9gGUlgI28DUO9m9ezfBjRvZ9eCDHH7sscw880w0j2fvXMA+9sHGnZg4eEw/nQl2EyVRJzv16fz90Ek0FxpYmkS3BY4kuJISw4JEnuZsXUqElL2DfHpGuPcRN7TsFEjDnZdhuNv3BKMCDplRyhkzaoa3v6IoiqKMYyr4HEOWZfHQQw+NKPAEkJpF3NWKJ1qNkAaWESHqbaCktZW5697HFY/T9t46dm34gAlfvgbtQzBDU0dbBzaCpG7wfPmc1Ej20mp2FztJJSoSmJogYQiSuk0yNWNmv8pNw7LSfS5TuYwGaC7vCTz3dC6wwZrl+7i4opBvzpxIqVO9TRVFUfZHWzYfNuqzI0YikVE93lhQn2pj6Omnn+aDDz4Y+QEEJNytWI4wSB2px7A0i4Sus6uqEncshss00V95Bee//03lKaeMXuHHiM/noakjSNQheWfSRExDI244u1MnpRLLY6f6S5q6QOYJ9qKGE18imhr5Ppz+sbnyIQ0otbE7EcediONNxun0FhB2unOctzdKPrrQyw2zJ+E3RpAzVFEURVHGMRV8jpH169fz0ksv5V0/5PhGgGXEsvYJBQKEumd/0iyLuo4O3nviCeYVFTF37ty8szjtD6bNquYh4UfYkqjThZ0rX6cG0gK7/2ybaVLXCXkKwLaHnEB+yNv1ngUkeBIxykKdhFweJrQ3sWDXFjZWTGBrxcT+pxBwXLGP2+dNUYGnoiiK8qGkgs8xsH379rxpoHIFnZnLBqp4S8dGGTVqtq7TUVREp5TsWrWKl156iYqKCmbPns1BBx2Eru8/AU4yafL+9gi6bCHmTE1laWu5k61LTaTScw2YWgnome1oL3JYFnEjNc2b1DWclkllqKM3+JQyNcMRGudWFHHrnEk4PmT5WhVFURSlhwo+97FEIsE999yTc91QQ6B+AWifvoSye+CMABAC2zBS602TWCxGZ2cna9aswePxMH/+/JFdyD7W3t7OH/76ADvaWgh4/RTGong3R3hp5iKkliOAzhzFni+4lOn/7FUJXUe3DYrCQdzxGIZtETOcGWWTaAhKHTpfnlqtAk9FURTlQ00Fn/vYzp07SSQSI9pXkjE+pmeUdjrG6jOqRoissCopdFJDclKBnGVZPProo7S3t3PEEUdgGOPrVggGg7S3t+N0OikvL+f+Z57jg64g70ydT9jlRkhJSbiTSS272d63+bpvX8o8o9iHOwBoSDLP1f3/uOHEsG26vD5cVjGGLdlSVgO2BZoOEnxIzq0oZpKaNlNRFEX5kBtfEYcyJOkwc6B85hmrJbCxYgJVwXaKIyG07kl64vE4r776Kj6fj8WLFyOlHBfN8PX19bz44ouEQiEMwyBaWsFbdQ1sqZhI1OmmKBLC1DUaAyWIwZrMB1qfL/DM3GdYg5FyB7lS0wg73ZiaTrDcx5ayGpK6Tm2ogy63F82y+EyJlyumVWOMpznnFUVRlP3elClT2L59e7/lV1xxBbfddtsYlEgFn/vciJK+dwc0Qsp0bV1qFHff3qAZu2Q8Ot0+tpdV4TaTFEeC6fjINE2CwSCrVq3inXfewePxMGPGDBYvXjxmQaiUktdff51QKITD4aCxuZktze3opk6bN0DM4SCpB9Asm5jDlZqhqN9ByB2YS5kaYKR1N2v3BIt9A0xpI7pzgILA1vXhBaF9A1ApkZpGzOVOP9dsCyElU4LtnO+y+cxhR6CrAUaKoijKKFu9ejWWZaWfr127lpNPPpmPf/zjY1YmFXzuY263O++6nIOJpMyaKlPQPc/9IMFQzOFE656KM+50ISQ4bCurNrTneJFIhLq6OiZMmMC/X32VdeEYsxYu4uCAb5/XxFmWRSQSQdM0mpubiUqJiWBd7Qw6PT7CblfWi5Q7lZIklUMpc0OJL5pEYBF1OTBME4Qg7swY9d8TjGoaUoIrEsQVj9EZKIGhdkuwbSo62ihrb6W5uJTmopLeYDfjPLZucPbkas4p8TN70kS0XP1WFUVRFGUP9a30+sEPfsD06dNZtmzZGJUoe94WZR9wOBwDDvIROR45t5ESIUk/+nImEyQ1g3aPH5eZZPHOTVR1tOQ9r2ma1DU20dzaxjuvvsLPX3+HX+9swt7LI8H7MgyDsrIygsEgiUSCuC3p8nipKylFs53olkDr7uwqhcgIwjP/nyOMFwJbQNTpwtIN4i53duAJGTWWqePGvH46i8uhp0ZyKLWfmsb0um185pG/M2PHVnTLzH2dwHrDS3F1jQo8FUVRlGHr6urKesTj8UH3SSQS3H333Vx66aVZFVv7mgo+x4DP59sLR80OtgzAl4xRGA/jScSp7GrDIe08W6eex5KpgVAuJNXbNvBCQyvrQtG9UNaBHX744VRWVoIQtDlcbKyYjD8mcCYlhg3emES3MnYY4hso6nZiGSO55Ydw/PSUmIJXFhzEDZ+9mtcWLMFy5B5AZAAN8SRtydzBqaIoiqIMpLa2lsLCwvTj5ptvHnSfBx98kI6ODj7zmc/s/QIOQDW7jwGHI0c/xZHqqa0T/YMqDfAmc4+sz2x+7/nZYVlYQmL6CpDhMC2763myeQeBhfOYNGnS6JV5EEmXm7cXHc7jgYk0Co2SsE5Fh8XOUgNLSGIevX9fzXRlZ5/BQlmDh4ZYgJ5jZR1/6N8QpWEQ7qktzZoPtbfMmgCPLqh0juK9oCiKohww6urqCHRPKAMMafKY3//+95x22mnU1NTszaINSgWfY8DtdiNEdxL04chM4ZNR0zYaNNNEtyyEYWA1N9ERKIJkktjObfz5vXcoKChg2rRpLFu2DI/HMyrnzCVi2Vz1/g5eaA+ScHlBSmzNYl5dHKRkS5UjNV97rr6oQmR3Zk0v698EP+AoeJmx3UDnYIDtMo+Tg9V9nPdCUY4r8effUFEURVFyCAQCWcHnYLZv385TTz3FP/7xj71YqqFRwecY8Hq9eL1ewuHw4Bv3rX3LOTp74AFIonubfPOcO6MxijvaEbZNuKAAD4KGQClzt6wjEQmSIDUoqaWlhaamJi688EKczr2Tj3J9OMrrXRHMjACwtUCjocigMGKnrnOwWYsyDZTfcyhpmvIFoD3/H3Lwb+EhShQ/LmCe141D0/hNXTPlToO5BXsvoFcURVGUO+64g4qKCk4//fSxLorq8zkWPB4Pfv8warsGC3Y0bcDBSVnH6ENPJnEl4piGQaigAM22cZtJprQ1UBYJZm1r2za7du2ioaFh6GUfpjWdEbpMCztjmdQE/5nr5q3pLuK5Wqn7Nm1nPgYylMBxOMfLVyYk5TSxQHxApUPn8OICFgS8TPE46TIttkYH7ySuKIqiKCNl2zZ33HEHK1euHBeTyqjgcwzMmDFjz/Jo9gShOYLRwUbK9+WNRChtacXWNByJBELKVAAajuBIJCjo6qKkpaV3tp54nE2bNmGaoz9QJmha/LG+OSvw7CE1QcypDZBaaZjBYY/hdlsY6jl6amgF6MKixOHn4lmnc0ZFETFbYktJxLbRBBSMg8T+iqIoyofXU089xY4dO7j00kvHuiiAanYfE4ZhEAwGB99wGGSODoaC/oFp362iXi/lzeuZtH07TRXl7J4wASOZpMCyIRJGCo3Z69+nbtIkdkyeDELw0ksvYVkWJ5100h6natgcifFcW5C4LTFtm62RkU09Omx7Y2rNflLHn+L2cU51LRfUVLIwFKVxeyMbw3F0DY4sKuDwor2R/UBRFEVRUlasWDH8cSZ7kQo+x4Bt29i2PbJBRzlkB54iY3n/2s/eUe6pfUyHwbsLF3DQmjX4olFsoKOwkJL2DsI+H4ZlIqSkdkcd9VVVmC4XpmnyxhtvsHjxYioqKkZc7u3ROD/Yspv6eBJbSjaGYyRzbdgTJI72G6cnAB1K/88RcgMXVJfw2doKNCFY4Pfy3RkT2BSJ49E1Fvk9uPomoVcURVGUDzEVfI6BnkTqoVBolI/cvyYvKwDNk3Yo6vPyymGHods2psMJAoKmicM0qWhqwtYNNCs1Gp5oFNPrJR6P8+6773LiiSeOuLSrO8PsjieZ7XWxJhglYg+xj+ZoBoqZAWjmslGyJODlIxVFuPXeALPG7aTGvXcGbCmKoijKeKeqXMbIqaeeOrr5PgczSEAlHQ5MlysrhdGMDR9Q3tSMJxqls6iIuMeDmTE9aF1d3Yhrbj8Ix3ipPcj2aJxXO8PsjKWa2wWDfCPaGzWUwx1UNMQyuICPVBQz3TN47jVFURRFOVCo4HOMBAIBvF7vHh1DMmAqyYwNs7fKtY/MrDQVgpDfT/3ECcQ8bnZOmMCG2bPTNYQSiLjcvNcR5JY319EYz9lYntdrHSE+t3Yrf2topzlpsTWaIGSlhhkZAvRBsimNGwMEoS7g7KoiLptQOqZTmCmKoijKeKOa3cdIIpEgkcgeXBPRI0hh4sNAsw1s2yDf94PssCd7KFGuvp7Zm+caepQKQAW9uUR31dayq7Y25yGMRAJsm3e3b+NWf4DPlCd5oe5pQokQ80rnceLkEzG03tsrbFk80dLF7liCh5o62B6NI4TAISUm4NcECSlxCkFpq4kzatHp1mgo1vfBwKDR5QI+MaGUL0+pRlP9ORVFURQliwo+x4ht20SjvfOmtzvb2VT0PksdTlzt0zGTEtvW6BtG5q9r690uoumYuoPCZCz3lt01drJPTNd3dPxAdNtCWFDV3sL7nfXcuvN+grFGXLqLt5vfJm7FOWP6mbQmTQwJv6hr4pXOMA4h2ByJk5Dg1EB2D7oKOAyKDZ1T6m1YH6ElkiShwzuTnayd6h68QOOEB/jKtGq+MLlyrIuiKIqiKOOSCj7HyK5du9I/SyRb/Fso9XYxySPY3ToDM+kmewb2ITaxAz7bAttKB5n5iH6rs2tP+8aiQpKVZ9MSGvF4nHhoE62RRuaWTEcTGrtDu3l254u8JQ/mnVCUjZEYbQkLA6hyOyk0NBoTqWb2hJSprpbAMoebWXUdbCRJc0DDluBOSjRLYusZifb3Sr/P/tebk2mTfp2SNrh6c3Q6BZxdWcwlE8tHv3yKoiiK8iGhgs8xUlBQkP5ZInFaTirb5tIk3STiPXkfx7C5OcepM2tKBWBaFk1oOHfVIT1xbNtG0zVMabI1ZlHX1EFr0iLWHSxawM5YgmKHjl9Pzcrk1ATVLiefmVDGidLFarONZhkn7PLwQY2LuEOk0kJJsmd62pMANOd870PcN2Yh2mNQBBi9Teo+TfCj2bWcW1ms+ngqiqIoygBU8DlGampqcDqdJBIJNDRmds3EkDpxI44QFlJmznozwmBmqEGakBhGHLc7iBAQjhRiWflSAaUnXceQNv5YhCltIdaVmLwRfYOAP4DfE6DRcTAtSZOEzN7TBoKmzbmVxZxTWUzEtmmKJzGlZKNh4S8SuJsFwTKdhCHwxCXSP8D86j2B6QD8oSBO06QwFKQtEKAjUDT01EqZ6Z26B0WJiJkKPrszA/g1OKk0wMeqSgYuiKIoiqIoKvgcKy6XK6uGzGE7sLFJWA4MPQH2nuaB7G5HHiTIkoDbHcRf0EYkUoRlGWhCYgsTKY3MWLPfnjqC8nAnhu1gbutc2sw2PEkPhx/5Ud5oLUMmzZyzKpU4dD5VXkx5DG5t62B9PE6nadGaMKmqEsxtE9i6IGFAh0/vnqYyXwCee/BUj5qmBqbt2kFDWQUV7a2Udrbx3rRZRLwZswoN9BplPtc18GnYswohlJqhqtjQmOh2cWxJIG8ZFEVRFEXppYLPMZQ5P7qOjoYGNpi2C0FqnPvI6jx7+ojKAQcR9TSjl5dvo6CglebmaQS7yjGMeKrmU2bcHrL/ACUALAsbcJoeZjQfgqh3EBUwYbZBRLPptLJnateBZR4vzY/sYFUywas1gkDAyU47SdSWtLlh3cHFqSrSoTZfD1DDu2DLB8zavpV/VtWwrXoCzqRJRXsb2zze3McfrLZYpP+DW8ChAR9HFBdwdmXx0MqqKIqiKAc4FXyOkWAwiGVZ6eepcCcV1GhAm9tHSSycFTrmCsX6TpfZVzoAzVnrmVqWiHuJGwk0zUTTTLzeLhKJ8n5HFH0DUNnd8izBFanFSJQgsIm/H+coYoTmuIjE4lgSHAKKDR2vEMz5IMQHwSRN1Q6S2GwLJ4j35GG3kyBt0PrU/O7BXOyzdmxm6Xul1JdVUtrZgW6abKuZ2P+YQ+xH2rPHnxZNY16hH5+uqX6eiqIoijJEKvgcIzt37hxwvcMyiWsaHtvuDYqkHFFNqESmI6aeEe6pRvnUwqam6TgcMZzOKELYJJMubDvP7EsZo8JFT2hrOXHHfaCHcDoFTo+HmR02JV4/D+gau2IJpJR0WDZBCb/zS0ShjlNIgjqEkNgIsOPoiV1Yjqo8586cHnRor8Ta6bM58t23OO6t1UghiLg93LfizPzHHYyUFIk4AAcFfDgMfZAdFEVRFEXJpILPMTLQtJQC8CfjmKkN+9fO7UEtm+xuNhayt65UIkgm3SRNJ7qeJBoNgBw4ObroHucTNRy0+IsodLqZ295Kld2F6a3E0DQurC7lUGcxX1y/g6Z4EinBFtDgBpcpmZUE2wJppGZNsqxWEDrD7mwwQOxYX17JH848j0PeX4vDSvL+1JmsnTYrY99hjpoXEFDvGkVRFEUZMfUxOkYmTZqEpmnYtp1zvQDyzvyeIwAV3fWQQyO783Vm5vUUIHVMs7cmr08Le/p5T+1pxOki5nAhdMkrs7zUtc3mtE07oCNMxcET8Je46OgIUWIY6BI6LQtLSjptC6EJQrakWAoqAy4Orw7wty1v0Gg7sCjtc8YBXoMhBI91VROoq5owxNdmEAJWlJdAe9PoHE9RFEVRDjBq7r8xUlBQQCDQO0I6Z3/OYdbKDWeGovxn7V0lMx69Te0pthCEXF6ihgN/LEIg3sL6WidvTHEjytbz58mCdZEYhYaOQxNIAUlbYkswNIF0CjzlbkIVLpod8G4oxiG+Gk6uX8e8nW8PLaP+3kg2n0/3a1AkJFdNnbzvzrsfklIOWLOvKIqiHNhUzecYmjx5Mh0dHenn433ISk9dZE9YURbqACCp6QjdxHSavD3NzUbHQnbEYty4uZ6fzZ3MCaV+/tXcSUvCRAKVLgcCQYHLQVc8QbGhETJN1rd50IuXE9WsPifes64GeyQrsb7gzsWzcOuqn2curbvr+dcvbqGjvg6H283cI4+lrHYyvuJSyidPwRsoRMt47SwzSTKewOX1qgFbiqIoBxAVfI6hmTNn8sq7r4AEh3Sgk/pgHrQGcy99UPcbzd53Hb3rRcaQJYdt4YxbWGh0Gn5MpxeBYGs0wd27W/ni5EqOLfazORwnaJpM8boobUjw/HtN3F+QQHM7eFckSXgKsDz+VJeAzGsc1vUOdZ7MIehz3q9PreTwYj/JZHJ0jv8h0t7czJ1f/RxFU1uoPCRKV10Bbz3ZhJ3UQJcIXaeorIYJcxZQNW0G7zz1OM1125GWiaYbBMormXnE0UxbfBD+sgr8pWVZgaqiKIry4aGCzzEUFVHWlaxjYnAiZfGy/nk5c04DuWeBVW/NZc+5evuKpvPJ52gx7ZnrPbOMglQ6ToDqjjaaS4vochewGxcFwASXg/XhKEJKdnVsYGP900iZIGzOo+rNSTgFGJM01mtxog6Bbkukru3hNe6dwPyHM6pZWVu5V479YfDIz/+P4mktlMzuItzkIhly4imNEetwYMUMhJ4gFNrC2md2sfaZJ7L2tS2TjoZdrH7wflY/eD8ADo83fRs4XB4qp89ACA1fUTELj19B2aRJRDo6MJxOTMvqWxxFURRlHFPB5xhqdjQTcoYIOUIUxgsxMBCIdA0okArE0sFYn2B0BHFWrp546YBXkL8fZfcmNnZG+WS603B5qIODt33Ai9MOwqNFWRLaytzmJqaUVLGmpIud225lot2KEBpW+A06OI2JgUMpS4bZ4HUj0TCNfXw75mvO77PsyEIfZ1aV7qNC7X9sy6J523tMPCKKbQoSXU6spIbDl0R3GVgxsBMGdlIywJRZWZLRSPrnRCTCltdb08/fWfUoAJphoOk6BaXllC0/jbp17zJt8cGjfXmKoijKKBs3A45eeOEFzjzzTGpqahBC8OCDD2atl1Jy3XXXUV1djcfj4aSTTmLjxo2DHve2225jypQpuN1uDj/8cF577bW9dAXDZ2MjbYmNTdJIkhRJbJF79HtOMlUT2fMPhjfoqLfGM+Nf5kCjHPtkBcaZy6XNxI5G5jZv4WMNT/KFLb/n7LoHOWfjHej/vglXsoW4cxpx5zQcWhLTuY63G1+jfNtbHLxtAw5zHDRl923uBxb43AQcOobqk5iXEAJBAjupIXSJ5rARQmLGDOwkpAPNvjMUDDiqTOZ59LJNEzMep7OpEYA1TzxCR8Pu0bkoRVEUZa8ZN8FnOBxm8eLF3HbbbTnX/+hHP+JnP/sZv/rVr3j11Vfx+XyccsopxGKxvMf8y1/+wjXXXMN3vvMd3nzzTRYvXswpp5xCU9P4SJMT3BBkWtc0ShOl3dNXyqGN8h6CjAHqAxowPVPmaPdBaNgU08lxdW9wcePjaLoTu3wWm/RS3A0f4A2FaE6YWEgi0qCjy0+yC6TpZWJ7C5NaG3pPmiMIHHW21f8cUmbV/PZ0UTih2E9AJZPPS2gaaDrtmwPYCZ3ApDCBKUHshIYZzZswLI+hBKW57XjvXda//G9knvRliqIoyvgwboLP0047jRtvvJFzzjmn3zopJbfeeivf+ta3+OhHP8qiRYv405/+RH19fb8a0ky33HILl19+OZdccgnz5s3jV7/6FV6vlz/84Q978UqGRkpJ/Qf11ERqMGwDUzPRbR1jj3tCZM+CJOjuwznCoDYzOLXJ/6Eu0WmigmK6KI+3UOD2EjZtdpgCiQcLP8XWVrTYJsz2SXjaFlEYnMDE5go8sQriDgeabY28oENkJGL4O1pAG+DWl72TnSakJGzbmLZKHTSQKQuWEGn0UP9qOa3vFRNrdRHrMob2zSVtz15j2zT5z5//xB+u+TxvPvFPFYQqiqKMU/tFn8+tW7fS0NDASSedlF5WWFjI4Ycfzssvv8yFF17Yb59EIsEbb7zBtddem16maRonnXQSL7/8ct5zxeNx4vF4+nlXVxcAyWRyVEc5m6aJZVk4NSdOu3se8zzxkNYdKGk5AiYpsmvq8tV3jvRjPXOAkTbodxVJlAKCnkoe8x/CO0YllUYLTUYxLxauoEJsZrZXp6xzIc0ijumL4UpoVAQ9uGwDJ6TmdU830w6h1MMc3C50HctbgFsOFJGnDurXNWa6DJ5vbmeRx8XhRT6A9H2gRr33WnbuZWxd8yUSISeJUAHQXbE86F+Ynl/ecO7QPhMsGI7u/xuATWfLbp6/7zdsfO1Vzvnf61Qap31MvT/GjwP9d3GgXvf+YL8IPhsaUk2ylZXZo40rKyvT6/pqaWnBsqyc+6xfvz7vuW6++WZuuOGGfsuffPJJvF7vcIs+oNmzZw9r+4WLFo7q+feW9zid2cBsAKMcfHM5pwNgOrQD1UEqqyEz2v4aYQiH910h44NvAkBH6n+tOzfwaJ9Vq1atGsUC7f+mf/y/xvT80879ZL9ljz322BiURAH1/hhPDtTfRSQSGXwjZUzsF8HnvnTttddyzTXXpJ93dXVRW1vLihUrsmYkGg1vv/02jz7aN6TpT9M0Fi5cyLvvvottdTcliuwmcZGV/r0/mfnDCCuChjKFp41g/cSpvDZlftaWAjgs4OXOhVNZ/dAW3v2gjd0yiRa3iDp0Vi3x0lHQ3a+y71z2eeiWRLchqQPdc8TvaaYlgUWJCFLormCq103StjGBL0+pZpHfA6S+Ta9atYqTTz4Zh2O4fRo/nJq2b+WBH1xPIhqm/y8h3y8l82bcs5rPaed+gi3/uBvZb+Ba77aaMDh47mnMXXgMBUfUYBS7hnFOZajU+2P8ONB/Fz0tl8r4s18En1VVVQA0NjZSXV2dXt7Y2MiSJUty7lNWVoau6zQ2NmYtb2xsTB8vF5fLhcvV/0PJ4XCM+pv34IMP5t///jednZ1D2t6ybWyZCj775uLsDQrzJOkUGWuH2QY/nHnjbTR8nV1ERXYTvVcIqn0ePC4XhUdWU1ffhavFAl3n5elOGvw5XlshBkz/pCMpjlhYbg3NlASNYQxU6hfgShDgxmayv5K6pODVUIxqp4PP15ZzcLG/X/Pt3rgn9lfRziYkXeiOBFZCR1q9v3+ZJ/jsv3TkASiANJMDBp8WSd5e+xiTjBmIuEXpObMRxrjp9v6ho94f48eB+rs4EK95f7Ff/OWdOnUqVVVVPP300+llXV1dvPrqqxx55JE593E6nRxyyCFZ+9i2zdNPP513n31N0zROPPHEgTfqMwI7vTjfdgN1Y5SpoLXn0UN0/0v93P+RuU3mtv2lwlRL739buaRFfOtmnnnmGYIixvuHF7J+ro+XFxWwqcY5rGvvYRmCliKDsFsjWKCDNtIqXQFCo1DXKXX56bANFhd4mOtzU2DoTPK6Vb/BAZhmiDefuR2HN0rBhAi+6vzdJxymRW1LJ5NaOijtCqNZmYOChvEap+/3ge+RvomaEnaU7bvX0rp+G/Hm4NDPpyiKooyacVPzGQqF2LRpU/r51q1bWbNmDSUlJUyaNImrr76aG2+8kZkzZzJ16lS+/e1vU1NTw9lnn53e58QTT+Scc87hyiuvBOCaa65h5cqVHHrooSxdupRbb72VcDjMJZdcsq8vLy8pJZqmYQ8wMnfgYTGD7JDn89wSNgktQVyPE9fjVMQqcjbci4HP1G9LU2hsqJyUtUaTkvJIFwu7mtgaDePpClFeOZt1AY1WYZP9HUgipI0UezG1UY5AUgAT3C7its3OSIxNkRi6EJQ6DOpjCSj07b3y7Oc6Ol4jHmlDc6ZeV91to7tNrLgGsvd3q9mSGY3tFEdiWEKgSUmLP8amiuIcXxxG0hyfLVeNqwQ+aFlNoaeUlt3bmVi9aMTHVxRFUUZm3ASfr7/+Oscff3z6eU+/y5UrV/LHP/6Rr33ta4TDYT772c/S0dHBMcccw+OPP47b7U7vs3nzZlpaWtLPL7jgApqbm7nuuutoaGhgyZIlPP744/0GIY2lgoICvF4voVAovay3f2b3x2d3sBR2eehwuHCZSUrCXSPOhWkJi80Fm4k4ogSNILZuk+hKMDEyMe8+feNZ0T27e1+tXj87iisAcJKKKUrjUc6LtlHr8xG3vLRvjHLwtnZCpRYNZUb3lr1nMrBIopEz4M015egeEkC5Q+cT1SXctKmedL2dlOyMJ9kQjhKxCvFoQtWA5mBZUQK1gsi7GomgA9vO7OPRy5tI4o8lCDsdWJqGw7QoiiRwWRZxre+fopF0Tu6tqx/oDgkm29hpbaLYMbwBf4qiKMN1RHIWgWTBqB6zKxkafKNxbtwEn8uXL0cOEFQIIfjud7/Ld7/73bzbbNu2rd+yK6+8Ml0TOh6Vl5czceJENmzYgJQD96x8Zeo8uhwuDMtiSutu5tdvHXIAand/KCekIKlZuG0P5cEKpJDUe+up99YzITJhSDMkDVQT67YSVIQ7CBaWICwLG8HipjoKrQSdreVEW8GMunDoUQ5O1vF66cw+01xqJIWDUZujfZDXxwCme5xcXluBTxPkajC+e1cr74VjzC/wcNnEckb3z8j+z+ebQe2SaiQ7aNiYxEhqxNudpJN/yVTCrriu0VLgwRdL9cvsX9PevxY8Zwy6h989JBYbdrzC0eXjpwVEURTlQLJf9Pn8MAsEAixYsACfb/Bm3YThoCgSxLBNtpVW02W4wbIG3kmmAk9J6qMdIUhKg0C8CI/pJpAMMLNrJjWhmny75x0w0rPeTv9f4ItFmdHRTGUkRJGULDGjzO9oJLRbEmywsUQCw+cgYknaEkWp/qH9AsRBAs+hzoA0yDZOAddPr+E3C6fxiZpS7qxvzbldyE6F7s+3BblzV0vObQ5kBQWzmTr1s8w68jA8ZQnCTW6kqUNG7bhAYho6O0sKaAp48MUSOE2TVr+HuJGZ5SAjsswcQydTRxlq4Jm7Xj6DlPzpa//DlrdWD/EqFUVRlNEybmo+D2SlpaUUFxdnNb0DIERWbXBtawNBw4E3FqPZX0jSMNBiNrauD9gcbQGW1NCFTcR2YArwCScOUiMBDWlQHase1rzwPTVS2YOSJM0FDqYLm9L3X6fUTjItUIDwevFoFcRDHky3zg6nBiRp0/2Y6fovkX3gjLAl8/UYkiFspwFFhk4SyWxfquuGnef1q3IalDkdmBLeC0XzbncgKy4+nKKipTzy/XcQyeyvK1L0DnBLGgbNhT5iTgOnadMS8Hb/insGDg0y81SurqB5ft+ie4qE7GW9zHicx3/5/7jgOzdTOrF2SNepKIqi7DkVfI4DZWVlGEbqV9GvKVL01uJMaW3AJFUDOqGrBY+ZSAWe6W1TW4o+wZFGKgBttrzUWcXMMlrwSBepBE2pGYxyz16U40NdyozP//4f7Ak9yazG9whu3oVu6EQRGNW1VE1ayO5YnAZs4pZNoSmIFbkwdb3PeXIEncPVc/05ghIH4NQ0HFpq1P7DTe0YQnBIwMcp5UW8Hoz2m0R0otuFLSVdpkWNz42m+n3mJISgvGYyLdu3ZS/vmxZMCLp8nswlZH+NYfDmdtHvh9xlyjOErke0q4PNb61WwaeiKMo+pJrdxwGHw0FNTU2OwSzZH5xuM4HDNDGFRlmwA5+ZGHJtoCFsSrUY8xzNODERUiBkKujsqfHs3+O0zzzxUvYLE3v26AnYCqIm7YlWSiZMxCgoBF1H62qnPdyI6Q5i6xK3FDQX66yb4Eb2CZ7JO9BoSJfZp/i9aXj8uqBQFwgBHi0VhDYnTTZHEjzU1MFPtjVycMDLpTUleAToQJEu+Gh5ISawMRKn3GnwyZrSERTkwHHGlV9Dzxg81DfwzK078MzMiZTr9z1oaoeReeuxhzETiT0+jqIoijI0quZznKipqcHj8RCJRLprP/t/qBq2hbBNPMFEb+2m6F/72Jfe0/wobLwk0LprU2VWRZMkSRIHDgQCGztdG5orBVPfc2nd2/iSJrbloaK6HFtCw/ZthGNxIsEdJF0WscISVtfOpkPTaPCIHNeQ42x9A+xhNXunIpkSh0FLwsKSkhazt26zQNeY43OzKRLn+fYQN86exI2zJ2FLiSYEpi15NxQlYllM87qodjnVfMEDKJ80mY9/+0b+esO1Aw4g7KGhY2ODzJ9qbGTyJw7rK9TawpY3X2PWEceMchkURVGUXFTN5zgxe/Zsli5dis/nQwiRd1YhQUb6pRy1npm1kX33M5Do0k43RWbWSvU0v1tYxESMdqM9FRSk989xzIzgoue8uhSg+WnbtYvOhnoi4RDu6olUVVfhdvhxRIMEdZMmv47ZndvRnXXQjGsb6sCivCQeggggKSFgaP2a1DtNiw4zNWgrsy9nT9O6oQkOCng5uthPtStPMnwlS+28hRz/X1fk/91lLLexUjXvok+z+6gQfR75PXvnb0lEo6N8fkVRFCUXFXyOE4ZhsGzZMj73uc9xxhln4Pf7u3tkDq2WLyvoFALZ/egXAPSZVlIiUwGnFqPV1cpW/1ZWl69mZ2BnxrG7/wmyHtATgEoEEg2JEyfuojIWnrCC6YcegX/WAjwTp+ArclI2sYD6qnIcXjcLfR5cWiokSLI3bkSJiwgBwlxeU8r8Ag8uXct6NTUgYUs+CMfw6BrHlfhHvRQHqoXLT8ITKBrStrL7K4EcUew5OgFrqK2Ve775JWLh/T9/nqIoynings9xRAiB3+9n7ty5CJHdHzO9TcZzmfFvRH3fhECzU0nnY0aMnQU7MTWTymgl89rnoaENGPymhwZlTtuJwOXxsPCEFSw962MsOPo4EokEra2tRBJdeCtLKCz2MqvIS43LiQ7oQlDldFDjHN1eIB5hsnLyYr47u5a5PjfN8d78kj09S72GxrFFfq6aXMnRRSqD52gxnE4uvOEHoOeaqUpk/KThwJV+LodR0y0HT6g0LG31u3jr8UdG8YiKoihKLqrP5zj08ssvEwqF+jW9Zz7PHRSOZFYYcEonhYlCDmo9KGfAm010h7oSU0sN0jCkjib17ow5kq6urvTWS5YswePx0NjYiMfjoXrCZP7QEqYuFidsWRhaagpLryYwZWqgzyCZS3OT3dlGRao6tdapc9Osgzi5vBCAk0sD/KOxDSthkegeOKUJOLeimBtnTVAzF+0FJTUTOfur1/HgD6/vsyazu4ZNkvionXNk74CenSUdjQ2jVhZFURQlNxV8jjPJZJKGhoZ0MCS6/+2RnsAq1wCQ7v6lOkOZS10QMpwkNYsd3rX4TSdO04nH9uBP+nHZThCCSCSS3kPXdebNm8e8efOAVL/KuKOde+pbSUpYVOBhps/NG51htkYTQws8++Q0FdKi1G7hGOvfOFwGR1TM4tzZH8dj9PbRnOxxMd/vpSNhYgJN8STVbgfXTqtWgede5C8pQXc6sQYZTT5eMqduWv0KwbZW/CUqq4GiKMreoprdxxlN03C5XDgcjn1zwiEFXqltUnWLEku2MiFaRkm8BKd0okudsJGamFIikVLS1taW80iaEJxbVcL/Tqtmjs9NrceFABriSczhlrv7MVFrptoZ5qxqL58tb2Nu/FHi4XezNq9wOfh0TRlFDgOXprHQ7+XrU2sIONT3r73JV1RM2cTJAw6Oy0rf2fOlYqA5XEfYy2QoEpEQrz30lyGN1FcURdlf7Nq1i09+8pOUlpbi8XhYuHAhr7/++piVR33yjjO6rrNkyRKCwSDbt2/PvVHmTC8D6LfJAIFmvtH1ILAAKXQsIfCZSdx46XIGASgwU/0kw0Y4vbemaXR1dVFSUpL3fIsDXg4r9PFqZ5ikbROyhp5qxwBKHDoOTaPUoSNjkkMdjUx2RhD4ictGzGRXv/1OLA0wr8BNS8KkyuWg3LmPAvwDmK+omGMu+jQv/vkuWuu2d+fT7M62QJ7As0ffNvS+GbikHFYf0cGlTrDmyUdp2PkfVvzXVyivOWgUj68oirLvtbe3c/TRR3P88cfz2GOPUV5ezsaNGykuLh6zMqngcxyaMWMGfr+f++67j46OjuyVg9TI5PooTvcTlaBJBwgL2Sf7d75kNDFdR7dtkrqOJiW2pqHbDoQU6FJHyFRycKflJKElcEonaFBeXp63jDHL5um2LkocOocVetkQjA651tMp4ILKEr49o4Z14Rj18STxlteYEnkOM1mKZYUwjAAez6Sc+1e7nCpl0j42ZdFBVE6dTqSrk2QsxjtPP8GG/zxPIhYd+DvUAIHnUHYZnowT2JKmDZ08+ssfcNF1v8XpDIz4qIqiKGPthz/8IbW1tdxxxx3pZVOnTh3DEqngc9yqrKwkFovlXS9k98dlxlzXufou9gSeQgpckSrc8VJsLUnUV4/pCGVt2f8nMIWe6mIpBFgWmrQRCIqTRencoDY2URGly9FFUaKIuCOO1+vNWe6N4Sg/2drIK50hwqZNXNpIy0qVH5CalrOGVgdcmsAQgvl+DwGHwRHdo9MTxWewo66RcHgjDkcJNTUfx+ebnve1U/Y9jz+Ax58K4urWvYu3uJjE7j3Pq9mvtnSU2Eno3BWmo2kTFRMP3ivnUBRF2ROZg3sBXC4XLper33YPP/wwp5xyCh//+Md5/vnnmTBhAldccQWXX375vipqP6rP5zjmdrsHXC/ITHHUQ2Y9BDZIgTBdICxsYaJZbryhiQjbyNhLpPfO5DET6LaFK5nE0T2iPK7FsLqHBvUkoi+wCggZIZIk0aMQiUfo682uMN/cuIsnWztpSpiEbRvTtDABLTOIsG088dSjZy75VHokQaGhM8OX/bo4nSVMn/YV5s/7CfPn/R+lJWqmmvGseuZsCssr0Z39/0imDbUKcy8OFktGIdgc3GvHVxRF2RO1tbUUFhamHzfffHPO7bZs2cLtt9/OzJkzeeKJJ/j85z/PVVddxZ133rmPS9xL1XyOY5MnT+7f7N5npHf2cnJ8aNsIqSGkjq0lsPQEtrAwbA+a5cTSehu8802h2ROW2ki2+7fT6WhjamgqNjb+pB+HdKDZGhMjE9HR0ZImsYZmfFN86eOETIt76ltpS5qYUqZnGnJaJpauYwuB1DR0S3LoxhhTWlLB7fYygw1zPOhOnRKHwUmlAQ4N+OhLCIFhqCTx+4MJs+ex9KMfx+V9lI2vvYS0c/T33aOcSb2HyDTw4XJN6wrNWxuYrrp9KooyDtXV1REI9HYLylXrCWDbNoceeig33XQTAAcddBBr167lV7/6FStXrtwnZe1L1XyOY0cddRR6riTdeWYt6u3HKbNWCd0EITGSfoStodtOEDa2Nvgc5ZlnanN1sNO3g5geI6bF0KVOXO/N0aihpfqAajqOjNHujzd3ctX7O3imNUhdNI6VLqYkaRipOtrua5hVn2R2fRJLgCXg4EaL252l/GBWLTfMmMBXp1bj1tVtuz8TQjBpwSLO+OLXmHHYEb3380C1mDnndx1edDp4A3328XTdyfZ33sRMDv4+URRF2dcCgUDWI1/wWV1dnU532GPu3Lns2LFjXxQzJ1XzOY6VlJTg9/v79esA+n3w9o5Ul1lLNc3CsnUSIonb9GF0B54R926knv2hKmSuKQ5l+iM5qUeQwsZlu2jyNOFP+PFYHnymrzcfaffc7Gb3m+Ddrgg/2rqbdtMkYduELIlGT9qm7ClBAYpCqRrPiCsVYJZrOv6QxfKKoqG8ZMp+RGgax6/8LG31u2it687s0C+gzLifc9yb+eozB8rUJPps03cOsR4evx8QRDraCZRX5DmiooxPsaTFq5uaATj9Z//GkoJZlX4KXAZOLURtUZgjppUwp3YJsYTkr2/sZGNjkKoiF1V+FwGPk2llBcyo9OM01Bf+/dnRRx/Nhg0bspZ98MEHTJ48eYxKpILPcc3hcHDEEUfw5JNPDmOvzI9SG7c7SDhcjG4kiAS2oFsubM3ENvoMZpJy0Lm13ZYbTWrE9BiGMGgLtFEWK6MqVpUVuEpN8NSG9zh//nweampnRyyBR9OIWDYWqcCzQINIwsLS9dTc3rYNmkbYo6FJcJgSjyYo0nW8ATU6/cPKX1rGKZ/7In/9/rdJRsLZK3u6l4xyt86+gWnuIBR0hwPbttG0oUzAoCjjg2nZ3PvKVn74xAeYlsWPlsL2tghxS7C5JdUXv6c7lU0DGo8j0fJ+YasKODlrUQ2Tywo4blY5tSW5B5Mq49eXvvQljjrqKG666SbOP/98XnvtNX7zm9/wm9/8ZszKpILPce7www+nvr5+hHsLwuFiQEdDgJ7E0pO5/8jk+YAXEoRlURAMIvwBah0TqffuJqEnKEwUMi04Led+23dup66ujjV19cRxErNSQ5O07kdUgtAEQtqputXu82+Y4KS802Jyp81cn5vaqYVMW5I/bZOy/6ueMYuzvvR1Hvjhd7HNHE3cA/b/3HsZ5zsbGwDB6n89wNHnfwKn27NXzqMoo6EjkuDrf3+HJ99rTPepd3V/byoFGumdurj3XaNhy+5nebqxNHQl+M2L2wAwBEwu8zGvOsApC6o4bX4VuuoGNe4ddthhPPDAA1x77bV897vfZerUqdx666184hOfGLMyqeBznBNCcPrpp/P4448Pafvsz+ncfxT6NWzmSVovkQhbYpgm7kSCMIIpnZOoiFZiCQuP5cGQBiLHZ38sEuNv//wnEyIJpk2YxsaqWmwEGjDJ5aAhaaIZDvRkgpAAG4EQAp9XJ3BCNVcVl2FoGkWVHgyHqnn6sJuy6CAu+9lv+f3Vn+0zFWfPF5Nc9ZW5mugzE9j3v6lFd4KwoepsbuSDl/9N1bTpzD3m+CHvpyj7imXF2bTtfv77L3G2dVWQOUy0p83Ii8BB6hMh6+tdOl+fzGhpyP/+MCVsbg6zuTnMP9/ZTbHH4LcrD+XQKWo62vHujDPO4IwzzhjrYqSpryz7AU0byq+pf7KlXOsyye5/A30WC8DWNLr8AWwhEELDZ3oJJP047NyBJ4AwBeFQCG8ixhFb3qMwHEyXrdOycWsabk0gnU5cuoFT0yh26KwoK+KGObVUTQpQNrFABZ4HEH9pGYedeS6ugu6sBULgtCzKu8KUd0VwJi1AgGGhOXt6DeeXdVtLmcoJKlO5QTMfA7Jtwh3tvP+ff6spN5Vxaffuv/P3V55ie1cZqY/0/n/Qm7rfK57MtaNwO7dHTc771Sss+9Ez7O7on15PUfJRNZ/7oXzTYPb9o5OvtTL3/v1p3YnsLV3HyjXqPvOYGScSCKSUOAwHUtjIpIne/cEtgS7Lotrl4CPlhfynPUTMlkxxO/l4dQlnlBeh7cXcjcr4VlBcSnFVFZ1NGrKllZkNrfjiSRAQcTr4oKqEmK4hbej3zaffty7ZO/FCvhRldE/T2W9hxpc5KYmHuoiHw7gLCvbsAhVllH1Q9x9eq5+JzPFx3pNILwkkgDi5Ys6+76P8TfD5bG+LcuQPnuXiw2q5/qz5OFWlgTIIFXzuR2pqati5c2c6sbuWVXE9cGLEoQac2QRIG2cyiWUYOBIJ4k4X0kj9Yek7r3bPs56aWicSL5Ldbg+WELgFBBwGccvGtOHi6jK+M30CYcvGpWk4NBV0HuhmHXkMbfU7MRwuPI1tFMRNQm4nQtPwReNUdIbZ4Qyge02QAjOZIz9npiF+kPYfSJ/RBCklnkARutMx0stSlL0iaVr87W0PGzpm5VxvZ/w/RzZdcr53RvDlv+co966u45Utrfz84oOYP6Fo2MdRDhwq+NyPHHPMMdz/1/sxLROJ7BN85tc38OyZFrP7SUquPp8i1ec04XSCEFgeT0ZOUYFIVzX1Jq8xDCdOpxNd17FtG6+AEk3g1HU0Q8ejCRK2QAiodBoIISgw1LdkJcVT4OfYi1bS3lBPNPB3oi/8G01IbNNEt1pxCoHDp5GM6mgaYGqpURCQ4x4W2csGqP0czILlJ+EYaEYmRdnHYkmT825/iQ27jyQpc2QEGfRWH71uJD1fASWwpTXMObc+xYpKm2+evYTqGbkDY+XApoLP/ci0adNYdsIyHn7mYbyWNx1E9gaT/Ws/czfQp7bJarXsO1d895ZS13L26xRZR7YRmonLa+P3VLJ06VIglUdMSsnkyireLSxme9ImYkt0AStKCyl0qNtP6c9wOimfNIXQ4UfQ+s67VAGWZZEwnGwREWwTsHVSEyMN8AGaLzH9cANQIZh2yNLh7aMoe0lnUyNtjQ1cvaqJtU0JYIRfinK9F/LVeso+tRSib4VGz2dKanlCc/NIs+SN367mjoujzFm8eGRlVD601Kf/fkQIwbKjl/F8y/O0vduGlJKAFRhW87slNMIuN7pt4YvHsyuGyJobKf1M9lZs5hw/DDZaQZwFS5tYvuQKCgpSiWsXLFiQqv30eils7eLPu1sJWzYL/R6umFQ5kpdAOYD4jjoKOxQm9MwzgKRs2TLq6tfQ/NJLWD0Ta2V+CI6wZ8mg+0nJznVrmbRg0QhOoCijZ8fad7j3waf5e6iaZtnd/3hPeiuJjD/uWf/Pd+DcA1RzZ5EQ7KaQS+/fwHPzFqh+oEoWFXzuh65YfgU/3fRT3na8zbyOebhtN9Bbo5nv0zTsdPFW7Sw6vX40aTO1eTdzGnpmlum7dc7qzjyt9BqYAqfmxOHozYXo8fT+vKKskGUlfmKWTcDQeweCKEoeQggCp6zAv+JkAKS0KXw4jLdwPV2xNqTFyFsO83/r6sdwOmmp26aCT2VMmYkEDz/2PA+HqmmWvlE8cnaFRert0LdL1cjtNt08s6GJUxdU7/GxlA+PYaVaevTRR7nsssv42te+xvr167PWtbe3c8IJJ4xq4ZTcygrLOOv4s0gaSbb7tqcHIA02qOj9qim0+ItxJRMIKdlYMZEGf/GI/r70PZMwDSaXHY3TmT8hvEvTKHQYKvBUhkWIVA7Y5m1b2fHuW1ROmoevqKxn7QBzaebLAzbUZd1NiZqOw+0eZqkVZXQl4zG2RnTacJF1w+5x181cXbVG72+0RGNjY3DUjqd8OAw5+Lz33ns566yzaGho4OWXX+aggw7innvuSa9PJBI8//zze6WQSn9LD1rKQv9CGn2NbPVvxcLKqPnMRdDlKcBpJnFaJt54jPJQBwXJ2AD7DHS07F6funAyccIFKrBU9pquliZi4TC604kQAq9poydNej8uZUbr4UCzu+chRPYjY/nUJYeOxiUoyoi5fQX4C/3EZY7m6xxZx0Yyan34JD3j6EX/QQNpv39xK9tbwznXKQemITe7//jHP+aWW27hqquuAuD+++/n0ksvJRaL8V//9V97rYBKbkIIrj3jWv7fv/4fGyIbCBthAmZgwADUH4sQcnkoiEbwJmOUBztwWGbe7QeSOWJeIgiU1+LyjGZTkKJA++5dbHnrdRq3bKJ1Vx3B1haCra0IIXEkkliGRiKduUFm9D3Llb5h4AkVctTnp5ZaFtogeW4VZW9LmG3MnNmM3F2ce4Os7ppizytEh0xkJ3rued9kJJvoiJrc+dI2rjtz/j4rlTK+DTn43LhxI2eeeWb6+fnnn095eTlnnXUWyWSSc845Z68UUMmvtLiUb1/wberq6vjTn/4EgIlJUAvitt04cWYNRppbv5WqzlYCsTCeZALDMtEG/UAemOz+sH9++kI2bNjBpRPKWRLw7umlKQpdLc385/57aNu1k66WJoSAQHklobYWpC0xXQ5c0TiJ7q7FMvMDVzAKNT+pPm+2ZRFqb8cbKNzD4ynKyCTNJDc/+AB/fnvK8HbsaQGQGelMhvS26NPfM+97aYBuL338/c06jp5RxjEzy3Cp9HoHvCE3uwcCARobG7OWHX/88TzyyCN89atf5ec///moF04ZnMPhYNq0aSxYsAAAHR2f9GEaJjE9Bul6IElBMs7Ejmb8sQgOy0ST3YOUhpt5hvR32+4lNtKxix3RBL/c0URzIpl3X0UZqt0bNxBsacZfUopuGOiGAzORoGb2fKpmzKJq0UEkvZ6MPTKay/OmjBl+OWzL5N/33EH9B+8Pf2dFGQX3vLKB+94uJ2Y5e/8ADxJE5q777JsiKd9bYs+b7PseoTNqcdO/1vGr5zZjWrlT3isHjiEHn0uXLuWxxx7rt3zZsmX885//5NZbbx3NcinDdNZZZ7Fo0SLcLjdO6cRv+vFZPkR6rt9UkKlJ0Lv/3/PHYeC+ooOTSFpa/kmp3EVzMkl9XAWfyp4TWmrcreF0ohsGpplE2jaRzg58xSUsvehTJJ05Gm8Gq/HM/4mbV9uuOlb/8x+EO9qHt6OijIK/vtFC3Mp1r/dflJ55Ls89LqXMegvsy176m1siPLhmF5ubVf/PA92Qg88vfelLuPOM+Fy+fDn//Oc/+fSnPz1qBVOGx+l0cu655/K///u/XHXVVfj9/j07YL4/XH1WCKDZlcC0wjQGt+HVNIpUk4oyCmpmziFQUUWwrQXD5ULTNAyXi6LKKg75yEcJtrZgmmbmt6juPDFDjCyHEYDGo2Fa63bQ1dI8zKtQlD3zdl0HG5si+TfoqVsQot+Ux33JvoPpepbvYRn7n6f3O17f73pbWyI890HTKJ9R2d8Muc/nsmXLWLZsWd71xx9/PMcff/yoFEoZOU3TKCkp4ctf/jJr167l4YcfJpFIpFYOkM+w98+RDUg03cS2Hcju7ycSiY2NlnUQASRpLYoTtWwCmpNzKouZ5M4x1ZuiDFNBSSnHXvhptq55AzMZp7CskuKaCfhLy9CdTh7+yfcRjiTIPn/GegLQocxmNGAqw94VyViMiOjESsTzbawoo8q2Ja9tbeUbD7xLwuq5UfPfz4MNMZJ57vPM9PLZ3algSPWifYo1UJ6JnqPd9sxGjphayuLaosGPr3woqSTzH2ILFiygsLCQe++9l2g0OsBnbG/fTbenk0CggY0kqNeC2AkvZaEJFCWKSegJ/K4QjkQBoONwRIhbGtUhjYkzFvKZRStYVFis0i0po0LaNh5bMv/gpeglJVn3VWdTI8HWFnSXhTXUbGFS9galw7xHbctCSonDowbTKXuflJJfPreJnz+zkbjZNxgcYj1lv1t8KPd832MPsXF+mH/yu2IWP39mI79bedjwdlQ+NFTw+SFXW1vLRz7yEZ5++mk6Ojp6/0hImf4m3LPI6YwihGCziLDRtxNp68T1KJ16jHnt8/AnCzGEjj/QjABCoWIScS9+S7Jy5oXMSif+VpThM5NJ4uEQ8XCYaHMT9r8eQ27fjtB0fMccTfGFFyKM1J8sq6sLO5nAth25P/cE9K2OcSQtXJZNQtdIOB0Mt7FRNxz4S0pHeHWKMnQbG4P88tlNfQLPHrkC0DxBabpLysDR4VhUF/xnUwsbm7qYWREYg7MrY00FnweAhQsXUlVVRWNjI7FYjFgsxqZNm9ixYwe2baNpCUAihIUAdushbMvAEyvGITXatRidrk6KkoWYSQ9trZO6jyzRkeimQbg9DFPG7hqV/Vvz9q288a8Had6xjY6G3ZS3dDClqZ2C6dMoLCmn6/EncE6aRMFxxxHp6mTVb3+JLUHTbKQ9hCBS/H/2zjs+srLe/+/nlOnJpG+yvRdYdln6IkXKgiAgekUuqCCiXgVB5YLXegH9XUFQES/Wq4iogKKCjV4WhKUvsL2XbEk2vUw/5fn9MSmTZCaZTJIt2efNK+zMOc95zjPnzJnzOd/nW8AyNKQmsHWt68FLILpT0ORhJUpEIiTjcQLhkhF/XoViMN7Y2ULMGiwiPFeZruy5anOtTbN/MoL2H3HccrnyV6/zk48ey9FTc+QuVYxblPg8TKisrKSysrf05SmnnIJlWfzmN79hz55aTDOGlBqaliLki9NsC1wp0i5zWjo6HugSquC6Oprm4vNFiMfL8XiUn6eiMFKJOG/8/S+01u2hZc8u7FSKVh06K4tJJNoobk4yG5PiujoAXvz9r9lTuxUAN2UgjDztNpqGLWR2K1DP7GK2vtLqVDo2rz3yR8797PXKtUQxpujDq3ydQf/v5cAA0f7Jlkb7mzy4BO7L3vYk//PYeu7/5In4PSpQ9XCi0G+4YhxgmiYf+9jHWLhwMYZRRSoVwrJ8TE1V4HE9tHZNuRdZISrjVehWkEo9xJSQxfRJW5gx421c10tpaSlz58490B9HcYgSbWsl1t6KLxjC7gqOi3lNOgI+UqZBk2vxthNnR2sTa198jvUvv4B0u6xCw02b1C8iuDtCOB0FnNlh/zjd9L/b332D9S89j6UCjxRjhOtK1te1D3OrbN/b/t/f3qrt3bmfRdaQ9AJykfVD9PsbjPV1HdS1x0e0P8Whx7Atn9FolNtvv51nn32WhoYGXLfv1MC2bdtGbXCZTJ8+nZ07dw5Yfs011/DjH/94wPL77ruPq666qs8yr9dLIlFYLfPxis/n44Mf/CDt7e08+uij6WO863jmmO20edrQ0KiIVxBKllMcn0FZcAJ2JEG8rYVEeSMzZlRx/vnnY5rmgf4oikMUX6gI0+cn2toKUmI4Dram9bFCJjVYs2MTrSuex7WGkUdW9PwPyOeWOlj4uyTW2sab/3iUjsYGTrz4IwhNPb8rRpeWWIp/bW4C0tah/NKxDyMQaVAylahgf9inIkmH7z6+np99/Dg1o3AYMWzx+alPfYoXXniBj3/849TU1Oy3L8sbb7yB4zg979esWcOyZcu45JJLcm5TXFzMxo0be96rL3Z2NE2jtLSUj3/84zz11FO8/vrrFKeKKbZCdP+g+ZJlVJZOoXJqusRgy54yFhxzKkeeOukAjlwxHvCHilh89nms/OejhJIWmuPS4R/oxtG4fevgHeXn+pm1Wd9fhkHzL5GMRdizcT2dLU0UV1QNvVOFYhhYjsOetrQlcA6wcfDmw0RmTLSLHOmZuuyVIgYywP4IR3p2QyOvbGvm5FkqaPVwYdji8/HHH+ef//wn73nPe8ZiPDnJ9FcEuP3225k1a9aguUeFEFRXV4/10MYNhmFw/vnnEwqFeO6550DqIAW65qW4uALDoyOEQMr0z5ebT6CHQpEH0xcfg7FmHbv+8RTJZJy3Zhb4UJM1M0zfVDXp2fV+313Re0MeSsXaqVRGrWyFYnQxNA2767d1S15bDP1FFEYzmrcN1zEQVim4xT05nPu1zOjWBySB7MVlRhPblby5o1WJz8OIYYvP0tJSysrKxmIseZNKpfjd737HDTfcMKg1MxKJMG3aNFzX5ZhjjuE73/kORx555KB9J5NJkslef66Ojg4ALMvCGs503yjSvd/9tf8TTjiB9vZ2tm7diqZpBINBpldWEq3Vaa3vRALeYpOKacEDdkwOJPv7fBwuGIkUReh0TJyYTqkkNHqskINc50JP/4wJo8v1YyhDzeCGTdITnbm81QToBhPmzMNbXKy+A1lQ18fICBjgMyS2O9i0+9BJ5wG8XZGiofIV2J5Gkk3vwXV8IDJ8pjPp4/esAcNPSVYojR2xUf/OqO/gwYuQMt9adGl+97vf8de//pXf/OY3BAIHJuHyH//4Ry6//HJqa2uZOHFi1javvPIKmzdvZtGiRbS3t/O9732PF198kbVr1zJ58uScfd9yyy3ceuutA5Y/8MADB+zzKhQKhUKhGB6xWIzLL7+c9vZ2iov3bz7Rjo4OwuEwj/zwDoJ+/6j2HY3H+eAXv3xAPtdoMWzxuWTJErZu3YqUkunTpw8INFm5cuWoDjAb5557Lh6Ph7///e95b2NZFgsWLOCyyy7j29/+ds522SyfU6ZMoamp6YCdZMuyePrpp1m2bJkK7DkIUOdj7Hj3R3fR+Ng/SQnYXhlGuKAhsU2NqqObCVbHEQKcpE7j6jKiDX6EYTLzQx9l219+j7RTIxtAHjk/haZz4gcv4fgLPzSyfY1TDvT1YUdSxFc34URS+GaW4J0R5tmNDTz0Ri3JVNriN7emiC+dPYeQ9+C8fr/44Ns8szGz/vlwrY/p76xXk3z7OJdbNq4nJVqx248B6QdEn3Y5u98PYRKlwGV4WB82+cH1J2Pqoxfk1NHRQUVFhRKfByHDnna/+OKLx2AY+bNz506eeeYZ/vKXvwxrO9M0WbJkCVu2DO5F4/V68Xq9Wbc/0ELjYBiDohd1Pkaf6vPPJ/Hss3RaMYRlISVYQhCYECFY3YYVMXFtgTcco3S2TWRvTc+20koh7Yxptpwicng38rQezYyYt1j5j0c49n0X4lWzITk5ENdHdG0jrQ9sgK7Y1OS/6vGfNIHfNbSwuSGG19AoDXpYszfCuvoY75l98PkYOq7E6/MgEaScodtnp++XP9Y+k6SjA56edd2BR/2LgQ3SzSAMsx58Bk3AP7HpbLVxpTaq3xn1+3zwMmzxefPNN4/FOPLm17/+NVVVVbz//e8f1naO47B69WrOP//8MRqZQqEYKZPmHUHzkQvh1VcI+C0Suo7UNDTTQQhw7bQvpmPpaB6ny+2t2ysuyx1U9nszWMaLHL6gIsvKZDTCrnWrmXbUYgBM79gHZSiyI12JVRcltaeTtr/0My5I2PZqHZt8SVKAoQv2tMYIeI2eoJ6DjY64RW1zFKePs2f/L+dwH6QyrZ19e8iGBkiRb++F1YPP9Fh1gXopufyXr/G3607Ja6+KQ5uCKxy99dZbrF+/HoAjjzySJUuWjNqgcuG6Lr/+9a+58sorMYy+Q7/iiiuYNGkSt912GwDf+ta3OOmkk5g9ezZtbW3ceeed7Ny5k0996lNjPk6FQlEYQtM44qtfZ+8Pf0Dy9Reo1Q3a/D6SbV7suI43nMKxdAyfTceOUPoOmesml+3OKbsFqBzYdrB7pUz/T3a1EQhe/fODrHn+KQSCGUuOY+EZy9B0VaVlf5GsjxB5ex/b320g2Z6kSmr4s5xEXUq8jgseHduRWI5ESjii5uCcrgz5DNpjFk6fr2h38F033V/Yft/lzETxw0ktmNFUIx3fbgMW+cvbgQx+UXX3qwO1SCSwcV9nwXtTHFoMW3w2NDTw7//+7yxfvpySkhIA2traOOOMM3jooYcGpEQaTZ555hlqa2v55Cc/OWBdbW0tWkbC59bWVj796U9TX19PaWkpxx57LCtWrOCII44Ys/EpFKOJ69rEYtuQ0iEQmI6uj67f0MGKWVbG1G/eTOufHmTrU7/FTUhSnR4a3imnbH4butehfUcRzetK+m2Zw2yZ9e4psrSTgwpQmbFOIqnbsQVzdy2GYdJSt4dAuITZx5+Uz0dUFIB0XOyWdJGQxPZ2Wh/dwg7XxkRQgsAEXCRav5NYhuD7KS/PpyxeLNPpMAQnziijsmige9XBgKlrLJwUZnNjdJBWfb6Mo0oQmIrGPlxSQEeftfkWzsyfzFphpq5ycR8uDFt8XnfddXR2drJ27VoWLFgAwLp167jyyiu5/vrrefDBB0d9kN2cc8455IqPWr58eZ/3d911F3fdddeYjUWhGEscJ87OnT+nrX0lUjoEg3OYMePzeD0Hn4/aWCBMkwUf/CBvvfNH2JGef4w1+Ik1dE9vZ5bDzNVJxr/53KCzWUS7diGz3BMt4SBwkCmXjqYGdqxaqcTnGJBqidH8+w04e6P9jHyS6ei92bjIfpp1BBPRuRyd01scfjs7wFXvmbGfRl8YFy+ZxBNr64lb2RItja1A6wRacInRVxhmo7dgJ1kS1g9/nMsWjJ3xSnFwMWzx+cQTT/DMM8/0CE+AI444gh//+Mecc845ozo4heJwpbn5RVpaV+D11iCEQUf7O+zc8XMmT74cv3/6uK/WJaWkfutanIQXRFdJXAlpleGCkCC7ZjpG9VBkn8YUXcu9JUmEBvEWD5oU2LrEkDqubWMnVb330cZN2jT8cCWk+gobCbgy4wbWR4DKfrV70ksFMAmd620P8yeF98v4C+Fv7+zhzic34vRx+sz19DQ2fqv1pI+a3rUHN499yZ5rJ3/f0v6cOkdVDDtcGLb4dF03awSZaZoD6rwrFIrCsKwWkGAYISyrjUSyjvr6v9LU9BwebyUVFWdTVXkWgcDBbcEpBCkddu95kHUrHyfelkQIiZSi5y5WNDWCHTeIN/YLohBi6DtdT5xGlhupEF3ptUXmIoSUIFwqFzdRPDmOQMOur2bzOxqaJZHSQTdMauYuGNinoiBcyyGxoYXIW/UDhCcAMkt9nh4Bmq1oZPqcakCo4+BNPL5iaxNfe2Q1kYTFnOhWYpqfel8VjjAzvtv9fD81C6HHkI6RLocp8/E7HvxC6U4z7/ZZMrBNPv0OWdMhg4ff2s2Hjp2SZ2vFocywxeeZZ57JF77wBR588MGeBO979uzhS1/6EmedddaoD1ChOBzx+moQmk4y2Ug0uhHHiQAaVqKdeKKWWGw7HR1vM2f2V/H7cxdNAIjHd9PU9Cy2E6UotIDy8tMRYvRy6Y02LS0raGj4J0IY6flu3QW394aq6eAkCoyVlD3/y76qi8ybpSsE5QtaCU+NoXVWEvQEEdM7qWjRad9hYvq8TDvqGOaetH9LDo9XUvuitP55M3ZjHJmwc7Yr5BssAU3vKhF8kM0eWLbDf/91DZGkQ9CO4XUSpITRt5hR/7KxWgLNuw+hJ5COF9cqAqsiS7CRyP0FPxDkmKHf3Rrf70NRHBiG/Qt+zz33cNFFFzF9+nSmTEk/oezatYuFCxfyu9/9btQHqFAcDth2BMtqx+MpQ9f9lJWeQiK+m6bm5dh2HBBI6ZKeCBM4Toy2tpXU1v6SWbNuxDBCWftNJBrYvPl/iMV3oet+WltexnHjTKgaXsoxKSUtLS/R2vYamjCpqDiD4uJFXfto5N1VVxONbkXTPEys+QizZ9+EphUmEJPJeqR0qZw9gZ2vx4m22GTeee2kjmNrDLyD5pgW7HPTFdmtnplNsryXUqdpbSl2uw/T0KiYqxMqNpl25jlMPuIoZi45XuX8HAXsjiRtj27BqouC2Vcw5VUPRYIUuVWWCxiuIFXbiXfawRXt/uyGRrY3pYOMvG6Cvb6JGNLGzfmgaCP0zrSl3vGCFGh6EteNg9vvuyi7stVKF1NapISny6w/EhU6+go2aRec2FRxiDHsu8OUKVNYuXIlzzzzDBs2bABgwYIFnH322aM+OIXicKCt7U127f4NltWBdFNouh/DKKZ6wgXMmnkDa9Z+kVislcxJMNd1kNKhueUlNM3HrFlfQtPS0btSSmKxbcRiu9m0+WYSiV1dW+mASXvHKrZsvhNN96NpJkIYlJWezJQpV+D1Znf4b2x6hp07fwHSQQiNzs61zJx1A37fJF559WxcNwKA4yTYtftXaLqP2bO+VNDxMD1lCASeUJJZp5ay+cU2Yk2eno8f3VugyBsqQGkQOncEMX0OHo/Eth32bTIIT5zAe6/4lMrxOUq4SZuOJ3aQ2t0Jtkzn+uliWIX4ugLEHMBG4u0SSQkNAl4dYWhEXqsjtnIfWrGX4LETMEoOfOT7urr2nuciQ6ZFmC10TOmQEtketnSkE0z7PmsOSA3Nuw9SZVn7r0g1sahjDX4nTkQP8k54Ee2e0rH7QLkY5FQW+8yD0ip9uHHDDTfk3fYHP/hBQfsoyDQhhGDZsmUsW7asoJ0qFIo0qVQTtbt+jWW14boWnZ2rAImmBehoX4npKcey2rNs6SJlikSinr11D2E7cSZOvIRt235Ae/tKHCdOn7s3kL4dO7guJJK1fdZ0dr7D7j2/ZfbsmykumkN7+0okEk3z09m5hvr6R3HdWFfrtIhNWS3oWqhHePYi2bfvbwWLz/KyU4h0rqe15XVcmUT3inSAUU8s0DBvTFlNmcPrwoobGF4wvBIpbSJNOpPnHa2E5yiS3NJGak8EHDl8i2c/BJBEEkPiJe2y4XcBy8WJpGB3J3rYi6yL4rQnKXn/DDRvwWmvRwVvRo7YdrMYv5PAcC1cBMJ1kJrRL3+7Bq4H4WlAM+IIoy0dhSW7UrJJ2WPl9zopjml7h5ATIa75qbBaOKb9HV4sPxVnuDMUIglSR2SRDzKva7N3FkOYzRihzSBSuMlJaNoiJTwPAt5+++282o3kXOX1rfvRj37EZz7zGXw+Hz/60Y8GbXv99dcXPBiF4nCis3M9TU3PEY1uJRSaS1vb20jpIoSJrgdJJOtIJPcC3Tel/qpJImUc24a9e/9MXd2fkDJR0FgkYDudrNt4I/qQ6swGbDo6cv9AOU6cZKppQGoo6bo47e0I04MeCmbdVtO8TJ/+Odq2VtC0egV2m4bQWpFO/+nHAlTkIGT2JjJ8Q6UQSATJFp1ke1dyGWEwad6Ro7ZvBSTqo9iNMXB7BWehNzcX2IBDCYKe+GkNcCXSctEr/RhBD9J2sZvi2E0JPJOyu67sLxZNDePVNeK2S1L3kxJm1zdQy+5hIgAMpBVG89fjpCpwo7Oz+jUHnQgBN0a7UYwrdByhUWRHCThxOrWiHCPqf225GOE3MUIbkI4fu3M+TnQBmTJC5BNe1HWhCaMdb+VTCE9reqG7Cb8/ALx38O0VY87zzz8/5vvIS3zeddddfPSjH8Xn8w2aO1MIocSnQpEHLS2vsmXr7cTju3GcCKlUA1JqpG+bEtvu6HotGGjBzEa8jytjfgXu+raF7joqmdn78sOO66QiJrrHwVNsoWkmmzf/DzNnfJFAYBoATns7zb++j+SG9WAYFJ17LuELLsguMKRgz9qdeP2lhKt1tGhderpd5uOnlucNMMunFP2tbFIipER0F7DoSu8UKi9XAUajiB1NEV1ei3Qk7VYTjfFaJgfn4dX8BQXHuYAJDEjTbggwtfS0PiAtF6EJhHHgrW1lAQ8+UxLvutxlf4vkgO8m6WvBKcNqXTpo3ynNgy0M/E6CqB7A5yaxNJOE5smxxcCHOrN0BZ7yF9KR8HYQj7cR24xitQ03t21afer+nQhPG26yCtDQPE34w5uG2Zdif7Flyxa2bt3Kaaedht/vH7F7RF7ic/v27VlfKxSKwti9+zfE4zvRNB8QwLbT0expa2YSKbtzRg7Pste/dbcRRJKezdS7shGN2syWBCuh0bErQNuWMNIRlM7QWPDeY4jHd9LQ8DjTp38WgLa//IXoa69iVlbhJpO0//kveCZNInDMMQP7FQKBwE4liba04o0ayKQFLsR8nowPkO2DZBOzuZpkUez9xoGU6K6LzKigVlw1QZXSHEVa/rwZLHBcCyRU+qagCyOd/kq6wxOgIj3lPh2d4gGVgASeKUVIy8XaFwMNfHNKMSoPfLBYdbGPlD1Y0YSMYLlhXr8RI8TG4BzmRzZRZreR1LysLVpASvfm1Z3wNGKEV4JmgeNHM6JI10bzNA5vID0dZhaJ6EqDJWBuVS4rrOJA0dzczEc+8hGef/55hBBs3ryZmTNncvXVV1NaWsr3v//9gvodcb4Vx3F45513aG1tHWlXCsVhQzLZgHRdDD2EaZYjhE7aJ7Nwst62uha6Mi0+Y27a6CMz/jLbioy/IV3tukStHTMIlCepWNiMZjq0bIVdazaiaR5su9dfNbl1K3owhF5SgjlhAjKVwtpbl7VrIQSzjjuJZDyG1dqK1aERsC0qOmNZBp4xIDfjT/YuHvJgDXbPB/Q+OYwFTTu2s+7FsZ+aOhxI1LaTWtcCgBA6fiOEIcyecyKEltXCIoQYuLzrbRBBGK2rOADpp64iEz3koeikGsJnTSV4YjVF751C0WmTEdqBt3z6TY34UClI88llm4PNoTn8q/w9rCg9kRfL38POrhkJGPoRV/M0ITQbXBOkhpQaQo/j2oWLRSc+FWmVonnr0bz7CHg8HF99csH9KXJzyy239Fwv3X/z58/Pa9svfelLmKZJbW0tgYyMHpdeeilPPPFEwWMatof1F7/4RY466iiuvvpqHMfhtNNO45VXXiEQCPCPf/yD9773vQUPRqEYL7hukmh0GyAJBGai672BKVZDA6xrw62KEu/YiQwCYgxSjGTcUYToylzj9rWAZrbLFpeT2Vc246F0wYqZCM3FU+TgK0sR2WuStLfT3q7j802hre1tiooWYFRNILllK4Zl4SYSoGvo4XDO4c9begrxaCPr7v8J4VSEUChOrNOL7ro4ut47qO6BOZJgIoWrCeKmObRLaLbZeSl7rapdZmPdlbgZIkdoAse2WP/S88w85niKK1RJwEKQUhJ9ax9tf9rcs0wTGh7hw6N5+3s39ySQH0AOQ3efxR4Nw2+ihz0YpT7MCUEOfHx7X97Y0cqYlmkRglZPKa0UEOHuepB2AKlpaEYMNAtpFWN3LClwMBJph0k2no0R2ohuxJjsXcKZU08rsD/FUBx55JE888wzPe8NIz/599RTT/Hkk08yeXLffNJz5sxh586dBY9n2OLzT3/6Ex/72McA+Pvf/86OHTvYsGEDv/3tb/n617/Oyy+/XPBgFIrxgG13sn37j+nsXI0EikLzmTHj85hmKVJKGr73PQJvt5O4VCc10R7UQbO/ga+Q6XIJWG7a3c2jpY2CgwrNfhv36DvZd/8SEBpohovrgHTStWUmLGkiWJXAdSX19Q9TX/9XSsJHM/u8z2PX15Oq3YElO9EWTSQ2K0LAtbqmVulJFwUgNI3qowzaT9+L3mkjXUFotU1JQ4jmokD6g2SMfNHuBmzHZUt1aXoOb9gHSmJaDpaZrheuIZFC4AiB1HsniYSuEwiX4to2bfV1SnwWSNtftxJ9Lbvlu1tmSpnly5oXkjokESQTPAYlQuBGLUKnTsKoOvBT7NnYsLEWXLfvRVbIBZ8tl+2w++n75ObEp+LEZ6L7t+PaGjg+kk1nIe2S4Y8vA2lVYLWWEJj8Vz5y9BKC3oHVExWjg2EYVFdXD3u7aDTax+LZTUtLC15v4Y9wwxafTU1NPR/gscce45JLLmHu3Ll88pOf5O677y54IArFeKGp6Tna2t/qqjyk0d7xLvsanmDypMtwYzGim98lMSuFMA3QcgcTZZtZ7jHMZVr8oCcgNpehz+zWTsO8l0sgIvzY0oslDDTXoUykXWy6ZwD9lQmsiEGs2UvxtCjecArNzBxJipb2N/lD9Ock3jeT0kYvM+1tmNMELZt+Qd2f7iHVXk+qMkVyjoMULpqmEwwegeN04ExNIerTPYljJROeaKdDmmBrWIaOLtP2IkfX2B0O4nTffIe64fY7YMJ2qIzE8TgOCcOgNeAl7jXTASkZm3kDQconTca2LDw+lWqpEBL1kbTwHKCRRJ/USqLfNHN33faBiIw20ITLD0kSR1JpeLiiuIi5JX4CS6oOylQ+TiSCZ8W/gFn0/cC93+PMQyVwye4117Vt92fM4pWQ1bU566gyx+Eh1XQWur82nRYpVYm0ynN+nvyRCKOTGZMS1FQq173h0tHR0ee91+vNKQg3b97MxIkT8fl8LF26lNtuu42pU6cOuY9TTz2V+++/n29/+9tA+pp0XZc77riDM844o+CxD1t8TpgwgXXr1lFTU8MTTzzBT3/6UwBisRi6csBXHKZIKXHdOEJ4SKaaEUKg6+mnRU3zkEo2YlmdrNvyFVov3Y5T2jXNni5Y1NVJRoeD3R9lxp+g944ist9cupsM2W8OHKmjYdNOORGtGMOxCWudPet1XSKKLIyAjWbI3vtexuz1M5zDG/ZJxPFB6ZGcSJhlLU9Q9VcHWSswBRgGcLJL/HgXx4HOzrfAAqMO9Na0KHGqXfSPdzB7W5LGVytoMoKEYykAOvw+Yl4zXREm4+Yr6U6dlOU4ui66lAgJPtuh02siNS8Jj45lGDhopISJXybRAMPrRTcM7FSKaYuWUDVj1vAPqIL2P2/O+aQkhOjJuJAfvV9qt+vP0QSTXUEHsNey+WM0yv+cOR1NH3GYw5hg1dZy8t5V1EycQp0c+EDT92gIRhKukfFzkQWZ8f90yx6xLw2c2MyC95t9XynKK3ZQ7DPRhdIPw6W7ymQ3N998M7fccsuAdieeeCL33Xcf8+bNo66ujltvvZVTTz2VNWvWUFQ0uN/uHXfcwVlnncWbb75JKpXiy1/+MmvXrqWlpWVEM93DFp9XXXUVH/nIR6ipqUEI0VPZ6LXXXsvbgVWhGA/YdgTDKMGyWtm169e0tr1JKtWAJkxsJ46uF6NpJlLa+PxTeOfdq9O5Mcvd9O/6YG6eQ917bSAJBOgrXkVfoZlPfm6RTfxmLPLLBKaw8ROngzAIt+fm1f2vpoGmZ99ZA1W8zbF4iVBEG+2UsJ4jObf2OczdCewqCQboLeBbJYgfQ09qUy0OwgXpB6mDSIG/CezpCSa90U4TQQwnbfkUUuJoAs11wRW4XUJDQLoT3QWn+ydPgOtiSNBc8Fg2QggqonHWTZ6A10ohSU+9+2QKBx0Nh2BpOYvOPIdJ84+kZvZcFfFeAHZnEmtX38IEAxLJF2icTOeLAEvXKHMFcaA85CVS7IG5JYV1uh8QPh9+U+fmxCqu9R2HIwcXl9nFY/4HbXDhKfq0zC1U8ySrqdUFLYEeXMeESeuYXbKQxVWLR7KXw5Jdu3ZRXNxbJjaX1fO8887reb1o0SJOPPFEpk2bxh//+EeuvvrqQfexcOFCNm3axD333ENRURGRSIQPfehDXHvttdTU1BQ89mGLz1tuuYWFCxeya9cuLrnkkp4Pq+s6X/nKVwoeiEJxqNDS+hoAGzZ+naLQNCSSlpYVpFKNOE68q2Slh0S8Fn9gKuXlZxCNbKCj4x3ATQsrSfrqy7Rg5ouT7gZP1+tB7lN5lDIfFAEYwgaRLvlXRguyv+lkkLGnbRtegnQyX67DEA67mYSOi1MpiS110BsEelQgBehtEHxRww1A8kgXrS3diR2W2Ckdb63EtxXEWg2sOBNjnTSWllAEhGMJ9gU8WJrWtx62bmN4JI6lZ9wHJR7bQXcluuPi6hqm4xJIplP9pAwvpp0CJC5aV5YewcLTz+L4i/7toJy6PRSQUhJb1zxg2cCGFKx4BBCSUIFgKy6tBiyaVETwAFcwGgzP9OkETj6ZBS8sZ0LpbPb6ukpk5vyedYvCQRzGh8XgPxIFn46c3WogDbyyhuuOO4mTak6i2FOcq7EiB8XFxX3EZ76UlJQwd+5ctmzZklf7cDjM17/+9WHvZzAKuho//OEPD1h25ZVXjngwCsXBjJSSPXseYNv2XwJfJJHYh23VY9mdGEYR4OLxVOA4nXi9E/B6ypg37zs0NT3Hnj0PkGnqlA4EXtfwbhBIExJLXJJH5OmQqdNr4umeZ8xW+nkQMo2dPW5lORzCunclRXr6WsuYxx9Mg3V3VSHreS/P4RdxpBQsEm/jSo3OogCh2VH0Ugj+S2A0pufIQ88JSGjYT0L76S7mbo09WgnxlBejU1KT7KTcjIAhmdbSjuVNlxPcXR4GHFyje8TpwQlNpIMkeqKmJJrXQU9Kgkkby9AwbIdJLZ3YuobmuqQ8Hkw7bQPScXEQGB4PNbPnsmvtKuKdHRSVV1IzZ54SonniRC3an9pB7J19Y74vzYWFGNQhKasq4ur3zDyoz5PQNMqvvALziCNp+fPePusGl4VDRCnm9eSZLe/YfjhW0ssHjljK+2YsGvt9KfoQiUTYunUrH//4x/Nq39rayq9+9SvWr18PwBFHHMFVV11FWVlZwWMoSHw+++yzPPvsszQ0NOC6fZND3HvvvQUPRqE4mGlvf4s9ex7sqj4EqVQ9mq8CKVO4bgIQuG4SKQWOEyOZctm9+7e0tr2C6/QGFkkJ/pUagVc0pFeCLQg+r+EGXKwZmcEWve0z3wPpafcU6Su42wqag8FyU/fELuWIzxF0ic7ubUW/ProFcHfjflZYIcErLSaLnWxmPj4Rx0MqnfZFK8EpBmlK4ke4BJt0tE6QSQ1HCowm8D7nZdu8ELFOP15pYXs0dhPGLLIIGUmMNofiZDohf2vAh3QsNJ+NcAWulRazuuniWr3qXOjpccW9JoGkxZTmDkzbJe41WD9pArbHg2lbPaIbwESi6wab3niVlt21uLZNPBIhUFxM2aQpLHzvWUycuyD3SVAQfa2O+NpmSBZuis8WbNT/mUkDwi4UofEhPEx97xxC5QdnhHsmwjBY7ptMwmjqWTbsIzXsaY7MuYD9Jc7T+yzxG1zzXuUzvT+48cYbufDCC5k2bRp79+7l5ptvRtd1LrvssiG3ffHFF7nwwgsJh8Mcd9xxQLrk+re+9S3+/ve/c9pphaXHGrb4vPXWW/nWt77Fcccd1+P3qVAcDnR2rieR3IfrpjNBW1YEQYpwybFIV2JZrdh2B7oeIpVqBCR1yT9i29GebXrETK1A6uCUppcadQKjXvSKz6GyrZj0Xr15XIKi/x06c13mqlwCNNuGLnjfAD0msKZI3CA4lfQpRS+79h0iip8YTtdKCRSJTvCCY4JVJdDbBSIq0tPmusA1HIyEi91uIifZCMshsF0SNTxYjSZaIIknalNmxWgFFtQ10uIVNDpBzBILoUuSERPNdNE9LmgSJ2bgOgInlY70aq4I0FwURHMlkUAIyzDwJ2IYXQ8L3aJbCA1/UTGte3bhC4RoqN1OR2MDrXW72bdtMzvefYtzP/dFpi1UfmvZsCMpOt+sQ0aGyqKem+xR7t3rBqIjKEagxwrf5/7m96/v6LekryTMfDead94ReOYMYw9dvyQCdM3h5x9fypSy4JjvWQG7d+/msssuo7m5mcrKSk455RReffVVKiuHThN37bXXcumll/LTn/60J6jccRyuueYarr32WlavXl3QmIYtPn/2s59x33335W2uVSjGC8lkPa4TQ4juy8bCdizC4WNJJutIWY24bhzHjpHqKpcpRAwpM25+Xb/y0i8RXZa57tl42W29zPeuMop3n6GC6/u/FwBx8G1J18m2i7qWldArPjPQcZklt9AsKohQhIlFWLaCACehUfK8QPokIibQXYnhSqSeDvgRgJ3ScQI2GBqaA/4GF1MTaAlBiWXRCoRjKUIdNkaRi396BOFxMF73srOlDCssELpA9zqYcYmWgJjHg3S70jU5Lp5UAm9KpnN8ZpiChabhC4Y48sxl7Hz3bSKtzXQ2N0JXiifXdYl3dPDWPx5R4jMLqeYYDT99FyK504rlIpvg7B8JP5goBRCBg9fXMxMpJY2dqT7LBs5UjJaPZ3+GOIYj6rZ7zF0x9MLi4pPbOXHmaKRqUuTDQw89VPC2W7Zs4U9/+lOfbEa6rnPDDTdw//33F9zvsK/KVCrFySerEliKwwfXTbFv3z9paX0FVyaQsjeiUMok27ffDWgYepCU1UJ6Trx7fd++uqfA48e4GPVpaycCrEmS5PwxrW9SELksIhIQJkRPc0kVgxPUEMJF1/rGIWVu7yNJiWwhhZci2ZEO43HBaJfImIdohUBEDQLxZE9qJGFBpR3BCvpIxjyYAZiwJ0JpNO3mIADRFWXvT1qgJZm4III72UVrF4gTEhz/QpSmXSF2VpbgS1nMbGzDn7LZXVZEfVmYNr+OrXswnFTaa6DfSTNMD8ec/wEWn3UebXv3sum1l5BOhv+u6yJ0g0Q0gmPb6HlWDjkckK6k5cGNOYVnd+WibGnG8hGe3ctyClANPBMODeuaEIKasJ/tTbGuJWNvjxxkXqNnddY0ZQXh4A+0cvriFm464/LR6lQxxhxzzDGsX7+eefPm9Vm+fv16Fi8u/GF72L+Sn/rUp3jggQf45je/WfBOFYpDifr6v7G37k8kEnuyrnfdOAApN5q7E9n3J96uhvYPOnh2p6ffrRkSOdZuaUPcZ/oYVbKIgQFtNbDKAT8YGYUB+wfCZ3YVJE6QONIF6QqciEaqKYSJINZWREiLockkUoBjaCSKNcK2jVMTRZdtBJsFgUkpokdLtIjA/0avk2kkaCLPjBOfq0FYooXB3ALCkIRTKSa3dFIWTRBMWQgJMxs7qG6Psy9chO0JkNIc9pT4Bvg56KbJkaedib+oiKPeezabXl7e91C4LkLTqJoxSwnPfsQ3tGDvjgzdUPR/OzqWPVHqRZiDpy06WHhjezP1bWMlPAcLIkpXJsvq8zkqwxBUF3v54HHFfODYeUwtnkrAPPh9cA9nVq1a1fP6+uuv5wtf+AJbtmzhpJNOAuDVV1/lxz/+MbfffnvB+xj2L2UikeAXv/gFzzzzDIsWLcI0+5bD+sEPflDwYBSKg5HWttfQNC9SFlh/XWb/DXdLIVm2P6wbXcPIEXQ0sGGeHeqAf4gp+345RB0JwhKIuEDGDZJ/nUDpzgTBeIIitxndddOBPhIsTcdnuSQNiRl08DZJfJVJkpPBrBc4ZZLYMQ6+rt9Jr9cmWi6JJbwICwIVCYTU0bfphCwbkYoQdNK32O4EAaGURaCxhYg/lq41bpbRHvAita4coUJgeLw0766lqKISsa+BkCOJIkgheyK1whOqOe78D+R54A4fOp/bCfRNp7Q/4wQ8lYFDIi5BSskPn9nMjuY4fS9AB7QUuF7ySizf7dyddXZ+cAGa/9LhETAFl58wjc+cPhOfqfLiHgocffTRA6qNffnLXx7Q7vLLL+fSSy8taB/DFp+rVq3i6KOPBmDNmjV91h0KF7lCMVx0PYBtt2PbeVhwDjTZhGOuXJ95ZFQRdG3bN+phyJuSzGjQPW0ngVWJRST0ECV2hJZd1Zyx4x38iQRJwyCQsNG7smc4moaNgRF3aPaGKXqqE89ugVlp43tbIBzRU6ReGumdaQkIvqoRWepi+wwC/4KSJwXCSgvOIkf2fOTMW6DoGp0mXWY2trGxppyox0ToAp9hEiorT2fRB3TXJek6pHo+UfoAte7ZzRt/f4Qzr/oMuqHqUwO0PraN1O7IgO+klHJ07hWZGYXI0qdPYJT7R76f/cCmfRG2NEbIdLwRnkaM4nfA9eLafpzIAnBD5BdhOPwxdF8Hvci+FzIMklst91TJBYsnce2Zs9E1pQ8OFbZv3z7m+xi2+Hz++efHYhwKxUGDlJJodAux2A683iqqKs+ltfVNYOioWSmh2RFYLpQaEt9ozfj1+23PFJND3sezml3pmTrvjkrv6noAPQI0V5ss0/lC9ka6AxAH7zY4qm4ny486mdZUDZPXteJPJekIhjCki+xKmWTrAqtEoDk2ncVegjviVLYn0v10diV8NwBNIJLgeNM7j3hMwnsTVL9mI+I2/o0awu0+AGLQz+e1bOIeg2DSYnpjG21BP20hP15/iMpp06meOQeA2uYGkv0PCALbSrH59RXMW3oKUw/zoCOnK2gm/vo+tAIM+3lNuWfpd4CoFRqhE6qHP4ADwOaGTiIJm54PJmyM0Bqc6BykHUQ6fpAmaX/ywR9ucqdMKuCHov+1nSsnW5+Gvdfb7MogXz1vvhKehxjTpk0b830U7KC0ZcsWtm7dymmnnYbf7x+9p1mF4gDiujabNn2HxsbHcdw4mualtHQpqVTL0NtKWBExWJvQsKWgzJAsK7Yoz1F2Mm8GWI6yv8/78nPpycmZLZIdskXZZqe/DpOQFhxOOp8mgNgGxS/q6HugmCj/1vQUb5cdyQvz38uJ694lkEgghUB3XVKGgQy7mJaNK3VKGiKYib4DFIC0QXr6BpqUtKYwk2DENITjItx+5tocn0RAutqR45AUUNMaoaY9SqQoiO+8i1hw6UdxXYfXHvkDa15+vm9V1IyDnohGSEQOAev4GNPxwq68S4+LHntbrqnige2zVkTKgmdSCPMQCDba0xbltsfWE0s5dIs4ocdwrXKkHQQ9Co6/S9O5g7rFSHq6QA4oPCERuMg+FSkGO5aizz9999I35ZMJpDLWB0zB6fOquenceZQGs5d8VBxarFu3jtraWlKpvhkZLrroooL6G7b4bG5u5iMf+QjPP/88Qgg2b97MzJkzufrqqyktLeX73/9+QQNRKA4UUro0NT1PXf3faWn5F47TDkiEMEE6NDQ8xuCF2NPsTGm8G9fxCUlQd2mwNF7uNLioJLvFdH8+q/UxYIxy/EXPx5AgOtP96x3gCoG/vYziB5OIqIMrbFyPZO++afz2PR9jT1U1s3fv5PxXXiCYiCOkS8pr4rUttBgYdu7ofyFBJPsFBnWNRYvQVYYpfzTSotnsPkiupCyawB+Jg9B4468Ps2fTeqxEsmsAWSKxHSdrNPbhRHR1I/HVTZCH8bfnWGWZloeRu3F5FxZefWV/0R6z+Nqf11DXlsi4RgXS8aX9PDULISRSJAF/l6LM7S8jtV43F+GC7HoA9GhJwt4OvFqCpng5cWc4ojyL303GTEIZktlovI1DChczsJdvXnASlyw+GkM/NIK9FLnZtm0bH/zgB1m9enUfP9Du69NxCouFGPY340tf+hKmaVJbW0sg0Buxdumll/LEE08UNAiF4kCyb98/2bT5NhobH8Nx2ui+BUhp4bgx8hGeAJ2OwJEQ0iWmAL8maXXE4MaFoeh/Yx5BV4ICAwjy3SgFeEDrhOK/aYRe0gi8o6EnDIxgKXrKROs0+OsJ59EZCqE7Lv845Ux++sHLWTd1JpamE4omMdtB2JD+tJl/mZ9i4KfpXSq7ptsHazNEoBTg2jaRX97L0zdcR9Obb+BrbcPu7Bj0EOzbml+t5PFI25PbaX1gAySHThkmpex7WscAe29s6EYHmNd3tLC1MdJzKHof5LxIqxSkjnQ9ILqtlYPfskW3O03me2Bh2Xo8mkXQjFPkiZLfgZf0li+T/Zal3+uAhUCSwtLa0ENbOOrINzlldqUSnuOEL3zhC8yYMYOGhgYCgQBr167lxRdf5LjjjmP58uUF9ztsy+dTTz3Fk08+yeTJk/ssnzNnDjt37ix4IArFgUBKSUPjk9h2M/mKzFyEdYkhoN0ReIUk5gomeZ10bs+8BzT46izulcNskNfsZh8/UOgNos3ZWXc7CZ5t4ArQOwW23obmFWjJBMIUJPDRVlzCpH31xL1+vMkEG2bO4dhN65i+rw4zHi1YJHdb0roTx+Rz1LNNzHcvT7sQSKa++iZJrxfdcSk3NdZOqiTuze5319ncWMDID32SeyNElu8e+H3oFzHbndCn13Vw7Mz/8dUNpE6owTO5aMz2MVJStkvcctE1ge32HqfKkEljZAJoURAOOB6yVm/oYfCrusTXQX28lPZkGFcOklopK91Xg5vxb3osGpBCssHXgj9Qx+xptXx80YVMLpqcszfFocUrr7zCc889R0VFBZqmoWkap5xyCrfddhvXX389b7/9dkH9Dlt8RqPRPhbPblpaWvB6lW+H4tBDILHt9HRqtqTw+TLFdDk+YPNOXCfuCiabLu8JOV37yEMKjZYVKJeiynzbLS5z7DObL2gfASpJx185gLdrnwbIGIhWMNoFWhSccokTADfkokXBH7GobG9j8+SpFHV2EvX5KO1oZ8G2TQQSsS7hmdfRygsp0nEawgKtf+TuEHS39toumkziAqUpycJdDbwxa+KAL4fQNELlFaMy7kONln9syXnKuqfnpMzw0RVpx+NBE8TnoL+g7b+fHuKSzhV7KfvwXMRBGvByxMRiTF3gNzVsV2I7Ep+pM708RDzSSsTtnh4f7GGqd/mU0G5mlWzHlTqbW2YTSE0AHFKWn+MmvMNr9ccipUQXDrYc6jGve51Dl2NK1/vufyUpBHMnFPG/VxxBe6qJsDfM3NK5Kv5jHOE4DkVF6Qe4iooK9u7dy7x585g2bRobN24suN9hi89TTz2V+++/n29/+9tA+oJ3XZc77riDM844o+CBKBQHAiEElVXn09D4fPZ0RHnSbck5Lugw1+vQ5AiabcG2JCzygz6S3+J+WiybNCv4tz5rZ0O078YBEoCH9P1Igt4E/s06WlTglkq0uACPAK8Hp8jG0Ku4bNMqHpw8mb2mh2M2rOGEde9Q3dLUz+LZfxD9JyYHP1ndgkZIMiMhurbsu62DIGmY+G0rd2CVlFimAY5DKGkRSFrEfJ6MBoKS6okcdcayQcc1HnFTDs62zqzrcgUHiQwBUwhC5Cdc3YiFtByE9+BM/j+jIsiFiyfyt3f3YmgCn6njN3VqW2NE6Zbn+TGtuJYLZz5JkRlBc00us8I4rdW4wOLG44kW/5kPzHqMV+uOpT1VjO3kipoX/V73v+5Ez7qAqfGfy+Yxr7wamDnMT684FFi4cCHvvvsuM2bM4MQTT+SOO+7A4/Hwi1/8gpkzCz/nw74i77jjDs466yzefPNNUqkUX/7yl1m7di0tLS28/PLLBQ9EoThQTKg6j22bHiSWemXAupyZRXIgJayM6WxO6sSlxBCCUt1iikf2CNCRGgWyzn4Pc5x9yKbzhupLAAEgIEhPwUlc3cHXJBApjdR0wCfRWyQUe4hd6MXVNYIvVFHzykauWbcGy3YwbBvDsZFCYGvgcXLdartvgiOziPa/lUsEjq4jRNpC3e3h1t9bTXclmisREhwN9C5R5S8Oo2kahtfH+z77RcomHn7TjW4se0CdHJAgtt/6Aqye3dv1f52rH73Ei/Ac3InNv7RsLhOKfbxd20bIZ6AL+PuqOjSRLsqQL0eWbSBkRtkdqWFmx0wmxyZSa3YCXma7QZ7Z+GFWhnZSF5tA0sk1S5ntOA7MitvNx0+cxjlHTsh/kIpDjm984xtEo+nqfd/61re44IILOPXUUykvLx9Rzfhhi8+FCxeyadMm7rnnHoqKiohEInzoQx/i2muvpaampuCBKBQHCiE0yksuJ7rvlRELw5gLm1MaQki8QmC78GynwfuKLapMMEVGaqSeAYxsn4MxbKk2yDR8zzBd0NpApATCNbAnuDi6i62Z2CEXx6PhCMAVGAmX1MQkqVKH8Kul2K9uhPYYHgkmEtdPTxEXbYDX5eiSzYaUNA08jo1pp3eZKy+lALyOgwN0+HzEDR0hBB6fnwkzZxOPdOAJHBoJzUcTqyVB80PrC9p2pMKz//IB/fk0is6YfNBPAQc8Bp86dWZPusJHVu7msdX1Xb8T+U9NaJqL7JpK91t+JJDSU+h4sZCUSC87OqcNMZp8njzTVBZ5+PR7Zx30x1cxMs4999ye17Nnz2bDhg20tLRQWlo6onNf0FxEOBzm61//esE7VSgONmqmHMPW7WE8wfaCthddotKnwVyvyztxjbCeXh5xNV6PGizwuyzwZYkEzowVGM4UeP9u+lk/83Ij6O/j2r0o4x6U6eYpXBDx9PS6DIDZYoKTwJkssIRJdI6NZ6uNb4vAdTWc8gCpU8D3agLPw03IeLonqQM6WNUu0g/mLoHeOfiH7c0Jmf5/b2BR3/XDwePYaF2nxNVJ5yfN0VZzJfXhAHtLi9I57hEkY1Fa9u6mfNIUQqXlw97/oYzVGKPpN2txmhJDNx4moyFozNlhzNJD54Gg+zMfP6OMBTVFrNrdRjTVnZQ3F73f/40tc5gV3sHEYD2+VBgnOg03WYyOg4FgL0NnIejtc/DjH/LofOP9R1ARUnEehyNlZWVs2LCBiy66iE2bNhXUR0HiM5FIsGrVKhoaGnDdvl/oQhOOKhQHkljibQxvdMDy4dwDhUhPUC0OOKxL6OxJCQwBpbrL7pTGAn8eP/45nQ4ZOhJ+OGPNvykScNAxcUCC1pwO5HEDkPIlIeUiHA3NsBGmS+Q8h+QujZjlw1sD0obqByVaxuysG3TR4hrmXg273MUtAoRE7+jOYzjwBtj344ueCVf6iNLhoWWcEjFIsoPukTSUhaGshHLdoC2ZwHYc/MVhjrvgg/hCoQJGcOgSeXkPTuvoC8/Rwmk+eMc2GJNLA/znOfP45UvbeW5tPalBv9i9jiKb22bw2PZlzCvbzFrHZKptMt31AxFWYvNCHhXaeklffxpg6OkfH4+uMaMixMdPmsYZCyZQWaSE5+FMMplk69atBW8/bPH5xBNPcMUVV9DU1DRgnRCi4ISjCsWBIplsYPuOu9FNe1T6K9Fhid/muU4PIIm6GhNMyTQzX8tDDoaItRmR32cOXMBFQ+9OzGIBOsgiQJPIlIPeIdAmgBcbiSBleIjO8AKSjqSX6odTaFZf9axHNKTosqTaYE+WmLW9gQyFIgHXkOnqSnZaUA5uEe1rOZV0138fuI0Aatoi7KmqJGHbeHWDKQsXc/qnryEULi14zIcqTtzuk52sO7go3wpEuRjM6tnf2p25fAB55Bs9WDluehnHTC1lZ3OUm/70Dm/tbM9x2WcGbgk2t81ic9ssuq+hGj3BV4DfEyOBQzo6cKjrK/24CSYnzCjlkuOnMqsiyKTSgBKcilFj2OLzuuuu45JLLuG///u/mTBBORorDm2kdFi95npi0U14Yw7JQIZz/QiU3PFBl6BusTcl8GuwyO8QGKW4h+4p/mwMW4BmsagK0pZNSN/adDQMI4htd4BXIpIQeEsjvsgFj4as0ECXaDi4gAcXAxvL8VDa2kHJtix+BW7XOx00S2DWgd6aO9adgcPMilMkiZ7iEHhNQ28X6ZRSXSl+cgmXPnsQ9FSIyTaW6tZOvLX1JKurKFq8mCM/83kCxeE8Rjb+EMVml4vGaOUISzNUqeahz2MaT82hbYnWNMGMyhAPf/Y9bNrXyfMbGnh+YwOrdrURtwfzz+l93dmlTT26ICUdXNcmfdsf7EfCRegJ5laW8aPLjqGq2Dc6H0ihyGDY4nPfvn3ccMMNSngqxgU7dv6c9rbXqWpMEPUbJIezcZb7X7cw1AUc5Xc4yt+3+WgZJgcToEO1GXBfzzKoPrcyoWEYJXg8VcRi23FmaiQdDUIuTjlILyBTPRPgEtBw8YgkxmoTT0u2nrsmzR3QIgJpgXB691qonEnMcTBaARfcgERLArboqfSSnV5RLLqCPAbzfihraafk9DOpvumrCP3gjqQeS1rr43jzEZ55uIz0Jx8BOtQ+g8eMj3uUEIJ51cXMqy7mI8dN4aO/fI319d2prfpPh/Q9Lt0ZNuZUlTIhEmdVtIEGGSFlT0o/+XU9cPX2YVNVvYnrTj6PCxfOpyTgQaEYC4YtPj/84Q+zfPlyZs2aNRbjUSj2G1JKGvY9jjfpIoUg5dH6NyjI+tm9Sbb7ck4BOkYBoyOfhtfRNBPXTRLwTyOVakQIHXeBgytdTKMY225HShPXtdA0E6SDIx0sRyOwyUs6GeiAkdEj+CwQ1ugcAP96DYRA6hLpSxeGMZoz99rfapZ9qr/7PA20sAlIJmlevZpwpJNAuGRUxn2oIS2XxJY28p6EHcJlZNTx6/iOOPhruw+X0qCH+dVFGeKzm+zXj9VVNenYaaWcY0xl67tlvNsZY7kTYa/eXbFIoGFTHIxxxiIv/3nmR1WFIsWQ0ey2PTI3tWGLz3vuuYdLLrmEf/3rXxx11FGYZt9Etddff/2IBqRQ7D8kEhfdkSQ9OrrjYkltVIWgK2FNQmdDXEMTsNDvML+r5CYw+k6ao4yuh9A0HSktbCdCMDibUHAuCJ14fCegIYQBUtLa9jJS2uh6CCFTdLh+0sH9uQI/Rv+zi7hAaOlYeGJkt05n7HfwSfjca+X69Sz/we0svuwKJs0/ovABH6J0vrKXoCuHb83fXyLUckd3quEgQQjBl8+bz6Pv7B3WIbz8pKlMKg7hL/IwqS7KB0IGJXM97Ol8jSKzk2mVE6mouBBNOziT8R/KGIEzMAKj6wJiiMio9peNH/7wh2Pa/7C/aQ8++CBPPfUUPp+P5cuX91HGQogxE5+33HILt956a59l8+bNY8OGDTm3efjhh/nmN7/Jjh07mDNnDt/97nc5//zzx2R8ikMPITQqK8+ltn0dIdtGk1pWa+dIXNrWJzT+1WmgCYkLNHWaeIVkhrer0+6cn4PcJDP3P5RWHW0t6/PVEAzOIhxegscsJxiaS1FoPgCOkyQe38H2HT8hmdiL11tNIrEX6Sbxe6uoMHW0QGy/agBB1/GSo73PfgFTUuLdsIWVT/yNymnT8fgHlhwer0jbJfb2PnTyOMa5nHdF9+rspTJHjCVxIimM4vEXIFMT9vOJk6dx34qdA2z4/d/PqQwCHUwqCWCaOkeeMrFPX/P40NgPWHFIcuWVV45p/8MWn1//+te59dZb+cpXvoKm9a8DMrYceeSRPPPMMz3vDSP38FesWMFll13GbbfdxgUXXMADDzzAxRdfzMqVK1m4cOH+GK7iEGD6tM/Q1PQvEvYbGI6LJnuTlyBE9qnzYdwra1MaAc1lbld+z3UJnb2Wzgxv3ymLXDP8/fclM0TV6AhNDbLm/9OYMOFiZs74PF5vJbo+UFzpupeU1UIyWUcgOJug0IjFtuPaCar2nkR0y7u4O2t7xuvQt1bK2CC6/DZ7feAGO0z5uyP2ldBSCDyhEG2xGIlI5LASn27SwYpGSfnr0KSJkShDDKgJlQWZ5fVgD12Drx6S+IYWik4Yn4VPbjw37Y/58pYm6toTNHUm0DVBwnKRpKfn33dkNdefOZNXlj8zZH8Kxf5m2OIzlUpx6aWX7nfhCWmxWV1dnVfbu+++m/e9733cdNNNAHz729/m6aef5p577uFnP/vZWA5TcQih6z6OWngHr73+b6Tc9vQ8+UhUXb87ZliXzPS6lBtpgVeqyyHy9mV0NVS1oULuzpK01tTB662mtHQp0ehOksl6HDuCK5MYRjHTpv0HU6d8Yshk35rmSfuAukl03Y8QJmzfR+y7DxJ34Nnjz2DnhImUt7dy9hsrqGhvHeaAC2XwqfV8DttA/9DeA+4KQVORn0C4BH9x8UgGesiRoo091fcjg/sADX/rPMp2nI+QWe4JQ3zXuwOLBlg/R+HJKrmpbdyKz6DX4Pqz5vDxpdPRgCfW1vP0un34TI3T51Zxypxyqov9OM7opI9TKEabYYvPK6+8kj/84Q987WtfG4vxDMrmzZuZOHEiPp+PpUuXcttttzF16tSsbV955RVuuOGGPsvOPfdcHn300UH3kUwmSSZ7Y547OjoAsCwLyxpOkt7Ro3u/B2r/4x3TnMzRi3/PWysvTSedzLgPZrd8evv8OxhH+SAhBftSadlSZUoCWn7W09GejTR3CfwrNLQYONUmvouOxnU8IA0m1nyU0tKTAAgE5qDrnrwcyn3e+YSCx9Le8XZauCcc9H+2YTuSR5ZdyFvzjqSmuYG6QIBHzzqPy575B75kfjkFMuXHYIfC9Xr7/Dta9AYcDRRCEb8XbepUFr/vQtD0w+ra3PruA6TCe/HEy5HCJVKxnkDj8XjiVQA4uuzz71AIke389pYQKBRb2OP+vBR50kfo35bU8G9L+gptx7EP+3vH4fq5DwWEHKbDzfXXX8/999/P4sWLWbRo0YCAox/84AejOsBuHn/8cSKRCPPmzaOuro5bb72VPXv2sGbNGoqKiga093g8/OY3v+Gyyy7rWfaTn/yEW2+9lX379uXcTzbfUoAHHniAQODwmVpTKBQKheJQJhaLcfnll9Pe3k7xfp6h6OjoIBwO8/dfvEFwlAOOorEIF37m+APyuUaLYVs+V69ezZIlSwBYs2ZNn3WjUY83F+edd17P60WLFnHiiScybdo0/vjHP3L11VeP2n6++tWv9rGYdnR0MGXKFM4555wDdpIty+Lpp59m2bJlA8S+YvTZsfNedu68u+f9QL9LL/HYLQQCtyDEQCteH6f/HJdErke+/u272/VJxQfQnSs6T+8XzzZB6J869gQJwqBYm48uPYS/ejWhioWY5sAHuHxxUyl2X/8F4qtWQSoFQMTv57fnfZBlr72EkA4RX5CiRIzK1mZC8XjB+8q6f6+XHV//GtP/5ztoGVbVkQRWD+oLKqD2+KOZf83nmbpwMXbXZzY84zsnotOZoum362nWn6Cj+jVKa8/GE6vB0WN44lXoTjDdTpOsOa6dhW+G0Z2h7wkxLY5PensKAbi4aGhD5/IcjCKDCZ9ZjF40vs/JUBzu947umUtF4XzrW9/ixhtvHGB8i8fj3Hnnnfz3f/93Qf0OW3w+//zzBe1otCkpKWHu3Lls2bIl6/rq6uoBFs59+/YN6TPq9XrxZpm+M03zgF+8B8MYDgfmzP4PSksW8+6qjwFyQLL2boEoRHKA+Mw2STvc+vD932cGGfVEx7eCLCW/anmA9AiE1NE7JCIoMeJJ/NWTqKxZihjBd0q6Lrtu+jKpl1/uCSaSQFEyybIXnmFicyO2rhP0+dFdl+K2tlGNQhekdTiAlkyij5L47I8D2LqG4bhp94mkzaQ581j/wrNsf+ctAKYvPoaFZyxDHyQQ8lDG7YxDa4oS+zik0Y43EcbV2zEcP2YqMEAs6q4YWnwKCLq+nm1dZFdVLTEi8akbJvHleyk+dzp6UP1mHq73jsPxM482t956K5/97GcHiM9YLMatt95asPjc/1FDo0QkEmHr1q3U1GR3KF+6dCnPPvtsn2VPP/00S5cu3R/DUxziBIOTKC5egs83HUiLwO6/HrpL+nSRS+SM1Hezzz5d0BrAuxm0aP592JMkyYUuelRgNnjRA0FKPvxvIxKeAI333EN0+XIg/fkzg5jn7t1FKJmgJBalpqWJCW0tY5JyKVuf/U/TSHCBfUUBWoI+Ij4Plq5RLgW7169l3UvLcR0b17FZ/9Jytr39xgj3dvCieXWcVIpYPIlvy6l4IpPwdc7AF5maX7R7N13XTfdMmZaxrYbo875QnI4kqbooya1tI+5LoTicyVVt7N1336WsrPBCDnk9on/oQx/ivvvuo7i4mA99aPC8YH/5y18KHsxg3HjjjVx44YVMmzaNvXv3cvPNN6Preo9P5xVXXMGkSZO47bbbAPjCF77A6aefzve//33e//7389BDD/Hmm2/yi1/8YkzGpxhfaLofj1mCaZbg802ire3l3I3zMbGNNG+MBBzQ66H47zpuMaSOcDL6FICGpnlx3QQD0idpED3DJTUTSs25TDz1VrwzZo5gQGC3ttLxj3+A6w5pXcz+0Yc+KLlaDLVsNGO1BDChM4ata0R8Jimp07lxA9F3VoKUhErLAUjGYrTs3gXHj78HXNdx2PDGv9jT/A4xu524HWFR2emUeNJBRnmmD+hDZiaBEU2xZyMlcVoSOFEVcKJQFEJ3hSMhBHPnzu0jQB3HIRKJ8NnPfrbg/vMSn+FwuGfH4XC44J2NhN27d3PZZZfR3NxMZWUlp5xyCq+++iqVlZUA1NbW9kn/dPLJJ/PAAw/wjW98g6997WvMmTOHRx99VOX4VOSFxyynsup91Nc/iusm8XgmkUrVk56AHTnZ6q4POj2vkU6cnkxbMa2J4JakV5lmJeVlpxJP1OK6SZLJBlw3BejYdhtCeDEMH1K6OLOSlM39EN6JIxOeAHZDY29qqrFIFM7w9PrgI8gjseQgaIDhukgEcVPHm0iiNbXgug6ObQEC13HGZdol6br860f34ttuUOOfgS5MWpP1dKSaCXsq0lbPAh+uutNZSWTP627fz5HipmzcmEo1pFAUwg9/+EOklHzyk5/k1ltv7aP9PB4P06dPH9FMcl7i89e//nXW1/uThx56aND1y7um/jK55JJLuOSSS8ZoRIrxjBCCmuoPEQzMIpnah8dTgcesZvOW79DY+K8c22TXYLluo8OOz9PBnm0ijjkGmazDIx0CgaksmP8d/P5JtLS8TCJZh6GHKSqah6b52bjpVlpbV6TFqHTx+6cQDM4hHq/F55uMEIVPcRplpZjTp2M1NkKGr2X+OiQzrGd4MlMWLE+Gr5J6kvp3FSAwXRfDdpg6aSoRq4ym2p0AVE2fyexxaPXcvW4N3p0aXuHDkQ4ho5RQcB5pKZ7x/en/3c/zUPcRmz2Fv7pSLY0giFWYOppv7MsaKBTjke4KRzNmzODkk08edf/Zgjzjm5qa2LFjB0IIpk+fTnl5+agOSqE4GBBCEA4f3WfZoqP+l127H+HtlWAY5ThOA70hLwMF6MjsN13mzp67uo+5c79BVeXZdHauQQid4uLFmGb6ibS8/LQBPRyx4Lts3/4jItFNmGYYTfOzfdsPQOiUlp7E1CmfRNMK+1ExKispv/JKZDJJ/J13cLty6iUNEynA3/VeArYQCCmz/OCIPKsMZc8Emd/xLVAV9dsiHUhlYbgSXdPwTJ7MKccdR+PmDQh/gKoZM8dlpaPOxhb8ooiAXoypp6PHta549Kz0e56QwBtY+NHwA0UIqrJYN7Nl/cvlb5YXAszK8Xc+FIqxpqOjoye7z5IlS4jH48RzZCkpNAvQsMTn2rVr+dznPsfLL/f1fzv99NP5yU9+wvz58wsahEJxqCCERk31RbzNY5xw/COYpoft23/Ert2/pVuEimxqKsf9UwgDwyimpOQEWltXYNsxAPz+6Uyd+knKy06hsfFpJJKK8lMJBmcD4PWekdd4TbOYuXO/AUBt7b3sa3gMv38yrmvR1PQ8oeBcKiry6ysboVNPwTd/Hu2PPcbe++9FNrXgcRwSmokNWB4veyomEA34mb2rFuwUhlOI60L+hTDzY6AAHUriCMBjO+iApQlWPPIH/A8/wGxp4K2sQn7iSpg1axTHeOCRUhLdq1NqVODR9LQYJO0HJvM8H+9g8zss/IAPQQTJR/FwLGMbiaxX+fHOLhnTfSgU45HS0lLq6uqoqqqipKQk6wNg94OhU9Dv+TDEZ319PaeffjqVlZX84Ac/YP78+UgpWbduHf/3f//Haaedxpo1a6iqqipoIArFoYZphjFNk7lzv4Hj2uzd+zt6cyH1ttNECK+vEstq7Sp3l0JKGyE0vN6JzJv731RUnEEy2UA8vhuPpxS/f3rPBT916idGZbzxxG50PYCuB9F1SKUaSaWaRtyvXlHBC0tDrItUc8QLFjU7YuiWJGXoPH/cUmbU7aamsQEJrJs2kzm7d+Lvyo0JvTJQ9jeZDZPhb5XnE0LXGj1jC6kJ3Pp97NYk/uIyJm/dQvMvf0n1N7+JNo6KUezd2Iq+VqILPT3JniE6BWLwYLuuZe/iIIFyKYja7bQj2e5YHO2ZiF6g1T0fAgsrEdrY5Z5WKMYrzz33XE8k+1il18xbfN51111MmzaNl19+GZ/P17P8fe97H5/73Oc45ZRTuOuuu3qizRWKw4mJNRfT1PQ4qVQ70B1hq+H3TcUwQ3g8E4hE1gJxbFsCJoZRSvWEC3umy73eKrzesXt48/un0tmxCtvuxHUthNDxeCtH3O+m1k08sfNJfAsm4PoqWPtmLdX72pi9N8VLi4/D0TTK21oxXIeyjnZaQ8XoHW14Msp35mdFy/L0PWSL9NLs/ecWJkNFYruahmlb6EVBYqaBObECq6EBu7ERz7RpOfs91Kh7vY6WqEPQo2EgMboEaD6pBSQSKSEAWELSYbXht2N8zjuR+boBCFzpoo3A7zgnxQYeNeWuUBTE6aefnvX1aJK3+Hz66af5yle+0kd4duP3+7npppu44447lPhUHJYUFy9mQtWFNDY9g+taSGnh801i2tRPU1f/F6S08Pun097+NkJAMDgPn6+G9va36Oh4l3D4mDEfY031xSQT9USiGxBCp7JiGWWlp4y43/ZkOwkrwcTgRIzEPoTuYeK+BGUdcebt3Mbs3bXEvD6ElJR3tBP3eGkLFlHa0YYpM62dYxMxn6/wHGiB7b997zZNAZvGsAFJC59u4rS1ofn8aOMs2n3vrgjSSXsfCwQJLUWjp4l2PcqEVBlVTlkWcd5rGRUITsVko3TZisNXvJOZJjwMLOMxPIbyBfXPLsMzfXydC4XiQLBq1aqsy4UQ+Hw+pk6dmrUwz1DkLT63bdvGMcfkvkEed9xxbNu2bdgDUCjGA0IIZs26gWBoLtHoZryeSiZMuBCfrwZNM9lb9zCum8I0S/H5JhMKzUZKiWU1Ydn7pwScaZYwa9Z/kkzuQwgdr7d6VEri1gRrKPYWsyeyh6qAxsR9LVS3RDAlnP/y86Q8XjZPmQ7A7F3bCUWjBK0UxoAAk8HmcPfP9Gm+fowpQ/LSEUkuWh2muqkNUVxMyYf/DaO0dIxHuP9wXYkjBEV6OsFYOwn2+XYTlF4sYSEEWNiYwkDI3vPT/wjWoHENHl5JtDEtOAFDOiAG1jDK57uYGZTU/TrbdiUXzkLzqEh3hWKkHH300YNem6Zpcumll/Lzn/88q3EyF3mLz87OzkGjmoqKiohEInnvWKEYb+h6gEkTPzJgeWXlMoqLF2FZbeyte4SO9jexrFZsuxPDKMbvm7rfxqhpJn7/5FHtc0rxFC6ffzl/2vwnGrRtLGltw9elEaraW5FAa1ExUZ8f03bwODZSaLjAQHkwNtbP0cbUTIwjp3DqB76AtzOBUVWFZ+r+O4/7A9d2cDuaiZsphB6g1WxkedFbvK/jJCZaVZTYxV3FijKEp3SR0h3QV7nQOdEswQQ0TUdKF00ML9lKtmj47uWZN0dzThjdPz5LnCoU+5tHHnmE//qv/+Kmm27ihBNOAOD111/n+9//PjfffDO2bfOVr3yFb3zjG3zve9/Lu99hXaGdnZ05lW1HR0fOHweF4nDH652A1zuB6dM+TW2tRjS2BY9ZxsSJHyEYHHnC9wPNyZNO5uiqo9nyxH+h7d44oLxlTVMDbcVhYn4f9eWVTGzahzeVRHdHlrQ/c5o8X6vlSHEF7JwfprKkmpK5R46K9fhgpH7FRiZNfoHSPe/FJz1MtydQ6gZ4M7iWs9tP6iqF2e/xQQhsmT2xe4V3ck+G1m7hORbHzlMdGvU+FYrDlf/5n//h7rvv5txzz+1ZdtRRRzF58mS++c1v8vrrrxMMBvnP//zPsRGfUkrmzp076Prx+iOsUIwWHk85s2bdhONE0DRfwTk2D0YCZoCSiCRbyXl/PM6f37uM9TPnMrd2B1c+9mcM1xlR1dFc/pmFV8cZTLz29rllosaWDyzminn/Pq5/8zpb3qCibSEe6QVcvFLn3PaTaTTa0KSGhYMPvc9hE4iM/J8ZZ1emheaol9HMgtOWHLqRQqHIi9WrVzMtSxDltGnTWL16NZCemq+rqxtWv3mLz7EKt1coDjeEEBhG0YEexpgQOukkos88O2B50Eryvlde4M0jFlPT1IDHsgpI896N6FqSYxq2nwAVWdvnCnQaelTTmjVOnPVJaiqOHHrYhzCmT0NPhgGB1GyQkkq7lCI7iIaGB0962l1kTrtLnB7LZ4E1qAbUnaU3t2ges2t6saeg/SoUhwO33347X/3qV/nCF77AD3/4wyHbz58/n9tvv51f/OIXeDzpa8uyLG6//fae3O579uxhwoQJwxpH3uJzrMLtFQrF+MG/+GhESRjZ1t6zTHZZwCo62vEnYszYW4vuODh0R1Fnkk/Ue257qdRBZJnJzz0lPzzhCeBL2IT2tEHuiaBxQenchXS+krZmCFeA0BAIfNLXL9NS38AfXZhAqm9ng8WSZfaVTVzKrgeKHFbm/ss9U8fng51CMVLeeOMNfv7zn7No0aK8t/nxj3/MRRddxOTJk3u2W716NY7j8I9//ANIB6Rfc801wxqL8spWKBSjhu/IIwgtPZnOxx8HMkWfJJBMsnDrRqK+AK6mIaTsW4u0q11+ZLGECtLF1zP2O/g0b2HpnVIaCGP8/3SWTlpERLYicRHo6Yh2mfuIdrteGZmuJP0bjyCjVl6uXQJ8c8ZPxgGFYrSIRCJ89KMf5f/+7//4f//v/+W93cknn8z27dv5/e9/z6ZNmwC45JJLuPzyyykqSj/offzjHx/2eMb/L6hCodhvCE2j5rbv0PnUU9Cv7JpAcuUTf2V79WRSQsPv2v2rew93b33fSYGUaXXTa2iTPfkmB8/3mf++hQv4/cMc66GH5jconbMXd+MKHMLEnDNp120Crg8TI+ch6xGI/Q+tyNGuz7IszyNk5GAdQoBqxR40FemuOEzo6Oibps/r9ebMuXnttdfy/ve/n7PPPntY4hPS2Yw++9nPFjzObKirVKFQjCq6z0fZdZ+n5Yd309/U5bUs5u/aDvRL0TNKkeqi5/8jE7KDYQDtTz1F6LjjhrmPQwvn+XsI1n4fzDig4Xqe4bulc/ho44eYaFemKxMNdpglfdf3a5tNSOZy6cz37BSfPW1cB4EpFJlMmTKlz/ubb76ZW265ZUC7hx56iJUrV/LGG2/k1e/f/vY3zjvvPEzT5G9/+9ugbS+66KK8x5uJEp8KhWLUqbr6amKvvELi9Te6BIVECtmTjHzg5O3wLZDZSAEe0rbPhG5gShfTdbPuc7i15DNba8MQq4ckiU7Ey3eC04kjq3BJERI7WRatYrt3DxPtrrKso1yYKp+golzWT2NGEcHjhhf0oFAcyuzatatP/vVsVs9du3bxhS98gaeffjrvJPAXX3wx9fX1VFVVcfHFF+dsJ4TAcQpLlzcs8bljxw6efvppUqkUp59+OgsXLixopwqFYnwjTJOp99xDxxNPEtu5hpb6l4jGdlL83NimlTdJ6yEXSPj9NPv8VDU34ZG9P5DZy0H2L1aeZUo443XJBwp72j9kWPUQwo4g0UiHhXkwpcZx8Ul0WPNz+tJKKUec73koAZrLsumtCSmrp+Kwori4eNDiPwBvvfUWDQ0NfSpUOo7Diy++yD333EMymUTX+/4uu66b9fVoMqxUSxdccAHxeDy9oWFw77338rGPfWxMBqZQKA5t9KIiSi/5MKV8mBrHYeNxxwPxUeo9u8jQSEtHFyiKRiiORtBkb9V2yDXFnytt00ApWvz+9+M/cnynWWLfelzNj3CSCCIYWEgZQNqLCOJHIrFx0r6fXTjSQSDJVrcqG4MJxXzTKvVuAEb5+PfDVSiGy1lnndWTj7Obq666ivnz5/Nf//VfA4Tn/kLLt+E3v/lNli1bxp49e2hububTn/40X/7yl8dybAqFYpyg6TrBU94zRKvRs4HqgC4lmpQ5J8iHSnjuZIwoYWhETR3PUUcx+bu3j9o4D1oCpdjFx5KSswADh1La7Y/iyEVdieQ1jCwJ5hH53VIGE56y67+u2p15bScCBoFFlXntW6E4nCgqKmLhwoV9/oLBIOXl5UPOXruuy7333ssFF1zAwoULOeqoo7jooou4//77RzzDkbflc82aNaxYsYKamhoA7rzzTn7+85/T3NxMeXn5iAahUCjGP5PuvJNNJ54EybGtQNNtqeyefi90IlYDUgJsTQMh8LiS8ks/clikWeKoS6A2QkvjVUgngMQE9D7Wim7/XQCJC0g0dJzBHiLE0KI/2zbpf3Jv551Tgl6kkssrFKOFlJKLLrqIxx57jMWLF3PUUUchpWT9+vV84hOf4C9/+QuPPvpowf3n/Sva0dFBRUVFz/tAIIDf76e9vV2JT4VCMSjSsmj9/e/xzplDct06yPAjGl7MyuDCJR0MlK2/bEty7bU3Zt4rJVqVTftZkvpIkNAb2zGrduOZXox36uC+Voc0VfPRz74Gdm5FOt23iRx5kEhbSBxpY+qDWD4zTp2UfY++NkJfTWmNjV+aQjEeWb58+ZBt7rvvPl588UWeffZZzjjjjD7rnnvuOS6++GLuv/9+rrjiioLGMKxH+CeffJJwONzz3nVdnn32WdasWdOzrNCwe4VCMX6JvvY60eUv4Jk0Ca28nPjrr0O81/+z8KBp2eVnmH7dv7Sm1rU8f/rP84LeJkgYGnKRxfb6FRStOovktjY4YyreaeNXgBpTpiFC+yAxtKVa14yBqZX60S3ppUzbSdP13rt8dKUcmQB1QboSoamAI4ViNHjwwQf52te+NkB4Apx55pl85Stf4fe///3+EZ9XXnnlgGX/8R//0fN6JGH3CoVi/OK0tiBdFz0cRg+HEUuWkNiyBbehoadN7kTwuckmWvtXNxqJZ5LUBK6EmOXBjQviJbtoTO2kKj6D5Na2cS0+AbQiD3Zjgn3xHTQn6zA0gxr/LIrMsgFtdaGT6zGiv6+m5cKauE2RLqg0BDqCsFm4cHQdRwlPhWIUWbVqFXfccUfO9eeddx4/+tGPCu4/74Aj13WH/FPCU6FQZMOsrkYYBnZjI05HBzIWo+TfL4V+/pPd1Yiy078K/ECp2jenuSwgef3A9vEqcIvA0CVIg117Ng6zz0MX/+JK9sa3sqH9Nerj29kV3cia1peI2u1ZAoLyE3+2BE2ATwhiEvbZkr222xPAkO38D+Un6ilVke4KxWjS0tLChAm58+ZOmDCB1tbWgvvPW3wOheu6PUXmFQqFIhP/scdSfOGFALjRKP5jj6H8sssIve/cQbYS/f4yyS4qC7N9DezfBSwBnZMFzReDvySFYTskttXgRGw0v4l3dklBezuUCB1bTX18GxJJsVlOyCilw2qmLraV1kR9WjAOVW69n9VTE+kbT7kpmOXRmO7Vme3tm+4l02qdTp01+EOEMSE4zE+mUCgGw3EcjEGCK3Vdx7btgvsfcdjmli1buPfee7nvvvtobGzEsqyRdqlQKMYZQtMo/fC/UXTWmchUCqO8HGEYBJeeTOQf/zzQw+ui176WTtUEqQaN6KoQTkjHbtFxYxoLzltC8ZlT8UwpOpCD3S9opo5nWhi5uRmJxHIS6Ryf0qYpuRe/UYzPCPSZbe8Wm0KI7PXbAUdCSBP4NIGRRbxaSHbgMAUNT48QlVktoHqVn+Dx1aP1kRUKBemgwE984hM5a8UnR5i1pCDLZzwe5/777+e0005j3rx5rFixgv/+7/9m9+7dIxqMQqEY3xilpZgTJvSkKyo+Z1nWdiJnCNIQUS05euv7OrtFNZsBLxR3mLnOJLy5hOJdOvN8QRZ+/LzDQnh2M/+CM9DDHlpT9UScNgJGMYbwEHM6caU94JR0T58PVu3IQaIJ0EU/V4mu9i6SMAKzK5zMAbLZWLTqAFXXLEYzR20ST6FQkI7xqaqqIhwOZ/2rqqoqONgIhmn5fOONN/jlL3/JQw89xKxZs/joRz/KihUr+MlPfsIRRxxR8CAUCsXhiVFUhD51Kk5t7YB1IiOOPc3Ad/lPs4us7TNzgg7cRIDHQyhlE9rXAq5L2YeWIrTDS+hUzSlnzoWT2fDMCuxmL17Hj8SlSC/D1LJbRTLpX4tdEwJTgJOjAICUElMIyvrZOQccdQ/UXLcEMVh6J4VCURC//vWvx7T/vK/aRYsWcckll1BeXs6KFStYuXIl//mf/6lq6R4KOBa8+jPce07Avfto3Oe/A3aSVMIm2p7EcVSOPMWBY8KXvoRWkT1XcK8wzF3+cnB6c3Ym9IG/VU7X3wA0jbJrr6X4feeih0LooRDFF11E+ac/PeQexxOx2Ha2bvseVvAxJr93G5Unb6eoAqp8U5gUnI2h5ZfYXfb7z9AE3v6iUfR92W37zlWws+LTi5XwVCgOUfK2fG7cuJFLL72UM844Q1k5DzX+9gXku7+nUdPZ4PURf+1XBFa+QSR4K47lUlzhZ8k5UylWtZEVB4DiZWcjE3HaH3uc2L/+NYo9i4z/g20IbLfX2qbJ3ipIA7YsK6Xk/PPwTJ+O09KC8HjQi8d3WqVstLSsIBbbjp2IoifC6IFOgpPb8e8KYeq+oasV5fCekMje5f29IjJeOmQPOQtfNhfflMPvfCgU44W8Hxu3bdvGvHnz+NznPsfkyZO58cYbefvtt5Xl82CnaTPy3d9TaxjcVRbml+EgD5Rq/NHcxbbIo5g+g6Zdnax6dveIa7UqFIUgDIOSD36Qyf/7I/SJEwvvZ8B/fQVLMOmiS3Ay/Ax1wMzamYbd1ITQNIyKisNSeAK4ro0bsfE2TsQbm4BPC6LrGrqhITULqaeQwgGR47djKN+IQdZpCAzSNynR9R7A994aihbnTgGjUCgOfvIWn5MmTeLrX/86W7Zs4be//S319fW85z3vwbZt7rvvPjZt2jSW41QUyvZXAHg66Ge3aTLDspiasmjxdLJdewdPMIq/2ENHcxxblahTHEB0n4/qr34VLUu53mHXA8/WP2kR43HByNBK2XrWpKTtjw8jD/PsHf7OWejRECl/M6lQHaYM4euYidAkrpHANiPAYKVKyW75lJKWZD1xu5OEHcv54CsQaBm5X/2nVlN+zqwRfy6FQnFgKchh5swzz+R3v/sddXV13HPPPTz33HPMnz+fRYsWjfb4FCPl+f+HBCZaNudEosywLEwp0XCZ6tQSbWkkEbHwhUwMFTGqOMAULzubGQ/8nkn/+yOMqVP7rBuOAM2VYD5zCrfbojawkUBaFk57O24sNozRjz8CiTlUtVxCID4LT7yK4r0n4uucDAg024uRKirowSDuRFhBip/YLfxORtlrRweI1P5nTyv1UnbebFXJSKEYB4woz2c4HOaaa67hmmuu4Z133uHee+8drXEpRgMpIbYPAZyUSNCk6zgIYgGNXVJyrNVI497t+GbVsOiMycqFQnFQ4Jk2Dc+0afgXLWLvN75Jct06nM5OSKWGLMHZf13/Upt54fWC62JUV6MVHT4plbKhF3kIJo8g6Cwg2rIdOnVsz1qwytGkh3SV9uHJT1e6PO1EeMoTxnItEjKFLR2ulF78ossJov90vQ7+I8uV8FQoxgmjZuo6+uijR1TnUzEG7Hm752XYlRgSNCQnJRJc0h7h+EQMzU6wOHk3FZUHcJwKRRbMCROo+frXKPvkVZRfdRUTbr0FvN5RmYLPiqYhgkE0jwdzyhQq/uMzh11apf54Z4Xxzy9FCI1gaAamrcOGLdhGO64eR+opXC3BYHkHJBLXzXDpkZJ3NB0hXSYDVXaETdi0yxxuPxr4FpQTPmf6aH40hUJxAMnb8nnmmWcO2UYIwbPPPjuiASlGkTWP9LzUgBmW3WNQkEDUCVNu7KKo9SWch69Av/RBMH0HaLAKxUA806dTcfXVPe8Ta9bS/tdHEa4LtjPsdPP9EUVF6MXFBE88AeH14bS14Zk6hdKPfQyzUj2RCV0jdOpk/AsrkI6k/rZHoakec7KLHYgjjRR6sojB7BgC0SfqXRM6Xs2DFJCy46TcJG1GkD0CqulqJ7oeMQzwzimj5P0z0TzZEi4pFAc3c7f8iaIcVYIKpXOE1YUOBvIWn8uXL2fatGm8//3vxzSzxocqDjZe/XHf96I3KFUAAb2DY0MP49NjOFueI/7oJ/Cf+AWYclI6wbZCcZBRed3nsWprSe3ciXQdnLZ2hN77Mza8xPMgEwlESQmll12G/6ijRn284wGhCYyuNGyeCQESug51r2BWngh6GGH6QPQ6OGTto9/yM0SQB2SUXZqB8E5gtuZnhuZJb9+lVdEg9J5JBI+txihVD8UKxXgib/H53e9+l1//+tc8/PDDfPSjH+WTn/wkCxcuHMuxKUZCyw6yps/uY4GQ+LR0QIUOiLWPE9v6Jr6zvoF2/Cf2zzgVimFgVlUx8c47iL70Mqk9u4m+9DKOtyvRuceDSCaG16GU+BYuxKd+y/IidObpJNZtILFjA1pjHXpRBZ6pC5G+alwZzpLgKjsnCAO/CLFFC+AVghMwKM+wnmrFJt5ZJYTPnaH8PBWKcUjeDk033XQT69at49FHH6Wzs5P3vOc9nHDCCfzsZz+jo6NjLMeoKIR9a/q+lxl/ORCAlmij8dkf4SSjYzg4haJwzKoqSj70Qaquu46KT38KI1wCQPDYY/EuHGi9HMxH1JhYQ9nHP6aC7fIkcPzxVH7x8wTfcy7mtCMxZ5wA/mlAKULTESK/W4pAsAiDD+HhAjxUdd+KgjqeqUV4p4cpOmWyEp4KxThl2NHuS5cuZenSpdx99908/PDD/PjHP+bGG29k7969FB+miZgPSvS+Ze9SIm0H9QB6hgCVEhyRtlZouJhYiEQbdVvXMPmIE/fniBWKYVN09tkYCxfCa69Rc/vtGF4P2z74IZwdO4bc1pwzhwlfvonAMceM/UDHCUIIAscswbdwEYkNLTiRFEbYhwiZ7Pvpuwgh8/J7kMh09s4u0S8qvFT9x2JIOMiEg17qRQ/lV7pToVAcehScamnlypW88MILrF+/noULFyo/0ION1/4PSBs6WzSNuBC06BqVjkvYcfBnCFBNSpLCQEPDg02YNnY27QaU+FQc/BhdSen1YADDNJn9t7/S8fTTtPzmfpJr1oDbL4ra76fm298mfN77ELoKYikEzaMTWNQbkCVdiX9JBbG3G3uXIZGSPlblnrKaou/yyisXYhZ54fDObKVQHDYMS3zu3buX++67j/vuu4+Ojg4+9rGP8dprr+2XWu+33XYbf/nLX9iwYQN+v5+TTz6Z7373u8ybNy/nNvfddx9XXXVVn2Ver5dEYph+YYcaHXWwLZ11YKeuEdc0NAlB18WWErurWbf+1ABT2ljCxELHlA41z12He+SJaOWTD8QnUCgKpj7VxLtHaHD7lczd5VK0cjMiFMIoL0cPFeFfcrSKZB9lhCao/Ld5tAZM2lbVAyADOnG/gSchMVMuSBCpgZZR71EVeCoDB2DUCoXiQJG3+Dz//PN5/vnnOeecc7jzzjt5//vfj2GMKEf9sHjhhRe49tprOf7447Ftm6997Wucc845rFu3jmAwmHO74uJiNm7c2PP+sPDtat0JMh1s5AqBBkT0tE9VuXSIaxohx+1zD9CQCFw00stDMorzv8cir/oH+rTj9/tHUCgKobajlv99+3+pj6YFUHWwmuuuvo6pxVOH2FIxUoShUXbhbAKn1rD6hWeY9MXj8IbSUfJuygHbxYqmaH14E3ZTHD1o4pkWJnymOjcKxeFG3urxiSeeoKamhtraWm699VZuvfXWrO1Wrlw5aoPrv/9M7rvvPqqqqnjrrbc47bTTcm4nhKC6unpMxnTQ4iumO6w94EoimiCOwETiCjCkHOCWJQADBy0jIkkngf3HT6LftHo/Dl6hKJyX9rzE3sheZpfOBmBL2xZe3vOyEp/7ET2Y9tXUvL23F82jg0fHGzCpvmYJTmcKN+mgF3tU/k6F4jAkb/F58803j+U4hk17ezsAZWVlg7aLRCJMmzYN13U55phj+M53vsORRx6Zs30ymSSZkcC1O5LfsiwsyxqFkQ+f7v3mvf+SWeCrhFQHZUBK6EyQAgl4cfHjYumABBeod8t5V05nLnuZpdXhdCtTAcQbsJZ/H06+TuX+7GLY50MxpmSej6SVxCM8GDL90+aVXpJ2Up2r/Uhe14dPgM/AwcWxclQ2UoyYw/236nD93IcCQko50iIh+x3Xdbnoootoa2vjpZdeytnulVdeYfPmzSxatIj29na+973v8eKLL7J27VomT87uy3jLLbdkteo+8MADBALKL0mhUCgUikOBWCzG5ZdfTnt7+37PxtPR0UE4HGbjl/9rTCoczbvjuwfkc40Wh6T4/NznPsfjjz/OSy+9lFNEZsOyLBYsWMBll13Gt7/97axtslk+p0yZQlNT0wE7yZZl8fTTT7Ns2bL8swr88UrY+iwuuTOfpKTBLlmJgc1WdyL3u+dypNjJTcYf0g1Exj/T3gOX/2FkH2ScUND5UIwZmefDMAxeq3+NV/e+CsDSiUs5ofqEw8PX+yBBXR8HD4f7uejo6KCiokKJz4OQvKfdS0tLs/6Ah8Nh5s6dy4033siyZctGdXDZ+PznP88//vEPXnzxxWEJTwDTNFmyZAlbtmzJ2cbr9eLN8kUxTfOAX7zDGkPHHqSbGLTcoCsNhEwyQbRQRCcaFu86szD1rmwAmYGpnXvAMNTUewYHw3dC0Uv3+Th16qmcOvXUAz2cwx51fRw8HK7n4nD8zIcKeYvPH/7wh1mXt7W18dZbb3HBBRfwpz/9iQsvvHC0xtYHKSXXXXcdjzzyCMuXL2fGjBnD7sNxHFavXs35558/BiM8iEhGYN87wOD5nnXpMFG0gIRmWcxUrYE5YveAdlKC27CB+A+Xol14F4HZS8dm3AqFQqFQKMY9eYvPK6+8ctD1Rx99NLfddtuYic9rr72WBx54gL/+9a8UFRVRX59OpRIOh/H70+k8rrjiCiZNmsRtt90GwLe+9S1OOukkZs+eTVtbG3feeSc7d+7kU5/61JiM8aAhsm/IJgIwhMTEoVZWEcFPjWxmktbUp53sqQMPgdb1tP/mw9ifepbiafPHYOAKhUKhUCjGO3nXdh+KCy64gA0bNoxWdwP46U9/Snt7O+9973upqanp+fvDH3r9EGtra6mrq+t539rayqc//WkWLFjA+eefT0dHBytWrNgvSfEPKNuWD9lEAgjwC4u5+h5O0DcyRW9isFLKQkCJFkH85v1gJ3M3VCgUCoVCocjBqGWJTyaTeDxjV4s3n7io5cuX93l/1113cdddd43RiA5i6tJ5OdOZPgdH5tkuk5DTBC/+AM78amHjUygUCoVCcdgyapbPX/3qVxx99NGj1Z1iJIQnDat5QekOXvwubHxi6HYKhUKhUCgUGeRt+bzhhhuyLm9vb2flypVs2rSJF198cdQGphgBgd661YNZNbutnjHAz+DBSVm3/tNVcNE9cNS/FTZOhUKhUCgUhx15i8+333476/Li4mKWLVvGX/7yl4Ii0BVjQLyj5+VgVs1usWkCbUBprkb9OxFdi6wY7p8/g57sgGM/odIwKRQKhUKhGJK8xefzzz8/luNQjCa1/+p5OViez24MwJdrZRbh2fetTfyxm/HXLIZJxwxrmAqFQqFQKA4/Rs3nU3EQ0ZlOQ2WTnz+noEt8yix/gyABB40m18fjf7iXjo6OwTdQKBQKhUJx2KPE53ikaELPy3wnwkU/oelKHxIdAImGxEj/K+n562pJOS2UdbzDn35/P7Ztj3j4CoVCoVAoxi9KfI5HTvgMILqkYw6GsHDasoaUO5GUW43lTiLqLKUudS5xOwSkRa2Q6Sl7PxZz2MG8fQ+x5fGfQrJzlD+QQqFQKBSK8YISn+ORuefAnHPSAjHb+rxyK8UQuEgsbFdDZzel+pt49GTW7YuJMIs9lLzzE/jXXeAoC6hCoVAoFIqBKPE5XlnyCSBDfObpx9lN0tVBJDBFO36jFr++Hb/eiC6srIpWR1JFC+XOXjq3r8Bt3zXyz6BQKBQKhWLcocTneCVQ1vOykARIrrCBOELYCGReulWQ/kK9sG8ydz6whxUv7MKx3AL2rlAoFAqFYryixOd4paOv5XG4KTg9IoqG1bt95l/mm35oEk5MvkxyXxuvvribtS/vGebAFQqFQqFQjBY//elPWbRoEcXFxRQXF7N06VIef/zxAzomJT7HK7p3wCIhBv5lQwIekSThBOmjMDME52BW0HJtLxfq/0uHm2TLmgakW1ABT4VCoVAoFCNk8uTJ3H777bz11lu8+eabnHnmmXzgAx9g7dq1B2xMSnyOV8ITC9rMlV5cWYomJAG9vXfFgOTyg3MEKylJbKelYS/NLc0FjUWhUCgUCsXIuPDCCzn//POZM2cOc+fO5X/+538IhUK8+uqrB2xMSnyOVyYuAd0/YHG2DEsyIymTJpIIYrgyiCYkortVDuOl03+VSAtTQ6Y4Xi7H8exmy5YtI/00CoVCoVAoMujo6Ojzl0wmh9zGcRweeughotEoS5cu3Q+jzI4Sn+MVTYepJ2Vd1S08U4ArQOD03VQk0USk70Y5TJ0aMCCkqEuAHmG+yATPu1iWNXBDhUKhUCgUBTNlyhTC4XDP32233Zaz7erVqwmFQni9Xj772c/yyCOPcMQRR+zH0fYl79ruikOQqUth+/M9bzMtlAIwB9lUDJSUWbERCAQubp8YJCEgqLdS4rYycWJhLgAKhUKhUCiys2vXLoqLi3vee70DYz26mTdvHu+88w7t7e386U9/4sorr+SFF144YAJUic/xzPSl8MLAxaLfv9kQIrOEZnYsdFLoeLssp/37M5AsTr5JSUUw3xErFAqFQqHIg+7o9XzweDzMnj0bgGOPPZY33niDu+++m5///OdjOcScqGn38cy0U/JrJ7L8kZFSCfqYTd2MtyYuer9p+8xui90m7J+cAm/dP7yxKxQKhUKhGBNc183LR3SsUJbPcU1f06UYsGTwLXssmVki3VMIPDi5rahdO9IAkWyE574FhgcW/3ueI1AoFAqFQjFSvvrVr3LeeecxdepUOjs7eeCBB1i+fDlPPvnkARuTEp/jGU3v8zbnNPog+T6zYaMTI4BGHBeBiYXWR62mX0uZXuRKgUhFESt/AwsuBI+ahlcoFAqFYn/Q0NDAFVdcQV1dHeFwmEWLFvHkk0+ybNmyAzYmJT7HOyUzoG37qHbZTCkeUjgIXDR0dBBpK6iDwMLAg4XWJUBdBIYVh+ZtEG1W4lOhUCgUiv3Er371qwM9hAEon8/xzuUP9X2fw78zX9JpmgQpTEwcAiQx6BaeGm0U00op65hDp2HiALrs8hKN7IO9q0b+mRQKhUKhUByyKPE53qmaD5pn1LoTQJgOSuhAw+0zNS8BHYmOg1ekeDs8Ax3SFtDuFo98Gna8PGrjUSgUCoVCcWihxOfhgNaV0TOLldMFrOyrcuLrsnZ24yB6jKgmFhLQcKnp6Ez3m9m5HYP7L4a6NcP6CAqFQqFQKMYHSnweDlTOy7pYAgkP6FnX5kYD9K4k9IK0tTP9WvYsa5bFzLT29aZtyuzATcFDKupdoVAoFIrDESU+DweO+CAw0LopAH9qGF+CjILwgoHbxfDRQDk7mUQ1zRiDVUlq3wU7Xsp3zwqFQqFQKMYJSnweDiz6cM5VfUpikuf0e5YcTBIIEqeaBpawlqnUD7UJvHDn0GWUFAqFQqFQjCuU+DwcCE+E4mnA4MHuGYbN7PRvnKWvACnMjOTzg9K8GVq25dNSoVAoFArFOEGJz8OFjz445rvIFK8dmmCbadCZZX2PwE12QseeMR+XQqFQKBSKgweVZP5woahmzHfRbe1c5zH5TbiYdgFLYibvjUim0oYLBEnXkpWAsBJQtxpmnDbmY1MoFAqFYn/z62UCX3B07XyJqIA7RrXL/Y4Sn4cL/lKYfALsfn1Muu8WnkkBvysuwnQlX2xLUOyAjxQGDi6CFDqe7jRNbkpNu48DpJREV6wguX49IhAgdNrpeCZPOtDDUigUCsVBihKfhwtCwMnXwR8/XngfGQ6hIptTp4QOTSMuNK7oaKfS8RDBJIWBjxQ+Ujj9PT22Le8qAj/MUkuKg4bIs8/SfN9vkIkEaBrxd96h6sYbMauqDvTQFAqFQnEQonw+DyfmnFP4tt3CUwzUiZl+nGHHZbqVwu+4OEgsdBKYtFOEhYHWP6SpZSvseavwcSkOGFJKtrVtY8uvf0xk22bspiaceIzU9h3EVq2iPlrPvug+pMpooFAoFIoMlOXzcML0wTGfgJX3DViVUx4MoRv6r/YAn2nr6PpixQji0EYxOpI6KqmhIZ2gXnZtKyXOMz/A+MQDw/kkigNMa7yVhzY+xCubnmFZZAvRKdBa6eJJtHPUXoO1q+/llZiNqZucOvlUSjwlvLD7Bfymn5NrTuai2Rfh0QeWfY1bcRzpEDSDCGUNVygUinGJEp+HG+ffAe8+CE5ydPrLIk79EmSXbtBJotFOG2ECJPBi991GgLb1nySe/R2+sz42OmNSDEp9tJ41TWuoi9QR8oSoCdYwr2weITNEp9XJP7f+kz3RPUwumsyFMy8kZIZoTbaSsBNoQqMp1sTPVv2MdxveRURjPHekS2sIUmYUELw2Nckezyo6WtNfglVNq9I77jrvr+58Fcd1+Mj8j7C1bSsRK0Jz6xq++8Zt7HNEV3lWnX984J9MLpl8QI6RQqFQKMYOJT4PNwwvTDkJdryQX3sx6Nvcm3XnARXpgKMJNOb08RAamMuvhaXvh0BpnntQDJeWRAtv7n2TX679Jdvbt5NwEj3r/Lqf2SWzCXvD7I3uxZUuMSvG8o1PUmGE2WLtpTnVit/w0xhrxJY2rnRAc3lrliCQgvJOSUqTbJokcIyMb0q/B5RO2cmPXv0Rq5pWsb5lPY7VTmu8jla39xvi4HD+X8/n3SveVRZQhUKhGGco8Xk4csKn8xef/ZDkL0ARvbpD9lveX5BoGvD3L8Gl9xU0LkVuXOny8p6X+e7r32Vn586sbeJOnDXNa9DQ8Jt+bNfGspM0RRvw2FDTaWBXeNmTaMHtLpuaNlGChKgfov78RWIHHTy17Sk0Q0NzY8TcgdtKXDa2bGR++fwCPrVCoVAoDlaU+DwcmXM2lM+F5k09i7LowVGhu9+8ZMmu18ZgBIcnUkpW7F3Bnzf9mVWNq2iMN/aKxlzbIHFxcJI2xY6fGBDRE9gaNPlt9ITE9fb2IaWGdHWEZiGG++0R4E15kR6J5Ug0yDq6tmTb8PpVKBQKxUGPEp+HI6Yfzvom/PFKMm/5WapnDokQg5dnd8mzZrwADPV1HCmNW9eyY+MbbI7u4H9j/yRCYuiNunFBQ8OVLlGRQEiBKXUs3aHTD+CAmz7ZruPHTdYgPM0I3UIihi1AdUMn4SZISkEAl8iAb4lgVnjWsPpUKBQKxcGPutsfrhxxEZx2I7yYX5mEwayXOQWoBC2L65/o17bHpa/mmLzGosjO88/9mvtf+QkRLYUn4XB8u8sLizRcPb/pcE0KSuwi4noSUxpoUuBKidVdFKDrDEoE0g2AlkTosZ7t+wjQIXK3+iwfSX8STWhowiAie/tPI5hWNI3KYGX+B0ChUCgUhwQqz+fhzJlfB09R3s0Hn7TNQX+h2S/SPdMvFN1byB4UQGOskV+/9TOaPEkcIWkqluwrFZS359+Hq0maPe3E9ARteicJLUVM72c5FSAdH05iIkgN5CDPr91PJP1N6hISZoKkm+S0yafxtRO+xtzSufiNAB7Ni1fzETJD/Pv8f89/8AqFQqE4ZDjkxOePf/xjpk+fjs/n48QTT+T11wcvF/nwww8zf/58fD4fRx11FI899th+GukhwsJL8m7arSGyGTlF/+TzggHz7bnsYD1J6jc9Dq6To5UiG47r8OdNf+aLz1xHi4zijznolosvCXvKBU3hAjsW9BWemedRT4DrJdW2FCc+JbePhpQIW+JJSITTdZY10n8CHOmws30nJ006iU8u/CQLyhYwt3QuU4unctyE4zh9yukFDl6hUCgUtfcQNAAAPLNJREFUBzOHlPj8wx/+wA033MDNN9/MypUrWbx4Meeeey4NDQ1Z269YsYLLLruMq6++mrfffpuLL76Yiy++mDVr1uznkR/EnPFfEKgYsHig911+PqEDRGgG8RydCSDl+tnVOYNdb2wg3pnKY+AKKSWPrP8lj737bXa0ribilcS9YNiSmA9i3rRxMsuGvX+ZZDtvWRx2hZAYxavwlL0EWhLZZf3M9PkUbnoaX3fBNtPjEA49PqOQDnDa0bmDdxve5dzp53L5/MtZUrWEs6adxeeXfJ4pRVMKOi4KhUKhOLg5pMTnD37wAz796U9z1VVXccQRR/Czn/2MQCDAvffem7X93Xffzfve9z5uuukmFixYwLe//W2OOeYY7rnnnv088oOYomp4/w+zrspivEzTZcQabnS8TTr5fP/Y6JTrY3P8PbwTvYBX/7GJlx/eREdzPFc3CtLT7F967hruePNHvB6z6ZCC5mJBfamgMQydAYFlkqUWqhz8vSD7ie/XTtNS6N46DP9uhHAGBBt1W7NdDdxu9wp94OdIWAkkEkMzOHfGuXz5hC9z7dHXMq9sXr6HQqFQKBSHGIdMwFEqleKtt97iq1/9as8yTdM4++yzeeWVV7Ju88orr3DDDTf0WXbuuefy6KOP5txPMpkkmeyt/tPR0QGAZVlYljWCT1A43fsds/1POwVCk/n/7d15fFTV/fj/172zZpuEkJAQyEIgEJBFFoloRVBErFKtftxR0Zb6sQpV/PyqtlZR+yjYWqW2Vms/KNrWav3W0vVjRRSsCqJQqiggoMhiEgiQPZntnt8fSYZMMjOZSSazkPfz8RhN7j333PfNmQnvnHvuOTTXBC2iAn2jBe4sC5aU2oCOK/Bw4iEmp3KQY99PmvU4nxjHqNndwO63XUz86oSILiNW+r09ujjScoQD9QdIMadQkF7AK7tf4c97/syR5moM7Ng6tYeyQW370FlbT4mnbzshHw46UaiLUIfobeN7sxoVdRnaifHC2okD2xJUnc2VO5ldMBub+cSYX7fhZv3+9Xxy9BPSrGmcU3gOpVmlAU8V6/YQoUl7JI6B3hYD9bqTQdIknzU1NXi9XvLy8vy25+XlsXPnzoDHVFVVBSxfVVUV9DzLly/ngQce6Lb9tddeIzU1tReRR8/atWv7r/KyH/Vf3RFKAQ5ygIP/OBDvUELq1/YI4nM+J488vmX9FnRfGj3xZIdR5iise21dwF1llAGw88BOdhL4c94hHu0hgpP2SBwDtS2am5t7LiTiImmSz1i55557/HpL6+vrKSwsZO7cuTgcjrjE5Ha7Wbt2Leeddx4Wi6V/TnL0M3j6XE70TZ4Q6vZ6JD2fnQt07mxr8g7iqKeYdL2GPc7T2e+axMTUvzJmyU9h8Iiwwo+lmLRHu0fef4R/H/43bsNNq6uZoy1H0RR4dQAVugHC7fkMVDbgcaEeGQssszWT4c3D0dA5ZjtGZVolRpe5tpRmxZ06jbvGnceVZfMAeHDjgxxrPUZ+Wj5KKfbV7ePacdcyc/jMbueIZXuInkl7JI6B3hYddy5F4kma5DMnJweTyUR1dbXf9urqavLz8wMek5+fH1F5AJvNhs3Wfcofi8US9w9vv8YwaBjgBMP/YZ9IE88ejwuwI5NK7Hojtd6huF2pTLK+ymjLO1iemgFLPoDsxEtAIbrtoZTi6NH1HKl5HaU8ZGefhd1xJu9WvcuhpkN4DS8YBobW9uCO6kg+u+aFwRJPv51dhH3LvWu50H9m5LTkMPnoFCyGBQODrJYsPMrD/owTPdoKHU25cLmPsLflqO/naTKbaFWtGLqB23Dj0T09/rwT4TMqTpD2SBwDtS0G4jUni6R54MhqtTJ16lTWrTtxe84wDNatW8eMGTMCHjNjxgy/8tB2+yFY+QHNktr2ipLwV/luY9MbyDN/ytmOXzMuZR1mvIAHfnNp1GJKZLV1H3Dg4GpaWr6gtbWK9/c+y/+3/r851HQIt+HGUG2JJyiUuWvSp3WaryqEQElmj4lnMD2cTEFZ/WhMhokmUxMezYPNayOv2X8YjG80qAZ1jZ/y0MaHWLllJeMGj8OqW9lzfA9f1H3BqKxRnDrk1F7GKoQQIpEkTc8nwNKlS7nhhhuYNm0a06dPZ+XKlTQ1NXHjjTcCcP311zNs2DCWL18OwHe+8x3OPvtsfvrTn3LhhRfy4osv8sEHH/D000/H8zISk65DThkcej/sQ3pas73b1Eyh7vr6/tNpKh4F2vEvwOME88k9AX1j40683mbS0kajlOLVA/9id6MTZXSe2l8F+TqAYCsMRZpsqq7nDO94szJjNkzUW+tx6S5QkO3KRkdHo2v0CptzNx98eYiy7DLchpv9Dfu5YswV1DprSbGkcHr+6Tis8Rn2IoQQIrqSKvm88sorOXLkCPfddx9VVVWceuqpvPrqq76Hivbv34+un+jMPeOMM3jhhRe49957+d73vkdZWRlr1qxh/Pjx8bqExDb9m/Cn8JPPiHRd2Uj5f9u1aMc2twHqrSexzv5OH3rpEp9JT0EpA6W8NHs87GpopMHlwRPWJUc66VWYgq2Z2gPd0Elzp+E0uUj3pKOUQken1dRKZWol0O0tADipdbnYV7ePiqEVHGw4iKZpfL3s61G4ECGEEIkkqZJPgNtuu43bbrst4L7169d323b55Zdz+eXhr+IzoI2/DNYug8bKPlUTVirUPfvw2wVty3kaWPji7W2MnrAbckf3Ka5ENnjwTGprN9Pc/BkHmppo9HgIb6r9ED/IKNKUQnUk/5oW9OEls2FmbO1YTIaZytRKRjSMwNAN6sx1VKZWcjTlqF/knSkUR1qOsLlyM3lpeVj1ZHicXwghRKSSLvkU/chkgdNvhteX+TZFmtr0WLbrEpwBDlCAoTSajSzsegsNLSl4muow50YQSJKx2YYwatRd1NVv44vPNmF4DoLJ6F4wkifYo8SiFN2mkQ+SgA5tKSDbOZhaSy1N5ia2ZW+j1dSKy+QKvD5r18tBUd1SjctwMSIrMR80E0II0TdJ88CRiJHTvhV20UhvgivaV3XsWkmXirzKhEelkqI34VIp1FGMPqg4wrMlH6t1MLk55zIk70zMmAIk5l1H0argy1BFYYiCphQphkGxy80wtwu965KcnddSbf/a4m17ulTXdAa3DsZlcrWN+Qx7lqa26zruPM7PPvgZKgbJtRBCiNiSnk/hz5YGQ0+Dyraxn6H+6Y8oLWhPPjqSz24rLXbqBdXxYtKbAPB4HZySsxU98+5IzpbUhmUWUeAYzmcN+3B3nhPTl8CFGq8QvXGxStNI93hp0HUadQ1DC7jYql+i22xpRqGwe+wYysDutdNqau3hRB3Vtl1X21kUb3zxDx7bMoT5I+ezqXITVU1VlDhK+GrpV0mzpEXpKoUQQsSa9HyK7hb9M/Jj2jvFVIgpfxSgB1mSE2hbrlM7UUYDMsxHydM+hpbjkceUpEqzSlk45Vtkpg0O2rMZmw+uxhGLhWqLhSaT+UQQqtOri+qUavan70dpCqthxa27w8yHld9XBuBSBs9+/AyX/uVSnv7P02z6chPPffwcj215DEMFGJIghBAiKUjPp+hON4E5DTxNYRX3GiZcKgWb3nxi3sYAs/JoXf7f9Wvftk4bTShIyQRnA6QMCvMCkt9FIy+iyFHEtf+4NuD+yFOvAHODRkOXdlaaYp9jH/vT96Oh4cXbcx1a4L9WOh9Z66qlxdOCrun8afefONhwkJvG38S0/Gl9Cl8IIUTsSc+nCGzSVSF3d05djnkKeadhIbWeoXiVOWDHpwLcaHgI3DGqCNGhdvwL+HQtuHu4fXuSmZg7kbLMsu47ehoL4ffqMk4zrEoiFKAqQzfw6t623zDBxqVC0MQzEKfhpMXbQqvHw7+++DcL//gTvr/+h22rPwkhhEgaknyKwM75HgweHdbCOU3ebKpcY9jaeAlfusbiNFK7PdCsAToa3k6jPQM9/Eygba7GtifwX/kWNA+c2+8APzrrR2h+XYvgW9GoKxUwu+ufwHpLI3QyGvCAE5Shg9LRdA+G5uH/fVDH3RuWRT1MIYQQ/UeSTxFYWg4s/LtvRZrOut4+13UPhbYPOSV1HXa9iXrvEKqdpRjtCVJHnmTGwIY3vDed6tJp52qAPWvhtXsHVA9o+eByvjf9e5i1riNktLZks/MrqG7zGfXQKxr4sJB6qqs3VKAk20DTPaC5MKfsQzMdZ8OefdE9rxBCiH4lyacILmMIXPnbkJ1VGm3rso+0bwKg3puPUhq51v0B31yGB5x1JjzNOh6nFtYd4bYn5BVuD3h2v4mq+qivV5ZUrhp7FXOL51KUUYSu9fEjG/Dnrfz3+82HFXJAROi6+krr8tcL+P/lo3uwZG0D88DqDRdCiGQnyacIbeyFMPaSoLsVkKEfxqK1oGkGDtMhcq37MOme7h1uBtR8kkHVlkyO70ml9rNUGg7Yui8fHuAcyoAWTwr19WY+fmMXbtfAGuc3atAosu3ZzCiYQbolvXuBkL2UYSaEqnNZFWR9+DD/WghbT92rqj0JDZb8GugWST6FECKY5cuXc9ppp5GRkcGQIUO45JJL2LVrV1xjkuRT9GzoxICbO6ZVsutNpOrHSdNqyLHuR+/0EEnndMHVYKb1qAWz3cDrNNFaa6GxyoY3nLvoGqTrR7Frx6nZd5zP/n24T5eUbOaPnE9ZVhlOr5Oc1BxMmql7d3SwPC6cCeeDzZHVkYD6vTrOFWZvaF/0ELqmedF0mXZJCCGC2bBhA7feeiubNm1i7dq1uN1u5s6dS1NTeDPa9AdJPkXPxl8WcrcOZJiOkmY5ht4lGemWOyjQNEVqXitDJtaTO74Rk9W3K6COsaMaYNMamMyvMT7fGOFFJLf8tHwWT1nM2OyxNLoag99+7zpGQuPEbfRYLhbUMQZU+f8hErgPM/zBpZqm/PPgTj8Gt9fdt5iFEOIk9Oqrr7Jw4UJOOeUUJk2axOrVq9m/fz9btmyJW0ySfIqeDSqGjGF+mwLdWe1YpKhzctH5a0u6B/sgN5Z0F+lDnZhTDEx2A01vn1QcE0agZ0w0aMSOB9BRpKv9DD/8a/B6onaJic5jeHhx54v869C/8Hpa0JWBDug9fYT7c3nKcJfwVCr4zXpfktqt8ojDWXdgHU6vM+LjhBAiGdXX1/u9nM7wfv/V1dUBkJ2d3Z/hhSTJp+iZpsEZS7psC1Csy/8V0Gw/8RbTTTD4lEYyS1vRTLT3gtI+c5CG0TGpkOafvGpAKq2+SZp0pUg79h7UHojG1SU8r+HluY+fY82eNRxpqsJwNWHxusnyeJnQ2sLUVhdmwwCvt1uPo6aU3515k6EiS+t6SjCjsIZ8p8o6vSK3+qPVLHt3GR/XfBzFmIQQIjEVFhaSmZnpey1fvrzHYwzD4Pbbb+fMM89k/PjxMYgyMFnhSISnYhH88y7ft52WYj+hPVPs2G4AVpfhl0qYrMp3m70zHYUdz4my2on/dVr227dRxwsf/gFm38XJbtfxXbz75btkWtJobarGAArcbizA1xsamNfYTKXJxCcWMz/OyabO3P6xVgozYDcMUIoGkwlD19CVwhtO0hhuYtm5XH/2tPagpqUGc52Z1R+v5t7T7yXTlhm3WIQQor8dOHAAh8Ph+95ms/V4zK233sr27dt5++23+zO0HknyKcKjm8A+GFqP+jZpWpdcoz0HMTix/KMpzGdBAqzG6U/z+1+bxqrwKk9yze5m3Iab0pQ8XMc/p8nwkqIU41wuZja3YAVKvF4swBCvQYtJ4QLQNFKUosTlpspsorn99rcRwe1yv594zOerD/QnTvAgmjxNuLwujrcep6alRpJPIcRJzeFw+CWfPbntttv429/+xltvvcXw4cP7MbKeyW13Eb5Lftltk9blTmlz+/YWTeOISadV08JZ3Tvstcr9HlYZMTPMo5JbsaOYISlDqHTVMdTQmNHczK3Ha/n28TochsJL2zro6YbBKS43pvYeT4BGXWev1UKzrmNoGoamtf/8Il5qqE8PLGm97hGNLM5jrcdItaRK4imEEO2UUtx222386U9/4o033mDEiBHxDkmSTxGB8nmQlt9tc+e0QHGi59NiKDxAOI8FWYisY80LqJ1/B+Pkn2YnNzWXb078JmU540hJz2dqq4uRbg+pSqHTdvvCC3g0DY223k0vbY+DG5pGk67T7Es6aRtr6+30DRC1bs0QvaqaUifGoLZ/HW123c5/jf4vclJyol63EEIko1tvvZXf/va3vPDCC2RkZFBVVUVVVRUtLS1xi0mSTxGZIHN+dng3xU69rpOmFJntyVE403gGWsQmmCZMeDDj3f4KvP1oGLUnv/Lscu49/V4eOfsRLlap7LFYaNTblj41gEZN41OLmQNmM15NQ2kaVs2KGVNbEqrr7eMkYPhRsHk6T4MULAnsZULabV7QLq9gZXqp4zKUgpsm3MTM4QOjR1wIIcLx5JNPUldXx6xZsxg6dKjv9dJLL8UtJhnzKSIz5quw57Wgu7MMxRFdx2YYmAAnEGA9npB66g9rW2/eQMeL953HMZVfBEPKIzxLctLzxsHXn2T0X5awxlqHDUj3GugKfp2dRbXZhFvTybZlMzh1MF/Uf4EVE0op3MpNmhNq08DV4yc/igM8I/nLItKqO9XtaS4F19DonkAIIZKciuODoMFIz6eITGFF0F0acFqrkwKvl8O6jgFkK4Utyu97O24+sWi8nWLnc6OJff9YBgNpgvGy88i5cwc3fnsnl9z8b7Ku+D2/H38O9Y580tLyuHbstbx2xWvcNXkJp5gzKTYgS7UNT8g/rrC7IacWtN6MWPBN5Np9Evmg5QMdHwVdT+1tGsmftzTg8Z78QzGEECKZSc+niEzGkKC7lGpLQB2GwtHPy+nsN5vYb7PyToqdkuOfkP7lx+QUntqv50w0WoqDNBycnZ7HqJzRHG4+TLY9m2JHMQDTqz+jssXF3yxWvIaTo8qLpiDFqbC5oNar4dFAaaC0QFlitzN2+brT/e6ozvfZO8qw0diq09DqYVBagPm8hBBCJARJPkVkUgcH3ByyA6wf8pK5LU6cLU4adJ030rxU1lWTUxj98ySLYenDGJbuvwqVdnQ3F5uyKUnL5hNvPS817uXzfMXQo4r61LZm0Q3wmALX6a//n4jvK8OZS2FWJhl2+bUmhBCJTH5Li8i4m3su00c9zfmpATbACqQaBuc3NuKu+RA4v99jSyoZ+WgHP+BUzc6puplidZSfpdvYqVdib1UYGnii+RtAdfuik/7vGdVVGjeeUY7ZJKOJhBCJ4Z6jx3G09Dz5eyTqm52siGqNsSe/pUVkXE1E+23TdS34cGmACchSioJ/Pw/ucJ6rH0AmXA55p0Dtfmio5sziOTx74e948aKXmDRiBm5rx1PmPSWGnSfS6vyKRHS7RAP1tI8YYqHZGc6sskIIIeJJej5FZFKywVEI9V/4be622pFvR89VdhQxaO/1bK9L71ImWPUWQG86As1HIXNYgFIDlKMA5j4ENbvBZIHcctJMFsal5fLL837JY+8/xu92/q79SUit+7jPzjlnqOTRb7xnGElmyPdE73tNrXoK3gR8qlMIIYQ/6fkUkTGZ4cIfh1e2S84QLC1QgNMErRbwto8/7DwOMVTq0TahOuB1gV1WtenGlgHDpkD+hLYEtJ1Ft3D12KuZUTCDdFt68MSz69ddRfKgUQSLKfnr/s4JdNpiRxHjC+Q9IIQQiU6STxG50lmBt3dNLkLkM123W71gd4PZC5oCSw93TzuqdmLhKFmgvKDJ2zkShY5Cbhp/E2MHj8VutqNpWuQJot+US33tdezb8d84axi5GdEdWyWEECL65F9rETmLHUrPCbwvRP7Q0wPxevsr3FGIXsCEFwtt65uzf1MPR4mupg+dzuOzH+fSsktxWB39d6J+mIqp6+JII3Ozon4OIYQQ0SfJp+idvFO6bwuUXarQuyPRdf140DFh4KARDybYvXZgTTYfJWnWNJZOW8p3pnwHqx5kfsyIbq8HWEYzBsy6DGEXQohkIMmn6B2bg85vn3ASy9682bqmLR1r1yh0FKr9iXcvFrzw79/AGz8EZ2MvzjSw2Uw2Lh9zOeeXnI8WrN850rXYo5Z0hq5Hl19jQgiRVOS3tuid4hmQ3raOti/xDJYjRNjlqRH81rsJUGhoKEydKtYBXA3w0R/h01cjO6HwuWXSLZw+9PSkSujKssriHYIQQogIJM+/MCKxlHwF5twXXtkIO8B6enTF1KWE35u46TAc2RXZCYVPoaOQFTNX8P3Tv49Vi90SlW0tqrX3ZXcW/M2Tbk5ncu5kvjP1O/0amxBCiOiSQVKidzQNxswLsB3/zLEPd15DrXQUdEVIrxtk7F+fZNuzuWLMFYzNHsvidYs56jwauGDHbfWOuTV7eZu9+6ryQW/8+1xbfi1XlV/FIPsgUvVUKqns1bmFEELEnvR8it7TgiR5oe6bx8Kg0jid+OQyIXcCt0+7nbyUvNAF+/BQUai5X4MxY+bKMVdSkllCpk3m9RRCiGQjyafoPWsqoEeeY/brIjQKauS2e7SMGTSGsuwyCtIK4h2Kz6TcSRQ5iuIdhhBCiF6S5FP0nq7DxKuBCDs5O27NB0hC+56XKvjoD9BS2+eaBIwdPJZvjP8Gs4tmU5FXEe9w0NAoyy5DlwUFhBAiaclvcNE3JV/psUjAO/BdNhqAK/hIzh51LLJjKPDWfQm7X+t1XcLftPxp3D39bn59/q/54Rk/ZLBtcNTqDrXqVSCD7YOpbqqm1dsatRiEEELEliSfom/2rgu5W6PT6osheDDTjL3b9nB6QrvWrbxeGra/E8aRIhKapnFx2cWsuWQNP535U75a/NXo1Et4Q4QdVgeZtkwybBnYTLKMphBCJCtJPkXf2NJ8X2oBXn6JoSLo7XYzXtLoY29W+9LkumZwZO/hvtUlgsqyZzF3xFwenvUwj896nExrJibNhIbW6/lBbZqN4vTigEloujmdISlDGJI6hGJHMVeMuUJuuwshRBJLijlp9u3bx0MPPcQbb7xBVVUVBQUFLFiwgO9///tYrcHnIpw1axYbNmzw23bzzTfz1FNP9XfIA8fYr8HW5/pcTdt6RUa36ZXCGkva5QANMFxOMIy2cami38wuns1fhvyFPbV7SLekk25NZ8P+DWys3ojX68VmtvHpsU9pdDfS7GnGbfgvf6qhcWrOqSyfuZxhGcP4z+H/8PbBt3EZLqbmTaVsUBl5aXnsOraLRncjhRmF5Kflx+lqhRBCRENSJJ87d+7EMAx+9atfMWrUKLZv386iRYtoamrikUceCXnsokWLePDBB33fp6am9ne4A8uoc8E2CJzH/Tb7rXoU5lNEOgonFqy4/frPAt2y900xGaAeBTj0Q5J4xkh2SjbTU6b7vr9u/HUsOGUBCoWu6RxuPsyhxkOYNBMtnhaqm6rZcWwHAJNzJ3N20dm+2+iThkxi0pBJ3c4xdvDY2FyMEEKIfpcUyee8efOYN+/EhOalpaXs2rWLJ598ssfkMzU1lfx86SnpN5oGWcVQfSL57JYQaid2hJo4vqPsYdMgHJ5GUnH3OFY0UH0aMIidcORTyB3d8zWIqNM0zTdV/JDUtlvmnX2Nr8UjLCGEEAkgKZLPQOrq6sjOzu6x3O9+9zt++9vfkp+fz/z58/nBD34QsvfT6XTidDp939fX1wPgdrtxu93BDutXHeeN1/l7VDYPjuz0fRusN1Lr2KGdKNM5cfS2/z/TaMWpp2LBGbTCjp5PL4EHLisDan7zA1qOjUazWEg/ZzapFRVovZwMvbOEb48BRtojsUh7JI6B3hYD9bqTgaZUT31LiWfPnj1MnTqVRx55hEWLFgUt9/TTT1NcXExBQQEffvghd911F9OnT+eVV14JesyyZct44IEHum1/4YUX5Ja9EEIIkSSam5u55pprqKurw+FwxPTc9fX1ZGZmUvfizThSozs7R32zk8yrfhWX64qWuCafd999Nw8//HDIMjt27KC8vNz3/aFDhzj77LOZNWsW//u//xvR+d544w3OPfdc9uzZw8iRIwOWCdTzWVhYSE1NTdwa2e12s3btWs477zwsFktcYujR8uFAWyelQZCpczp1dwYq40EHNLzomPGiY7TtD9HzGXB3pw31xpm0apNw7t1L5sVfI/PiiyO6rECSoj0GEGmPxCLtkTgGelvU19eTk5MjyWcCiutt9zvvvJOFCxeGLFNaemKd7i+//JLZs2dzxhln8PTTT0d8voqKthVaQiWfNpsNm637G8ViscT9w5sIMQSkFBitKMCNjhmFCdWeiGqYOrLBzlligLvfZqBVs2LFQFMGZgx0uj9wpHV6iMm3K8ifUJne93AZ5egeNxabLao/v4RtjwFK2iOxSHskjoHaFgPxmpNFXJPP3NxccnNzwyp76NAhZs+ezdSpU3n22WfRe/Ek87Zt2wAYOnRoxMeKEFraHjZyYuE46ZhQZFGHhkYLNtJoaRuX2enBo0A0wK5cdC4K/r2cQQV5ql6jGa3q39hGTiPtjDPCuhwhhBBC9J+kmIvm0KFDzJo1i6KiIh555BGOHDlCVVUVVVVVfmXKy8vZvHkzAHv37uWhhx5iy5Yt7Nu3j7/85S9cf/31zJw5k4kTJ8brUk5OtQcAaCSV/+Nc3uE0jjKY42S2J5FdsscQyWQ4K90Enas+wGPvmi2NrHlnMeTOpZgHR29ZSCGEEEL0TlI87b527Vr27NnDnj17GD58uN++jiGrbrebXbt20dzcDIDVauX1119n5cqVNDU1UVhYyGWXXca9994b8/hPeu290IcYSj0ZtGDnGFk4aEAB6bT0qtquuWRYg5M1/2NNqQ5SZpwHgwb1KgYhhBBCRFdSJJ8LFy7scWxoSUkJnZ+dKiws7La6kegnmUUANJCOg0asuNnBKIo4xDCqI64uUM9npE/F+eb/TBkEw6dFHIMQQggh+kdS3HYXCc6WAehkUo9Cw4ILLzp7Kfa/Rx5mBtn1kN5Mx6Bof1ApZ1SYg0aFEEIIEQuSfIq+03XILqWcvYxiH26saMAstYmhHPYrGnBiryDZpsGJied7RQOGjOtLDUIIIYSIsqS47S6SwOTrsKy7n7PYTAPpmPCQRqtfEQUYSsOkKf+NXWknbpvrhLEkZycGJ/6iUoA2qCSSqxBCCCFEP5OeTxEdp90Eug0dcNDYLfGEjgSyh7dcgCyzhxma/HSuXWkaDCoO4yghhBBCxIoknyI67A4YeU5bghhioKamGd22GerE29DodGjnpFN1+rp7Dd3LASh7BgydFE70QgghhIgRST5F1BiN1ahgmSFtiaEeICv1YsJo36wrcGM6UWenchptY0aD9YS2JaZtZ/ACpoufBktKpJchhBBCiH4kYz5FdLTWw5EdIR8s17QAd9U1sOD222TBixcNDeX766jjOAMdXbWt+d4xvlPrVJeBhgZYRl8I5Rf06ZKEEEIIEX2SfIro+GAVmtcVfH8PSWnXolqQ+/YmzfB1eXqwtCeoBjoGBiZ02hJTrKmRRC+EEEKIGJHb7iI6avej6f3/t4zW6ba7DTcmjPbb7CY0DEyotv2Divo9FiGEEEJETpJPER05o4OPr+yy5GU01bqHcaB1Godd5dD+4JJChxm39cPZhBBCiOTy1ltvMX/+fAoKCtA0jTVr1sQ7JEk+RZSM/y/IKmwb1xnwNnpkgpbvtMNt2DjsHsmOlnN5v/Eq/t30dZTS0UvPhdTsCM8ohBBCnHyampqYNGkSTzzxRLxD8ZExnyI60nNh7CVQ9REQmxUtzbqLUSnvUmD7hP80Xcgh1wRKbFvJnXpd/59cCCGESAIXXHABF1yQWA/gSvIpoqO1Hg5ujs25NECBV5nwKBtpei0jbB9wtGkUbnsBlHwlNnEIIYQQcVJfX+/3vc1mw2azxSmayMhtdxEd/3oUdv8zrKIKaKFtLk43QZd2D4tH2TseMSLNUkvWNSsgbXAENQghhBDJp7CwkMzMTN9r+fLl8Q4pbNLzKfpOKXh/VXhFgVrgiNlCiceNE7C2v7pq7+AMXIkGZjyk6LUoTLhVCtPm5JM6ckKvLkEIIYRIJgcOHMDhcPi+T5ZeT5DkU0RD8zFwNYdVVCmwUMgwl8KrUvCajuLmWLfkU3XOOjuPH1Unvtc0sGhuwM3IlM2Qel7vr0EIIYRIIg6Hwy/5TCaSfIq+M1nAbAGPJ2QxQ0GT9zTQPDSThtc7E6+qIdv067YJPDsEWjeT9oeYgj3IpFlg+JTeXoEQQgghYkSST9F3dgcUVsDn60MWM1QOLd6v49KrqTUpBuHBbAzFYkoFmtoKRTLgs7NTr4WR5/byYCGEEOLk1NjYyJ49e3zff/7552zbto3s7GyKiuKzIIs8cCSi47RFoIX+W0YBmubGrFLJ8RpYScVMC6aOxLO3ir4CX1sZm/mdhBBCiCTywQcfMHnyZCZPngzA0qVLmTx5Mvfdd1/cYpKeTxEdo86BQcVwbG/QImathhT9LTxqBIay4sVFhukPbXfSe9vjCXDeg5J4CiGESDjL3Ddgc6dHtU6nuxH4VdjlZ82ahVJ9+Uc2+iT5FNFhTYXRF8CmXwQtommQZlqHwo7CDMqDrrWGVX3I3NKSPE/4CSGEEAOdJJ8iejKH91xGA43WwM8NBdjYY3+mboXs0p7PK4QQQoiEIGM+RdS05g6jya5jAEaA/SrUTPJa2yYvGk5MhH5uvpNhU9t6XYUQQgiRFCT5FFHR2vole46/Qk22hVarhqG3JaBKnXiFYgDHTBk063acmg0PFoye+j11C3zt8WhdghBCCCFiQJJPERXHj2+i1XMYw2TGMLUljWEPb9agUU+lzuLAorzUWjOoM6ejCNyD2kaHKTdA7ug+xy6EEEKI2JHkU0SFUl6UUrSkWDg2yIJHD2O8JrSPAYUmkx2714mhabh0KynKCRCk91OH0rNh5v9E8QqEEEIIEQuSfIqocDgmYrXn0Zxm5liWhVab3pY2ap1eAXRsznMfJ9PbgIGGt30AqAbogfpPJ18HV/0OHEP741KEEEII0Y8k+RRRkZ4+hhEjl5LtHkTRwVYymoLfMO+ckHY8e6SjSDGc2AwXRc5qrIYLUN3foLZsmP09sKb105UIIYQQoj/JVEsiahypo3HUZqHqgzyrruHr0Qw0HlQHdAxMhhNTsJNMuQYc+dEIVwghhBBxID2fInrMNvA4Q5fpYSCoBsETz6xiOO2bvQhMCCGEEIlCkk8RPYc/AXdLj8V6tchXxlCY/X3IHtGbo4UQQgiRIOS2u4iez/+F0VoX3lPuQSgCdI4OnwEX/wJyR/WhZiGEEEIkAun5FNFT+wVaSy3QlkS6evn26tYzOukKSTyFEEKIk4QknyJ6bBlguDCAowwKuUJR+BPQmyGnLBrRCSGEECIBSPIposfdCsBxlcVGNZkalX1iPfcuOtZ/7zEJHTYFSr4S3TiFEEIIETeSfIqoMbChDFBoHCeLrUzkCFltO9WJV8e4TgONRi2FZs3mV4+vv9RshytfAK0vo0iFEEIIkUgk+RRR427w4nGayKKefI5whBy2MCHg+uweNAx0NE1hdEou/dLMeSsgI7e/wxZCCCFEDMnT7iJqXDmTUI1W0mwtfEXbzGcUUUBVt79wNMCNGaWbcWsmbIare2Ujz4PJC2IRthBCCCFiSHo+RdTYp5zNcfdg3G4rNuVhPLvJpiFgWQ1o1m0ctmbj39+pQclM+PovwWSJRdhCCCGEiCFJPkXUWDKyGHTJHEy48BohnnQ3QPMYuJSZAmcNKcrZNhw0Yzjc/DYs/CukD4ld4EIIIYSImaRJPktKStA0ze+1YsWKkMe0trZy6623MnjwYNLT07nsssuorq6OUcQDU+rm32C2gdUUYH13BYYHvC6wa14KvTVkGK1o6Oip2eiX/ByGjo990EIIIYSImaRJPgEefPBBKisrfa/FixeHLH/HHXfw17/+lZdffpkNGzbw5Zdfcumll8Yo2gHoo/+HCW/b15r/S9NA00E3g8UOugkwp6BZ7GjpQ2DGEhh5TvxiF0IIIURMJNUDRxkZGeTn54dVtq6ujlWrVvHCCy9wzjltSc2zzz7L2LFj2bRpE6effnp/hjrwtByHN5eHKKBByiC0zOEweh6MvRh2/hWUgpIzYcTMmIUqhBBCiPhJquRzxYoVPPTQQxQVFXHNNddwxx13YDYHvoQtW7bgdruZM2eOb1t5eTlFRUVs3LgxaPLpdDpxOp2+7+vr6wFwu9243e4oXk34Os4br/OH5eg+MKehdHu3XQrQv/MhpGb77/jKmBNfewLcpk9QSdEeA4i0R2KR9kgcA70tBup1J4OkST6XLFnClClTyM7O5t133+Wee+6hsrKSRx99NGD5qqoqrFYrWVlZftvz8vKoqqoKep7ly5fzwAMPdNv+2muvkZqa2qdr6Ku1a9fG9fw9GnYnDAuyb/2mmIYSCwnfHgOMtEdikfZIHAO1LZqbm+Mdgggirsnn3XffzcMPPxyyzI4dOygvL2fp0qW+bRMnTsRqtXLzzTezfPlybDZbiBoic8899/idq76+nsLCQubOnYvD4YjaeSLhdrtZu3Yt5513HhZLgk4/pBT8+3ew4y9Q8ymqpQ4GFaPd+A+wxjdpj7akaI8BRNojsUh7JI6B3hYddy5F4olr8nnnnXeycOHCkGVKS0sDbq+oqMDj8bBv3z7GjBnTbX9+fj4ul4va2lq/3s/q6uqQ40ZtNlvAZNZiscT9w5sIMYQ0fSEMnwTNxyBzGAwZG++I+lXCt8cAI+2RWKQ9EsdAbYuBeM3JIq7JZ25uLrm5vVs+cdu2bei6zpAhgeeDnDp1KhaLhXXr1nHZZZcBsGvXLvbv38+MGTN6HbMIQdNg2JR4RyGEEEKIBJYUYz43btzIe++9x+zZs8nIyGDjxo3ccccdLFiwgEGDBgFw6NAhzj33XJ5//nmmT59OZmYm3/jGN1i6dCnZ2dk4HA4WL17MjBkz5El3IYQQQog4SYrk02az8eKLL7Js2TKcTicjRozgjjvu8Bub6Xa72bVrl98A48ceewxd17nssstwOp2cf/75/PKXv4zHJQghhBBCCJIk+ZwyZQqbNoV+WrqkpASllN82u93OE088wRNPPNGf4QkhhBBCiDAl1QpHQgghhBAiuUnyKYQQQgghYkaSTyGEEEIIETOSfAohhBBCiJiR5FMIIYQQQsSMJJ9CCCGEECJmJPkUQgghhBAxI8mnEEIIIYSIGUk+hRBCCCFEzEjyKYQQQgghYkaSTyGEEEKIk9gTTzxBSUkJdrudiooKNm/eHNd4JPkUQgghhDhJvfTSSyxdupT777+frVu3MmnSJM4//3wOHz4ct5gk+RRCCCGEOEk9+uijLFq0iBtvvJFx48bx1FNPkZqayjPPPBO3mMxxO3OSUEoBUF9fH7cY3G43zc3N1NfXY7FY4haHaCPtkVikPRKLtEfiGOht0fHvdse/4/HgbGnstzq75iU2mw2bzea3zeVysWXLFu655x7fNl3XmTNnDhs3box6bOGS5LMHDQ0NABQWFsY5EiGEEEJEqqGhgczMzJie02q1kp+fzy+/Nbdf6k9PT++Wl9x///0sW7bMb1tNTQ1er5e8vDy/7Xl5eezcubNfYguHJJ89KCgo4MCBA2RkZKBpWlxiqK+vp7CwkAMHDuBwOOISgzhB2iOxSHskFmmPxDHQ20IpRUNDAwUFBTE/t91u5/PPP8flcvVL/UqpbjlJ117PRCbJZw90XWf48OHxDgMAh8MxIH+BJCppj8Qi7ZFYpD0Sx0Bui1j3eHZmt9ux2+1xOz9ATk4OJpOJ6upqv+3V1dXk5+fHKSp54EgIIYQQ4qRktVqZOnUq69at820zDIN169YxY8aMuMUlPZ9CCCGEECeppUuXcsMNNzBt2jSmT5/OypUraWpq4sYbb4xbTJJ8JgGbzcb999+fVOM5TmbSHolF2iOxSHskDmkLAXDllVdy5MgR7rvvPqqqqjj11FN59dVXuz2EFEuaiuccBEIIIYQQYkCRMZ9CCCGEECJmJPkUQgghhBAxI8mnEEIIIYSIGUk+hRBCCCFEzEjymWRKSkrQNM3vtWLFiniHNWA88cQTlJSUYLfbqaioYPPmzfEOaUBatmxZt89BeXl5vMMaMN566y3mz59PQUEBmqaxZs0av/1KKe677z6GDh1KSkoKc+bMYffu3fEJdgDoqT0WLlzY7fMyb968+AQrBJJ8JqUHH3yQyspK32vx4sXxDmlAeOmll1i6dCn3338/W7duZdKkSZx//vkcPnw43qENSKeccorf5+Dtt9+Od0gDRlNTE5MmTeKJJ54IuP/HP/4xjz/+OE899RTvvfceaWlpnH/++bS2tsY40oGhp/YAmDdvnt/n5fe//30MIxTCn8zzmYQyMjLiuizWQPXoo4+yaNEi38S8Tz31FH//+9955plnuPvuu+Mc3cBjNpvlcxAnF1xwARdccEHAfUopVq5cyb333svFF18MwPPPP09eXh5r1qzhqquuimWoA0Ko9uhgs9nk8yIShvR8JqEVK1YwePBgJk+ezE9+8hM8Hk+8QzrpuVwutmzZwpw5c3zbdF1nzpw5bNy4MY6RDVy7d++moKCA0tJSrr32Wvbv3x/vkATw+eefU1VV5fdZyczMpKKiQj4rcbR+/XqGDBnCmDFjuOWWWzh69Gi8QxIDmPR8JpklS5YwZcoUsrOzeffdd7nnnnuorKzk0UcfjXdoJ7Wamhq8Xm+3FSHy8vLYuXNnnKIauCoqKli9ejVjxoyhsrKSBx54gLPOOovt27eTkZER7/AGtKqqKoCAn5WOfSK25s2bx6WXXsqIESPYu3cv3/ve97jgggvYuHEjJpMp3uGJAUiSzwRw99138/DDD4css2PHDsrLy1m6dKlv28SJE7Fardx8880sX75cllATA0bnW4wTJ06koqKC4uJi/vCHP/CNb3wjjpEJkXg6D3WYMGECEydOZOTIkaxfv55zzz03jpGJgUqSzwRw5513snDhwpBlSktLA26vqKjA4/Gwb98+xowZ0w/RCYCcnBxMJhPV1dV+26urq2UcVQLIyspi9OjR7NmzJ96hDHgdn4fq6mqGDh3q215dXc2pp54ap6hEZ6WlpeTk5LBnzx5JPkVcSPKZAHJzc8nNze3Vsdu2bUPXdYYMGRLlqERnVquVqVOnsm7dOi655BIADMNg3bp13HbbbfENTtDY2MjevXu57rrr4h3KgDdixAjy8/NZt26dL9msr6/nvffe45ZbbolvcAKAgwcPcvToUb8/DoSIJUk+k8jGjRt57733mD17NhkZGWzcuJE77riDBQsWMGjQoHiHd9JbunQpN9xwA9OmTWP69OmsXLmSpqYm39PvInb+53/+h/nz51NcXMyXX37J/fffj8lk4uqrr453aANCY2OjXy/z559/zrZt28jOzqaoqIjbb7+dH/7wh5SVlTFixAh+8IMfUFBQ4PvDTURXqPbIzs7mgQce4LLLLiM/P5+9e/fy3e9+l1GjRnH++efHMWoxoCmRNLZs2aIqKipUZmamstvtauzYsepHP/qRam1tjXdoA8bPf/5zVVRUpKxWq5o+fbratGlTvEMakK688ko1dOhQZbVa1bBhw9SVV16p9uzZE++wBow333xTAd1eN9xwg1JKKcMw1A9+8AOVl5enbDabOvfcc9WuXbviG/RJLFR7NDc3q7lz56rc3FxlsVhUcXGxWrRokaqqqop32GIA05RSKl6JrxBCCCGEGFhknk8hhBBCCBEzknwKIYQQQoiYkeRTCCGEEELEjCSfQgghhBAiZiT5FEIIIYQQMSPJpxBCCCGEiBlJPoUQQgghRMxI8imEEEIIIWJGkk8hxElp4cKFSbGcY0lJCStXrox3GEIIETOSfAoxgM2aNYvbb7+92/bVq1eTlZXl+37ZsmVomsa8efO6lf3JT36CpmnMmjWr276DBw9itVoZP358wPNrmuZ7ZWZmcuaZZ/LGG28EjXf9+vW+8rquk5mZyeTJk/nud79LZWWl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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# The part of the code has been taken from https://github.com/NaziaFatima/iSOM_GSN\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mon May  6 15:20:11 2019\n",
        "\"\"\"\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "#    run_colorsExample()\n",
        "    import pandas as pd\n",
        "    import networkx as nx\n",
        "    import matplotlib.pyplot as plt\n",
        "    from sklearn.preprocessing import MinMaxScaler\n",
        "    import os, sys\n",
        "\n",
        "#    pos = [[9.5, 7.794228634059948],  [0, 5.196152422706632],  [9.5, 2.598076211353316],  [9, 5.196152422706632],  [6.5, 2.598076211353316],  [4.5, 7.794228634059948],  [0, 3.4641016151377553],  [9, 0.0],  [2, 6.9282032302755105],  [5.5, 7.794228634059948],  [5, 0.0],  [4, 5.196152422706632],  [0, 6.9282032302755105],  [1, 1.7320508075688776],  [0, 6.9282032302755105]]\n",
        "    pos = [[0.5, 7.794228634059948], [9, 6.9282032302755105], [3, 0.0], [5.5, 0.8660254037844388], [0, 5.196152422706632], [5, 5.196152422706632], [9, 5.196152422706632], [0.5, 2.598076211353316], [7.5, 7.794228634059948], [4.5, 7.794228634059948], [0, 0.0], [9, 0.0], [9.5, 7.794228634059948], [9.5, 2.598076211353316]]\n",
        "#    gene_list_top20 =['SPOP', 'TP53',  'FOXA1',  'CTNNB1',  'MED12',  'C16orf62',  'CLPTM1L',  'DPYSL2',  'NEIL1',  'SLC27A4',  'PITPNM2',  'PTEN', 'ATM',  'EMG1',  'ETV3',  'BRAF',  'NKX3-1',  'ZMYM3',  'OR4P4',  'SALL1']\n",
        "    gene_list_top14 = ['RUNX1', 'PIK3CA', 'GATA3', 'FOXA1', 'SF3B1', 'PTEN', 'CBFB', 'CDH1', 'MAP2K4', 'MAP3K1', 'ERBB2', 'NCOR1', 'FAM86B2', 'CDKN1B']\n",
        "    gene_list = gene_list_top14\n",
        "#    features_selected_withprefix_GE = ['GE_' + feature for feature in gene_list]\n",
        "#    features_selected_withprefix_DM = ['DM_' + feature for feature in gene_list]\n",
        "#    features_selected_withprefix_CN = ['CNA_' + feature for feature in gene_list]\n",
        "#    column_list = ['']\n",
        "#    column_list = column_list.append(pd.Index(features_selected_withprefix_GE))\n",
        "#    column_list = column_list.append(pd.Index(features_selected_withprefix_DM))\n",
        "#    column_list = column_list.append(pd.Index(features_selected_withprefix_CN))\n",
        "\n",
        "    pathGE = \"C:\\\\PR_Proj_Thesis\\\\NEW_SOM_Approach\\\\BRCA\\\\Mergefile_top20_norm.csv\"\n",
        "    # Read file\n",
        "    df = pd.read_csv(pathGE)\n",
        "\n",
        "    df1 = df.loc[df['TUMOR_STAGE'] == 'Stage IIIA']\n",
        "#    labels = df1['TUMOR_STAGE'].values\n",
        "#\n",
        "    df2 = df.loc[df['TUMOR_STAGE'] == 'Stage IIA']\n",
        "#    labels2 = df2['TUMOR_STAGE'].values\n",
        "#\n",
        "    df3 = df.loc[df['TUMOR_STAGE'] == 'Stage IIB']\n",
        "#    labels3 = df3['TUMOR_STAGE'].values\n",
        "\n",
        "    df1.drop(['TUMOR_STAGE','PATIENT_ID'],axis =1,inplace = True)\n",
        "    df2.drop(['TUMOR_STAGE','PATIENT_ID'],axis =1,inplace = True)\n",
        "    df3.drop(['TUMOR_STAGE','PATIENT_ID'],axis =1,inplace = True)\n",
        "\n",
        "    # applying scaling to make values between some range 0-1/-1-2 ,as need for Kohens SOM\n",
        "    scaler = MinMaxScaler(copy=True, feature_range=(0, 1))\n",
        "    df1 = pd.DataFrame(scaler.fit_transform(df1), columns=df1.columns)\n",
        "    df2 = pd.DataFrame(scaler.fit_transform(df2), columns=df2.columns)\n",
        "    df3 = pd.DataFrame(scaler.fit_transform(df3), columns=df3.columns)\n",
        "\n",
        "    col_num = 14\n",
        "    #Create node list of numbers then create lables and dict\n",
        "    node_list = [i for i in range(col_num)]\n",
        "    new_lbl = [str(j) for j in range(col_num)]\n",
        "    new_lbl_dict = dict(enumerate(new_lbl))\n",
        "\n",
        "    # loop through all rows and get RGB values for each patient  ----- 3A\n",
        "    row_count = df1.shape[0]\n",
        "\n",
        "    for i in range(row_count): #loop through all rows\n",
        "        nodecolor =[]\n",
        "        for j in range(len(gene_list)): # loop through all nodes (i.e 14 nodes)\n",
        "\n",
        "            r_prefix = 'GE_'+gene_list[j]\n",
        "            g_prefix = 'DM_'+gene_list[j]\n",
        "            b_prefix = 'CNA_'+gene_list[j]\n",
        "\n",
        "            #Check if tht column exixts\n",
        "\n",
        "            R =  round(df1[r_prefix][i],5) if (r_prefix in df1.columns) else 0.0\n",
        "            G =  round(df1[g_prefix][i],5) if (g_prefix in df1.columns) else 0.0\n",
        "            B =  round(df1[b_prefix][i],5) if (b_prefix in df1.columns) else 0.0\n",
        "\n",
        "            nodecolor.append([R,G,B])\n",
        "\n",
        "        G=nx.chvatal_graph()\n",
        "        try:\n",
        "            nx.draw_networkx_nodes(G,pos,\n",
        "                               nodelist=node_list,\n",
        "                               edgecolors = [0,0,0],\n",
        "                               node_color = nodecolor,\n",
        "                               node_size=500,\n",
        "                               alpha=0.8)\n",
        "\n",
        "            nx.draw_networkx_labels(G,pos,new_lbl_dict,font_size=10)\n",
        "\n",
        "            plt.axis('on')\n",
        "            filename = str(i)+'_Template.png'\n",
        "            path = \"./training/3A\"\n",
        "            plt.savefig(os.path.join(path,filename))#, bbox_inches='tight', dpi=72)\n",
        "        except:\n",
        "            print(\"row = \",i,\" node_color = \",nodecolor)\n",
        "\n",
        "        print((\"\\r Preparing Images... \"+str(int(i*100.0/row_count))+\"%\" ), end=' ')\n",
        "    print(\"Done ---- 3A!!\")\n",
        "# loop through all rows and get RGB values for each patient  ----- 2A\n",
        "    row_count = df2.shape[0]\n",
        "\n",
        "    for i in range(row_count): #loop through all rows\n",
        "        nodecolor =[]\n",
        "        for j in range(len(gene_list)): # loop through all nodes (i.e 14 nodes)\n",
        "\n",
        "            r_prefix = 'GE_'+gene_list[j]\n",
        "            g_prefix = 'DM_'+gene_list[j]\n",
        "            b_prefix = 'CNA_'+gene_list[j]\n",
        "\n",
        "            #Check if tht column exixts\n",
        "\n",
        "            R =  round(df2[r_prefix][i],5) if (r_prefix in df2.columns) else 0.0\n",
        "            G =  round(df2[g_prefix][i],5) if (g_prefix in df2.columns) else 0.0\n",
        "            B =  round(df2[b_prefix][i],5) if (b_prefix in df2.columns) else 0.0\n",
        "\n",
        "            nodecolor.append([R,G,B])\n",
        "\n",
        "        G=nx.chvatal_graph()\n",
        "        try:\n",
        "            nx.draw_networkx_nodes(G,pos,\n",
        "                               nodelist=node_list,\n",
        "                               edgecolors = [0,0,0],\n",
        "                               node_color = nodecolor,\n",
        "                               node_size=500,\n",
        "                               alpha=0.8)\n",
        "\n",
        "            nx.draw_networkx_labels(G,pos,new_lbl_dict,font_size=10)\n",
        "\n",
        "            plt.axis('on')\n",
        "            filename = str(i)+'_Template.png'\n",
        "            path = \"./training/2A\"\n",
        "            plt.savefig(os.path.join(path,filename))#, bbox_inches='tight', dpi=72)\n",
        "        except:\n",
        "            print(\"row = \",i,\" node_color = \",nodecolor)\n",
        "        print((\"\\r Preparing Images... \"+str(int(i*100.0/row_count))+\"%\" ), end=' ')\n",
        "    print(\"Done ---- 2A!!\")\n",
        "# loop through all rows and get RGB values for each patient  ----- 2B\n",
        "    row_count = df3.shape[0]\n",
        "\n",
        "    for i in range(row_count): #loop through all rows\n",
        "        nodecolor =[]\n",
        "        for j in range(len(gene_list)): # loop through all nodes (i.e 14 nodes)\n",
        "\n",
        "            r_prefix = 'GE_'+gene_list[j]\n",
        "            g_prefix = 'DM_'+gene_list[j]\n",
        "            b_prefix = 'CNA_'+gene_list[j]\n",
        "\n",
        "            #Check if tht column exixts\n",
        "\n",
        "            R =  round(df3[r_prefix][i],5) if (r_prefix in df3.columns) else 0.0\n",
        "            G =  round(df3[g_prefix][i],5) if (g_prefix in df3.columns) else 0.0\n",
        "            B =  round(df3[b_prefix][i],5) if (b_prefix in df3.columns) else 0.0\n",
        "\n",
        "            nodecolor.append([R,G,B])\n",
        "\n",
        "        G=nx.chvatal_graph()\n",
        "        try:\n",
        "            nx.draw_networkx_nodes(G,pos,\n",
        "                               nodelist=node_list,\n",
        "                               edgecolors = [0,0,0],\n",
        "                               node_color = nodecolor,\n",
        "                               node_size=500,\n",
        "                               alpha=0.8)\n",
        "\n",
        "            nx.draw_networkx_labels(G,pos,new_lbl_dict,font_size=10)\n",
        "\n",
        "            plt.axis('on')\n",
        "            filename = str(i)+'_Template.png'\n",
        "            path = \"./training/2B\"\n",
        "            plt.savefig(os.path.join(path,filename))#, bbox_inches='tight', dpi=72)\n",
        "        except:\n",
        "            print(\"row = \",i,\" node_color = \",nodecolor)\n",
        "        print((\"\\r Preparing Images... \"+str(int(i*100.0/row_count))+\"%\" ), end=' ')\n",
        "\n",
        "print(\"Done ---- whole!!\")"
      ],
      "metadata": {
        "id": "0HiPvHTDr834"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Wed Mar 13 04:46:46 2019\n",
        "\n",
        "\"\"\"\n",
        "\n",
        "import shutil\n",
        "import os\n",
        "import random\n",
        "def Movefiles(source,destination,num):\n",
        "\n",
        "    # get list of files from Source(training) folder\n",
        "    list_of_file = [os.path.abspath(os.path.join(source,x)) for x in os.listdir(source)]#os.path.abspath(x)\n",
        "    #Randomly select files and put it in test folder\n",
        "    for i in range(num):\n",
        "        cut = random.choice(list_of_file)\n",
        "        shutil.move(cut, destination)\n",
        "        list_of_file = [os.path.abspath(os.path.join(source,x)) for x in os.listdir(source)]#os.path.abspath(x)\n",
        "    print ('Done moving '+ str(num) +' files from source : ' ,source, ' to destination :',destination)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    num = 30\n",
        "    src_2A = 'PacMAp\\\\training\\\\2A'\n",
        "    dst_2A = 'PacMAp\\\\test\\\\2A'\n",
        "\n",
        "    src_2B = 'PacMap\\\\training\\\\2B'\n",
        "    dst_2B = 'PacMap\\\\test\\\\2B'\n",
        "\n",
        "    src_3A = 'PacMap\\\\training\\\\3A'\n",
        "    dst_3A = 'PacMap\\\\test\\\\3A'\n",
        "\n",
        "    Movefiles(src_2A,dst_2A,num)\n",
        "    Movefiles(src_2B,dst_2B,num)\n",
        "    Movefiles(src_3A,dst_3A,num)\n",
        "\n",
        "    print('*****************************DONE*************************************')"
      ],
      "metadata": {
        "id": "OtPAQUp9uzCC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Fri Feb 22 06:51:30 2019\n",
        "\"\"\"\n",
        "# Part 1 - Building the CNN\n",
        "\n",
        "# Importing the Keras libraries and packages\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Convolution2D,BatchNormalization,Dropout\n",
        "from keras.layers import MaxPooling2D\n",
        "from keras.layers import Flatten\n",
        "from keras.layers import Dense\n",
        "#Imports for collecting metrics\n",
        "import keras_metrics as km\n",
        "import tensorflow as tf\n",
        "\n",
        "from keras.callbacks import ModelCheckpoint\n",
        "#import tensorflow.keras as keras\n",
        "\n",
        "# Initialising the CNN\n",
        "classifier = Sequential()\n",
        "\n",
        "# Step 1 - Convolution\n",
        "classifier.add(Convolution2D(32, 3, 3, input_shape = (64, 64, 3), activation = 'relu'))\n",
        "classifier.add(BatchNormalization())\n",
        "# Step 2 - Pooling\n",
        "classifier.add(MaxPooling2D(pool_size = (2, 2),strides = (2,2)))\n",
        "classifier.add(Dropout(0.2))\n",
        "# Adding a second convolutional layer\n",
        "classifier.add(Convolution2D(32, 3, 3, activation = 'relu'))\n",
        "classifier.add(BatchNormalization())\n",
        "classifier.add(MaxPooling2D(pool_size = (2, 2),strides = (2,2)))\n",
        "classifier.add(Dropout(0.5))\n",
        "### Adding a 3rd convolutional layer\n",
        "#classifier.add(Convolution2D(32, 3, 3, activation = 'relu'))\n",
        "#classifier.add(BatchNormalization())\n",
        "#classifier.add(MaxPooling2D(pool_size = (2, 2),strides = (2,2)))\n",
        "#classifier.add(Dropout(0.2))\n",
        "## Adding a 4th convolutional layer\n",
        "#classifier.add(Convolution2D(32, 3, 3, activation = 'relu'))\n",
        "##classifier.add(BatchNormalization())\n",
        "#classifier.add(MaxPooling2D(pool_size = (2, 2)))\n",
        "#classifier.add(Dropout(0.2))\n",
        "# Step 3 - Flattening\n",
        "classifier.add(Flatten())\n",
        "\n",
        "\n",
        "# Step 4 - Full connection\n",
        "classifier.add(Dense(output_dim = 128, activation = 'relu'))\n",
        "classifier.add(BatchNormalization())\n",
        "classifier.add(Dropout(0.2))\n",
        "#classifier.add(Dense(output_dim =1, activation = 'sigmoid'))# binary\n",
        "classifier.add(Dense(output_dim =3, activation = 'softmax')) # catgorical\n",
        "# SET METRICS\n",
        "\n",
        "precision = km.categorical_precision()\n",
        "recall = km.categorical_recall()\n",
        "f1= km.categorical_f1_score()\n",
        "\n",
        "# Compiling the CNN\n",
        "#classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\n",
        "classifier.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy',precision,recall,f1])\n",
        "# # checkpoint\n",
        "filepath=\"weights-improvement-{epoch:02d}-{val_acc:.2f}.hdf5\"\n",
        "checkpoint = ModelCheckpoint(filepath, monitor='val_acc', verbose=1, save_best_only=True, mode='max')\n",
        "callbacks_list = [checkpoint]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# Part 2 - Fitting the CNN to the images\n",
        "\n",
        "from keras.preprocessing.image import ImageDataGenerator\n",
        "\n",
        "train_datagen = ImageDataGenerator()\n",
        "#                                    rescale = 1./255,\n",
        "#                                   shear_range = 0.2,\n",
        "#                                   zoom_range = 0.2,\n",
        "#                                   horizontal_flip = True,\n",
        "#                                   validation_split = 0.7)\n",
        "\n",
        "test_datagen = ImageDataGenerator()#rescale = 1./255)\n",
        "\n",
        "seed =7\n",
        "training_set = train_datagen.flow_from_directory('training',\n",
        "                                                 target_size = (64, 64),\n",
        "                                                 batch_size = 32,\n",
        "                                                 class_mode = 'categorical',\n",
        "                                                 shuffle =True,\n",
        "                                                 seed =seed)#     seed =seed)#,save_to_dir = 'generatedimages') #categorical,binary\n",
        "\n",
        "test_set = test_datagen.flow_from_directory('test',\n",
        "                                            target_size = (64, 64),\n",
        "                                            batch_size =32,\n",
        "                                            class_mode = 'categorical',\n",
        "                                            shuffle =False)#,   seed =seed)#categorical,binary\n",
        "with tf.Session() as s:\n",
        "    s.run(tf.global_variables_initializer())\n",
        "    classifier.fit_generator(training_set,\n",
        "                         samples_per_epoch = 150,\n",
        "                         nb_epoch =30,\n",
        "                         validation_data = test_set,\n",
        "                         nb_val_samples = 60,\n",
        "                         shuffle =True,\n",
        "                         callbacks=callbacks_list,\n",
        "                         verbose = 2)\n"
      ],
      "metadata": {
        "id": "MIiTyh1VvWp2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install pacmap\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from pandas import read_csv\n",
        "\n",
        "# loading dataset\n",
        "\n",
        "#read the features\n",
        "x = read_csv('2d_PCA_All.arff.csv')\n",
        "\n",
        "\n",
        "D = x.iloc[:,:2]\n",
        "E = x.iloc[:,2:3]\n",
        "X = D.to_numpy\n",
        "y = E.to_numpy\n",
        "# borderline-SMOTE for imbalanced dataset\n",
        "from collections import Counter\n",
        "from sklearn.datasets import make_classification\n",
        "from imblearn.over_sampling import BorderlineSMOTE\n",
        "from matplotlib import pyplot\n",
        "from numpy import where\n",
        "counter = Counter(E)\n",
        "print(counter)\n",
        "# scatter plot of examples by class label\n",
        "for label, _ in counter.items():\n",
        "\trow_ix = where(y == label)[0]\n",
        "\tpyplot.scatter(X[row_ix, 0], X[row_ix, 1], label=str(label))\n",
        "pyplot.legend()\n",
        "pyplot.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "id": "Ev2jNaqpxvnw",
        "outputId": "b8116d18-5f99-4b09-a74b-1f0e1176d089"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pacmap in /usr/local/lib/python3.10/dist-packages (0.7.1)\n",
            "Requirement already satisfied: scikit-learn>=0.20 in /usr/local/lib/python3.10/dist-packages (from pacmap) (1.2.2)\n",
            "Requirement already satisfied: numba>=0.57 in /usr/local/lib/python3.10/dist-packages (from pacmap) (0.58.1)\n",
            "Requirement already satisfied: annoy>=1.11 in /usr/local/lib/python3.10/dist-packages (from pacmap) (1.17.3)\n",
            "Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from pacmap) (1.23.5)\n",
            "Requirement already satisfied: llvmlite<0.42,>=0.41.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.57->pacmap) (0.41.1)\n",
            "Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20->pacmap) (1.11.4)\n",
            "Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20->pacmap) (1.3.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20->pacmap) (3.2.0)\n",
            "Counter({'class': 1})\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-14-9b98a9fb8ed5>\u001b[0m in \u001b[0;36m<cell line: 25>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     25\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcounter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     26\u001b[0m         \u001b[0mrow_ix\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwhere\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 27\u001b[0;31m         \u001b[0mpyplot\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrow_ix\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrow_ix\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     28\u001b[0m \u001b[0mpyplot\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlegend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m \u001b[0mpyplot\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mTypeError\u001b[0m: 'method' object is not subscriptable"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# grid search k value for SMOTE oversampling for imbalanced classification\n",
        "from numpy import mean\n",
        "from sklearn.datasets import make_classification\n",
        "from sklearn.model_selection import cross_val_score\n",
        "from sklearn.model_selection import RepeatedStratifiedKFold\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from imblearn.pipeline import Pipeline\n",
        "from imblearn.over_sampling import SMOTE\n",
        "from imblearn.under_sampling import RandomUnderSampler\n",
        "# define dataset\n",
        "X, y = make_classification(n_samples=10000, n_features=2, n_redundant=0,\n",
        "\tn_clusters_per_class=1, weights=[0.99], flip_y=0, random_state=1)\n",
        "# values to evaluate\n",
        "k_values = [1, 2, 3, 4, 5, 6, 7]\n",
        "for k in k_values:\n",
        "\t# define pipeline\n",
        "\tmodel = DecisionTreeClassifier()\n",
        "\tover = SMOTE(sampling_strategy=0.1, k_neighbors=k)\n",
        "\tunder = RandomUnderSampler(sampling_strategy=0.5)\n",
        "\tsteps = [('over', over), ('under', under), ('model', model)]\n",
        "\tpipeline = Pipeline(steps=steps)\n",
        "\t# evaluate pipeline\n",
        "\tcv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)\n",
        "\tscores = cross_val_score(pipeline, X, y, scoring='roc_auc', cv=cv, n_jobs=-1)\n",
        "\tscore = mean(scores)\n",
        "\tprint('> k=%d, Mean ROC AUC: %.3f' % (k, score))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6IcMxV1NzPv3",
        "outputId": "71174d44-664c-4a7e-affb-ec470e8c2d49"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "> k=1, Mean ROC AUC: 0.843\n",
            "> k=2, Mean ROC AUC: 0.833\n",
            "> k=3, Mean ROC AUC: 0.844\n",
            "> k=4, Mean ROC AUC: 0.853\n",
            "> k=5, Mean ROC AUC: 0.850\n",
            "> k=6, Mean ROC AUC: 0.842\n",
            "> k=7, Mean ROC AUC: 0.857\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Generate and plot a synthetic imbalanced classification dataset\n",
        "from collections import Counter\n",
        "from sklearn.datasets import make_classification\n",
        "from matplotlib import pyplot\n",
        "from numpy import where\n",
        "# define dataset\n",
        "X, y = make_classification(n_samples=10000, n_features=2, n_redundant=0,\n",
        "\tn_clusters_per_class=1, weights=[0.99], flip_y=0, random_state=1)\n",
        "# summarize class distribution\n",
        "counter = Counter(y)\n",
        "print(counter)\n",
        "# scatter plot of examples by class label\n",
        "for label, _ in counter.items():\n",
        "\trow_ix = where(y == label)[0]\n",
        "\tpyplot.scatter(X[row_ix, 0], X[row_ix, 1], label=str(label))\n",
        "pyplot.legend()\n",
        "pyplot.show()"
      ],
      "metadata": {
        "id": "QSXDQOtGylJL",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "outputId": "baa6194d-ceab-4512-cd54-76d3b9129f7a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Counter({0: 9900, 1: 100})\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.type\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "id": "VIpB1hgnzy5s",
        "outputId": "e8287607-5932-42bc-a179-b03bbf66ead0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-9-d801ec0ccf34>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mX\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m   5900\u001b[0m         ):\n\u001b[1;32m   5901\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5902\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mobject\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getattribute__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5903\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5904\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__setattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: 'DataFrame' object has no attribute 'type'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "KdUtbMiUz1_2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.datasets import fetch_openml\n",
        "# Load the MNIST dataset\n",
        "mnist = fetch_openml('mnist_784', version=1, return_X_y=True, as_frame=False, parser='auto')\n",
        "X = mnist.data / 255.0  # Scale pixel values to [0, 1]\n",
        "y = mnist.target.astype(int)\n",
        "\n",
        "\n",
        "# Instantiate PACMAP object\n",
        "pacmap = PACMAP1(n_components=2, max_iter=100, tol=1e-5, verbose=True)\n",
        "\n",
        "# Fit and transform the data\n",
        "Y = pacmap.fit_transform(X)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 211
        },
        "id": "RZs6oAJYyldy",
        "outputId": "551e3da5-a752-46c1-e823-43a9fa12dceb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "'tuple' object has no attribute 'data'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-2-96a0a030c83b>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# Load the MNIST dataset\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mmnist\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfetch_openml\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'mnist_784'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mversion\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_X_y\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mas_frame\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparser\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'auto'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmnist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0;36m255.0\u001b[0m  \u001b[0;31m# Scale pixel values to [0, 1]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmnist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtarget\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: 'tuple' object has no attribute 'data'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Plot the 2D representation\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.scatter(Y[:, 0], Y[:, 1], c=y, cmap=plt.cm.get_cmap('tab10', 10), s=5)\n",
        "plt.colorbar(label='Digit', ticks=range(10))\n",
        "plt.title('2D Representation of MNIST Dataset')\n",
        "plt.xlabel('Dimension 1')\n",
        "plt.ylabel('Dimension 2')\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 228
        },
        "id": "fOT3d9BbyA-8",
        "outputId": "0a86da8a-d110-4d53-d1d0-eb54e7eabdc0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'Y' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-cadb75b9de8c>\u001b[0m in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Plot the 2D representation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m6\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mY\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mc\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcmap\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_cmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'tab10'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m10\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0ms\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolorbar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'Digit'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mticks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'2D Representation of MNIST Dataset'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'Y' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "from scipy.spatial.distance import pdist, squareform\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.datasets import fetch_openml\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "\n",
        "class PACMAP:\n",
        "    def __init__(self, n_components=2, max_iter=100, tol=1e-5, verbose=False):\n",
        "        self.n_components = n_components\n",
        "        self.max_iter = max_iter\n",
        "        self.tol = tol\n",
        "        self.verbose = verbose\n",
        "\n",
        "    def fit_transform(self, X):\n",
        "        # Step 1: Initialize low-dimensional representation randomly\n",
        "        np.random.seed(42)\n",
        "        Y = np.random.rand(X.shape[0], self.n_components)\n",
        "\n",
        "        # Step 2: Optimization loop\n",
        "        for iter_ in range(self.max_iter):\n",
        "            # Step 2a: Compute pairwise distances in high-dimensional space\n",
        "            D_high = squareform(pdist(X))\n",
        "\n",
        "            # Step 2b: Compute pairwise distances in low-dimensional space\n",
        "            D_low = squareform(pdist(Y))\n",
        "\n",
        "            # Step 2c: Compute weights based on distances\n",
        "            weights = np.exp(-D_low ** 2)\n",
        "\n",
        "            # Step 2d: Update coordinates of low-dimensional representation\n",
        "            Y_new = np.zeros_like(Y)\n",
        "            for i in range(X.shape[0]):\n",
        "                Y_new[i] = np.dot(weights[i], Y) / np.sum(weights[i])\n",
        "\n",
        "            # Step 2e: Compute change in coordinates\n",
        "            delta = np.linalg.norm(Y - Y_new)\n",
        "\n",
        "            # Step 2f: Update low-dimensional representation\n",
        "            Y = Y_new\n",
        "\n",
        "            # Step 2g: Check convergence\n",
        "            if delta < self.tol:\n",
        "                if self.verbose:\n",
        "                    print(f\"Converged after {iter_ + 1} iterations.\")\n",
        "                break\n",
        "\n",
        "            # Step 2h: Print progress if verbose\n",
        "            if self.verbose and (iter_ + 1) % 10 == 0:\n",
        "                print(f\"Iteration {iter_ + 1}: Delta = {delta:.6f}\")\n",
        "\n",
        "        return Y\n",
        "\n",
        "# Load MNIST dataset\n",
        "mnist = fetch_openml('mnist_784', version=1, return_X_y=True, as_frame=False, parser='auto')\n",
        "X, y = mnist\n",
        "\n",
        "\n",
        "# Instantiate PACMAP object\n",
        "pacmap = PACMAP(n_components=2, max_iter=100, tol=1e-5, verbose=True)\n",
        "\n",
        "# Fit and transform the data\n",
        "Y = pacmap.fit_transform(X_normalized)\n",
        "\n",
        "# Visualize the 2D representation\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.scatter(Y[:, 0], Y[:, 1], c=y, cmap=plt.cm.get_cmap('tab10', 10), s=5)\n",
        "plt.colorbar(label='Digit', ticks=range(10))\n",
        "plt.title('2D Representation of MNIST Dataset')\n",
        "plt.xlabel('Dimension 1')\n",
        "plt.ylabel('Dimension 2')\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "pmqBD4xA0HmJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install SimpSOM\n",
        "if __name__ == \"__main__\":\n",
        "#    run_colorsExample()\n",
        "    import pandas as pd\n",
        "    import networkx as nx\n",
        "    import SimpSOM as sps\n",
        "    import matplotlib.pyplot as plt\n",
        "    from sklearn.preprocessing import MinMaxScaler\n",
        "    pathGE = \"/content/clinical_smote_did_no_class.csv\"\n",
        "\n",
        "    # Read file\n",
        "    df = pd.read_csv(pathGE)\n",
        "    # Fill na\n",
        "    df.fillna(0,inplace = True)\n",
        "    #df.drop(['TUMOR_STAGE','PATIENT_ID'],axis =1,inplace = True)\n",
        "    raw_data = df.values\n",
        "    #Create transpose ; such that each column is one patient\n",
        "    raw_data = raw_data.T\n",
        "\n",
        "    # applying scaling to make values between some range 0-1/-1-2 ,as need for Kohens SOM\n",
        "    scaler = MinMaxScaler(copy=True, feature_range=(0, 1))\n",
        "    scaler.fit(raw_data)\n",
        "    raw_data= scaler.transform(raw_data)\n",
        "\n",
        "    ht = 10\n",
        "    wd = 10\n",
        "    no_of_epocs =15000\n",
        "\n",
        "    net = sps.somNet(ht,wd, raw_data, PBC=False)\n",
        "\n",
        "    net.colorEx=False\n",
        "\n",
        "    Learning_rate = 0.05\n",
        "    net.PCI=True #The weights will be initialised with PCA.\n",
        "    net.train(Learning_rate,no_of_epocs)\n",
        "    col_num = raw_data.shape[0]\n",
        "\n",
        "    node_list = [i for i in range(col_num)]\n",
        "    new_lbl = [str(j) for j in range(col_num)]\n",
        "#    bmu = net.project(raw_data, labels=new_lbl,name ='SOM',path=p)\n",
        "    bmu = net.project(raw_data, labels=new_lbl)#,name ='SOM')\n",
        "    #print(bmu)\n",
        "    pos = bmu\n",
        "    G=nx.chvatal_graph()\n",
        "    x = np.linspace(0, 1, 10)\n",
        "    nx.draw_networkx_nodes(G,pos,\n",
        "                       nodelist=node_list,\n",
        "                       node_color = x + 1,\n",
        "                       edgecolors = [0,0,0],\n",
        "#                       node_color=[[1,1,0],[1,1,0],[1,1,0],[1,1,0],[1,1,0],'b','r','c','y','k','m'],\n",
        "#                       node_color=[[1,1,0],[1,1,0],[1,1,0],[1,1,0],[1,1,0],'b','r','c','y','k','m'],\n",
        "                       node_size=1000,alpha=0.8)\n",
        "    #nx.draw_networkx_edges(G,pos,width=1.0,alpha=0.5)\n",
        "\n",
        "    new_lbl_dict = dict(enumerate(new_lbl))\n",
        "    nx.draw_networkx_labels(G,pos,new_lbl_dict,font_size=10)\n",
        "\n",
        "    plt.axis('on')\n",
        "    plt.show()\n",
        "    print(\"EPOCHS  = \" , no_of_epocs)\n",
        "    print(\"POS = \" , pos)\n",
        "#    plt.savefig('Template.png', bbox_inches='tight', dpi=72)\n",
        "    print('***************************DONE!!*****************************')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 682
        },
        "id": "y2SskDjn3-lP",
        "outputId": "8563bdbc-1108-410a-cd59-af05c38dcf7f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: SimpSOM in /usr/local/lib/python3.10/dist-packages (2.0.2)\n",
            "Requirement already satisfied: numpy>=1.19.5 in /usr/local/lib/python3.10/dist-packages (from SimpSOM) (1.25.2)\n",
            "Requirement already satisfied: scikit-learn>=0.22.2.post1 in /usr/local/lib/python3.10/dist-packages (from SimpSOM) (1.2.2)\n",
            "Requirement already satisfied: matplotlib>=3.3.3 in /usr/local/lib/python3.10/dist-packages (from SimpSOM) (3.7.1)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.3->SimpSOM) (1.2.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.3->SimpSOM) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.3->SimpSOM) (4.51.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.3->SimpSOM) (1.4.5)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.3->SimpSOM) (24.0)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.3->SimpSOM) (9.4.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.3->SimpSOM) (3.1.2)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.3->SimpSOM) (2.8.2)\n",
            "Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.22.2.post1->SimpSOM) (1.11.4)\n",
            "Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.22.2.post1->SimpSOM) (1.4.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.22.2.post1->SimpSOM) (3.5.0)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib>=3.3.3->SimpSOM) (1.16.0)\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "ModuleNotFoundError",
          "evalue": "No module named 'SimpSOM'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-2-7af0f9b8f146>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0;32mimport\u001b[0m \u001b[0mpandas\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0;32mimport\u001b[0m \u001b[0mnetworkx\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mnx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m     \u001b[0;32mimport\u001b[0m \u001b[0mSimpSOM\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0msps\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m     \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m     \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpreprocessing\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mMinMaxScaler\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'SimpSOM'",
            "",
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"
          ],
          "errorDetails": {
            "actions": [
              {
                "action": "open_url",
                "actionText": "Open Examples",
                "url": "/notebooks/snippets/importing_libraries.ipynb"
              }
            ]
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pacmap = PACMAP(n_components=2, max_iter=100, tol=1e-5, verbose=True)\n",
        "\n",
        "# Fit and transform the data\n",
        "#Y = pacmap.fit_transform(X_normalized)\n",
        "\n",
        "# Visualize the 2D representation\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.scatter(X[:, 0], X[:, 1], c=y, cmap=plt.cm.get_cmap('tab10', 10), s=5)\n",
        "plt.colorbar(label='Digit', ticks=range(10))\n",
        "plt.title('2D Representation of MNIST Dataset')\n",
        "plt.xlabel('Dimension 1')\n",
        "plt.ylabel('Dimension 2')\n",
        "plt.grid(True)\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "1sHt8DOacQqM"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}